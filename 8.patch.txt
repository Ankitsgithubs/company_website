From 906422d22a3b676221bfbcbe38b90e99c60eddb8 Mon Sep 17 00:00:00 2001
From: sanskargupta <sanskarg348@gmail.com>
Date: Mon, 28 Nov 2022 14:49:32 +0530
Subject: [PATCH] Edited .gitignore

---
 .gitignore                                  |    8 -
 atri_app/.eslintrc.json                     |    3 +
 atri_app/.gitignore                         |    2 +
 atri_app/app-node/src/getAppText.tsx        |   30 +
 atri_app/app/public/index.html              |   17 +
 atri_app/app/src/App.jsx                    |   15 +
 atri_app/app/src/hooks/useIoStore.js        |   44 +
 atri_app/app/src/hooks/useStore.js          | 4890 +++++++++++
 atri_app/app/src/index.jsx                  |   16 +
 atri_app/app/src/page-cbs/Home.js           | 1817 ++++
 atri_app/app/src/page-cbs/Showcase.js       | 4156 +++++++++
 atri_app/app/src/page-cbs/trial.js          | 2590 ++++++
 atri_app/app/src/page-css/Home.css          | 1107 +++
 atri_app/app/src/page-css/Showcase.css      | 3301 +++++++
 atri_app/app/src/page-css/trial.css         | 1360 +++
 atri_app/app/src/pages/Home.jsx             |  572 ++
 atri_app/app/src/pages/Showcase.jsx         | 1281 +++
 atri_app/app/src/pages/Trial.jsx            |  829 ++
 atri_app/app/src/styles.css                 |    4 +
 atri_app/app/src/utils/callbackFactory.ts   |  265 +
 atri_app/app/src/utils/endpoints.ts         |    9 +
 atri_app/app/src/utils/fetchPageProps.ts    |   14 +
 atri_app/app/src/utils/handleRedirection.ts |   13 +
 atri_app/app/src/utils/navigate.ts          |   35 +
 atri_app/atri-app-env.d.ts                  |   79 +
 atri_app/atri-app-info.json                 |    3 +
 atri_app/atri-build-info.json               |   16 +
 atri_app/atri-server-info.json              |   19 +
 atri_app/package.json                       |   30 +
 atri_app/server/src/forwarder.ts            |   69 +
 atri_app/server/src/index.tsx               |  221 +
 atri_app/server/src/utils.tsx               |  115 +
 atri_app/server/tsconfig.json               |   28 +
 controllers/routes/Showcase/atri.py         | 8491 +++++++++++++++++++
 controllers/routes/atri.py                  | 5217 ++++++++++++
 controllers/routes/trial/atri.py            | 7291 ++++++++++++++++
 36 files changed, 43949 insertions(+), 8 deletions(-)
 create mode 100644 atri_app/.eslintrc.json
 create mode 100644 atri_app/.gitignore
 create mode 100644 atri_app/app-node/src/getAppText.tsx
 create mode 100644 atri_app/app/public/index.html
 create mode 100644 atri_app/app/src/App.jsx
 create mode 100644 atri_app/app/src/hooks/useIoStore.js
 create mode 100644 atri_app/app/src/hooks/useStore.js
 create mode 100644 atri_app/app/src/index.jsx
 create mode 100644 atri_app/app/src/page-cbs/Home.js
 create mode 100644 atri_app/app/src/page-cbs/Showcase.js
 create mode 100644 atri_app/app/src/page-cbs/trial.js
 create mode 100644 atri_app/app/src/page-css/Home.css
 create mode 100644 atri_app/app/src/page-css/Showcase.css
 create mode 100644 atri_app/app/src/page-css/trial.css
 create mode 100644 atri_app/app/src/pages/Home.jsx
 create mode 100644 atri_app/app/src/pages/Showcase.jsx
 create mode 100644 atri_app/app/src/pages/Trial.jsx
 create mode 100644 atri_app/app/src/styles.css
 create mode 100644 atri_app/app/src/utils/callbackFactory.ts
 create mode 100644 atri_app/app/src/utils/endpoints.ts
 create mode 100644 atri_app/app/src/utils/fetchPageProps.ts
 create mode 100644 atri_app/app/src/utils/handleRedirection.ts
 create mode 100644 atri_app/app/src/utils/navigate.ts
 create mode 100644 atri_app/atri-app-env.d.ts
 create mode 100644 atri_app/atri-app-info.json
 create mode 100644 atri_app/atri-build-info.json
 create mode 100644 atri_app/atri-server-info.json
 create mode 100644 atri_app/package.json
 create mode 100644 atri_app/server/src/forwarder.ts
 create mode 100644 atri_app/server/src/index.tsx
 create mode 100644 atri_app/server/src/utils.tsx
 create mode 100644 atri_app/server/tsconfig.json
 create mode 100644 controllers/routes/Showcase/atri.py
 create mode 100644 controllers/routes/atri.py
 create mode 100644 controllers/routes/trial/atri.py

diff --git a/.gitignore b/.gitignore
index 036b46c..9f11b75 100755
--- a/.gitignore
+++ b/.gitignore
@@ -1,9 +1 @@
-atri_app/*
-!atri_app/app
-atri_app/app/*
-!atri_app/app/src
-atri_app/app/src/*
-!atri_app/app/src/custom
 .idea/
-controllers/**/atri.py
-.DS_Store
\ No newline at end of file
diff --git a/atri_app/.eslintrc.json b/atri_app/.eslintrc.json
new file mode 100644
index 0000000..6c0ab87
--- /dev/null
+++ b/atri_app/.eslintrc.json
@@ -0,0 +1,3 @@
+{
+  "extends": ["react-app", "prettier"]
+}
diff --git a/atri_app/.gitignore b/atri_app/.gitignore
new file mode 100644
index 0000000..04c01ba
--- /dev/null
+++ b/atri_app/.gitignore
@@ -0,0 +1,2 @@
+node_modules/
+dist/
\ No newline at end of file
diff --git a/atri_app/app-node/src/getAppText.tsx b/atri_app/app-node/src/getAppText.tsx
new file mode 100644
index 0000000..852f3ca
--- /dev/null
+++ b/atri_app/app-node/src/getAppText.tsx
@@ -0,0 +1,30 @@
+// @ts-ignore
+global.window = undefined;
+
+import App from "../../app/src/App";
+import ReactDOMServer from "react-dom/server";
+import React from "react";
+import { StaticRouter } from "react-router-dom/server";
+import { GlobalContext } from "@atrilabs/core/lib/reactUtilities";
+import { Portals } from "@atrilabs/core/lib/types";
+
+function renderRoute(App: React.FC, route: string, portals: Portals): string {
+  const appStr = ReactDOMServer.renderToString(
+    <GlobalContext.Provider value={{ window, portals }}>
+      <StaticRouter location={route}>
+        <App />
+      </StaticRouter>
+    </GlobalContext.Provider>
+  );
+  return appStr;
+}
+
+export function getAppText(url: string, appHtmlContent: string) {
+  const portals: Portals = [];
+  const appText = renderRoute(App, url, portals);
+  const finalText = appHtmlContent.replace(
+    '<div id="root" style="height: 100vh"></div>',
+    `<div id="root" style="height: 100vh">${appText}</div>`
+  );
+  return finalText;
+}
diff --git a/atri_app/app/public/index.html b/atri_app/app/public/index.html
new file mode 100644
index 0000000..d9b611e
--- /dev/null
+++ b/atri_app/app/public/index.html
@@ -0,0 +1,17 @@
+<!DOCTYPE html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <style>@import url('https://fonts.googleapis.com/css2?family=PT+Sans:wght@400;700&display=swap');
+</style>
+		<style>@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;600;700&display=swap');
+</style>
+		<style>@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500;600;700&display=swap');</style>
+    <title>Atri App</title>
+  </head>
+  <body>
+    <div id="root" style="height: 100vh"></div>
+  </body>
+</html>
diff --git a/atri_app/app/src/App.jsx b/atri_app/app/src/App.jsx
new file mode 100644
index 0000000..9cf4605
--- /dev/null
+++ b/atri_app/app/src/App.jsx
@@ -0,0 +1,15 @@
+import { Routes, Route } from "react-router-dom";
+import "./styles.css";
+import Home from "./pages/Home.jsx";
+import Trial from "./pages/Trial.jsx";
+import Showcase from "./pages/Showcase.jsx";
+
+export default function App() {
+  return (
+    <Routes>
+      <Route path="/" element={<Home />} />
+<Route path="/trial" element={<Trial />} />
+<Route path="/Showcase" element={<Showcase />} />
+    </Routes>
+  );
+}
diff --git a/atri_app/app/src/hooks/useIoStore.js b/atri_app/app/src/hooks/useIoStore.js
new file mode 100644
index 0000000..ed45f11
--- /dev/null
+++ b/atri_app/app/src/hooks/useIoStore.js
@@ -0,0 +1,44 @@
+import create from "zustand";
+
+const useIoStore = create((set) => {
+  return {
+  "Home": {},
+  "trial": {
+    "Upload2": {
+      "io": {
+        "files": {
+          "type": "files",
+          "mode": "upload"
+        }
+      }
+    },
+    "Upload1": {
+      "io": {
+        "files": {
+          "type": "files",
+          "mode": "upload"
+        }
+      }
+    }
+  },
+  "Showcase": {
+    "Upload3": {
+      "io": {
+        "files": {
+          "type": "files",
+          "mode": "upload"
+        }
+      }
+    },
+    "Upload4": {
+      "io": {
+        "files": {
+          "type": "files",
+          "mode": "upload"
+        }
+      }
+    }
+  }
+}});
+
+export default useIoStore;
diff --git a/atri_app/app/src/hooks/useStore.js b/atri_app/app/src/hooks/useStore.js
new file mode 100644
index 0000000..d039a9a
--- /dev/null
+++ b/atri_app/app/src/hooks/useStore.js
@@ -0,0 +1,4890 @@
+import create from "zustand";
+
+// unsafe merge state
+// and mew properties will added or existing properties will be changed
+// but the type of value of the property must not change
+function mergeState(baseState, newState) {
+  if (
+    typeof newState === "object" &&
+    !Array.isArray(newState) &&
+    newState !== null
+  ) {
+    const keys = Object.keys(newState);
+    keys.forEach((key) => {
+      // create a new key in base if not exists
+      if (!(key in baseState)) {
+        baseState[key] = {};
+      }
+      if (typeof newState[key] === "object" && !Array.isArray(newState[key]))
+        mergeState(baseState[key], newState[key]);
+      else baseState[key] = newState[key];
+    });
+  }
+}
+
+const useStore = create((set) => {
+  return {
+    setPage: (pageName, newState) =>
+      set((state) => {
+        const pageState = JSON.parse(JSON.stringify(state[pageName]));
+        mergeState(pageState, newState);
+        return { [pageName]: pageState };
+      }),
+  };
+});
+
+export function updateStoreStateFromController(pageName, newState) {
+  useStore.getState().setPage(pageName, newState);
+}
+
+const desktopModeProps = {
+  ...{
+  "Home": {
+    "Flex1": {
+      "callbacks": {}
+    },
+    "Flex14": {
+      "callbacks": {}
+    },
+    "Flex5": {
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "internal",
+              "url": "/"
+            }
+          }
+        ]
+      }
+    },
+    "Flex10": {
+      "callbacks": {}
+    },
+    "Flex154": {
+      "callbacks": {}
+    },
+    "Flex12": {
+      "callbacks": {}
+    },
+    "Flex9": {
+      "callbacks": {}
+    },
+    "Menu1": {
+      "custom": {
+        "open": false,
+        "iconHeight": 24,
+        "iconWidth": 36,
+        "alignRight": true,
+        "src": "/app-assets/menu_new.svg",
+        "gap": ""
+      },
+      "callbacks": {}
+    },
+    "Flex6": {
+      "callbacks": {}
+    },
+    "Flex16": {
+      "callbacks": {}
+    },
+    "Flex15": {
+      "callbacks": {}
+    },
+    "Flex243": {
+      "callbacks": {}
+    },
+    "Flex160": {
+      "callbacks": {}
+    },
+    "Flex77": {
+      "callbacks": {}
+    },
+    "Flex62": {
+      "callbacks": {}
+    },
+    "Flex60": {
+      "callbacks": {}
+    },
+    "Flex51": {
+      "callbacks": {}
+    },
+    "Flex47": {
+      "callbacks": {}
+    },
+    "Flex52": {
+      "callbacks": {}
+    },
+    "Flex48": {
+      "callbacks": {}
+    },
+    "Flex53": {
+      "callbacks": {}
+    },
+    "Flex49": {
+      "callbacks": {}
+    },
+    "Flex54": {
+      "callbacks": {}
+    },
+    "Flex50": {
+      "callbacks": {}
+    },
+    "Flex250": {
+      "callbacks": {}
+    },
+    "Flex251": {
+      "callbacks": {}
+    },
+    "Flex252": {
+      "callbacks": {}
+    },
+    "Flex259": {
+      "callbacks": {}
+    },
+    "Flex258": {
+      "callbacks": {}
+    },
+    "Flex256": {
+      "callbacks": {}
+    },
+    "Flex86": {
+      "callbacks": {}
+    },
+    "Flex85": {
+      "callbacks": {}
+    },
+    "Flex84": {
+      "callbacks": {}
+    },
+    "Flex241": {
+      "callbacks": {}
+    },
+    "Flex195": {
+      "callbacks": {}
+    },
+    "Flex193": {
+      "callbacks": {}
+    },
+    "Flex183": {
+      "callbacks": {}
+    },
+    "Flex242": {
+      "callbacks": {}
+    },
+    "Flex229": {
+      "callbacks": {}
+    },
+    "Flex227": {
+      "callbacks": {}
+    },
+    "Flex228": {
+      "callbacks": {}
+    },
+    "Flex232": {
+      "callbacks": {}
+    },
+    "Flex230": {
+      "callbacks": {}
+    },
+    "Flex231": {
+      "callbacks": {}
+    },
+    "Flex271": {
+      "callbacks": {}
+    },
+    "Flex269": {
+      "callbacks": {}
+    },
+    "Flex270": {
+      "callbacks": {}
+    },
+    "Flex223": {
+      "callbacks": {}
+    },
+    "Flex219": {
+      "callbacks": {}
+    },
+    "Flex207": {
+      "callbacks": {}
+    },
+    "Flex198": {
+      "callbacks": {}
+    },
+    "Flex199": {
+      "callbacks": {}
+    },
+    "Flex208": {
+      "callbacks": {}
+    },
+    "Flex226": {
+      "callbacks": {}
+    },
+    "Flex224": {
+      "callbacks": {}
+    },
+    "Flex225": {
+      "callbacks": {}
+    },
+    "Image2": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_without_bg.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox2": {
+      "custom": {
+        "text": "Atri Labs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox10": {
+      "custom": {
+        "text": "Showcase"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "internal",
+              "url": "/Showcase"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox11": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox155": {
+      "custom": {
+        "text": "Tutorials"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox156": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/blog",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image37": {
+      "custom": {
+        "alt": "github",
+        "src": "/app-assets/github_darkmode.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Button2": {
+      "custom": {
+        "text": "Get Started"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/category/getting-started",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox5": {
+      "custom": {
+        "text": "Tutorials"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/tutorials/bkg_swapper/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox6": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/blog/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox7": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox8": {
+      "custom": {
+        "text": "Showcase"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox14": {
+      "custom": {
+        "text": "Build better apps faster"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox16": {
+      "custom": {
+        "text": "Fewer lines of code. Better code quality. Minimal learning curve."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox160": {
+      "custom": {
+        "text": "OPEN SOURCE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image66": {
+      "custom": {
+        "alt": "github logo",
+        "src": "/app-assets/github%20star%20button.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image38": {
+      "custom": {
+        "alt": "intro",
+        "src": "/app-assets/optimized_intro.gif"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox63": {
+      "custom": {
+        "text": "OPEN SOURCE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox54": {
+      "custom": {
+        "text": "Discussions"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine/discussions",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox55": {
+      "custom": {
+        "text": "Contribute"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine#how-to-contribute",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox64": {
+      "custom": {
+        "text": "SHOWCASE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox56": {
+      "custom": {
+        "text": "Repo traffic history"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps/traffic-history",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox57": {
+      "custom": {
+        "text": "Personal blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps/personal_blog",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox58": {
+      "custom": {
+        "text": "Ecommerce website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps/full_stack_ecommerce_website",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox65": {
+      "custom": {
+        "text": "RESOURCES"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox59": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/blog",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox60": {
+      "custom": {
+        "text": "Tutorials"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox61": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox66": {
+      "custom": {
+        "text": "ABOUT"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox62": {
+      "custom": {
+        "text": "Conference talks"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/conferences",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image76": {
+      "custom": {
+        "alt": "linkedin",
+        "src": "/app-assets/linkedin.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://www.linkedin.com/company/atri-labs",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image77": {
+      "custom": {
+        "alt": "twitter",
+        "src": "/app-assets/twitter.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://twitter.com/atrilabs",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image78": {
+      "custom": {
+        "alt": "youtube",
+        "src": "/app-assets/youtube.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://www.youtube.com/channel/UC1uR2Q5x_8olWS_Y4PdK1Bw",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image79": {
+      "custom": {
+        "alt": "slack",
+        "src": "/app-assets/slack.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://join.slack.com/t/atricommunity/shared_invite/zt-1e756m1at-bZBxngvw7KWWO0riI4pc0w",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox230": {
+      "custom": {
+        "text": "Full stack web development framework to build Progressive Web Apps faster"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image85": {
+      "custom": {
+        "alt": "github",
+        "src": "/app-assets/github%20star%20button.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image84": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_without_bg.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox229": {
+      "custom": {
+        "text": "Atri Labs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox95": {
+      "custom": {
+        "text": "Copyright © 2022 Pulastya, Inc."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox93": {
+      "custom": {
+        "text": "Privacy Policy"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox94": {
+      "custom": {
+        "text": "Terms of Use"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image63": {
+      "custom": {
+        "alt": "made with atri",
+        "src": "/app-assets/made_with_atri_2.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox185": {
+      "custom": {
+        "text": "Developer approved stack for the entire product team"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox186": {
+      "custom": {
+        "text": "A new approach to full-stack development"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image60": {
+      "custom": {
+        "alt": "feature_3",
+        "src": "/app-assets/feature_3.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox213": {
+      "custom": {
+        "text": "BETTER CODE QUALITY"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox214": {
+      "custom": {
+        "text": "Reduce compliance breaches by using our object model which serves as a single source of truth for both frontend and backend"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox215": {
+      "custom": {
+        "text": "Use something better than REST APIs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox216": {
+      "custom": {
+        "text": "Access to productivity tools"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox217": {
+      "custom": {
+        "text": "REDUCED DEVELOPMENT TIME"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox218": {
+      "custom": {
+        "text": "Get the best of both no-code and code worlds by using productivity tools such as visual editor and simultaneously writing custom React code"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image59": {
+      "custom": {
+        "alt": "feature_2",
+        "src": "/app-assets/feature_1.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image96": {
+      "custom": {
+        "alt": "feature_2",
+        "src": "/app-assets/feature_2.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox237": {
+      "custom": {
+        "text": "Write backend in your favorite language, be it Python or NodeJS.  Use our utility functions to speed up your development"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox238": {
+      "custom": {
+        "text": "MINIMAL LEARNING CURVE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox239": {
+      "custom": {
+        "text": "Go beyond JavaScript world"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input4": {
+      "custom": {
+        "value": "",
+        "placeholder": "Enter your email"
+      },
+      "callbacks": {}
+    },
+    "Button16": {
+      "custom": {
+        "text": "Subscribe"
+      },
+      "callbacks": {
+        "onClick": []
+      }
+    },
+    "TextBox192": {
+      "custom": {
+        "text": "Thanks for subscribing to our newsletter.   You will receive monthly updates from us right in your inbox."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox201": {
+      "custom": {
+        "text": "Keep up to date with our new feature releases,  blog posts on web development and our journey of creating a new web-development framework"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox202": {
+      "custom": {
+        "text": "Subscribe to our free monthly newsletter"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox209": {
+      "custom": {
+        "text": "Install and get started"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox210": {
+      "custom": {
+        "text": "Get started with the full-stack Atri framework in three easy steps and follow our documentation to create your first Atri app "
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image56": {
+      "custom": {
+        "alt": "installation",
+        "src": "/app-assets/installation_figure.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    }
+  },
+  "trial": {
+    "Flex115": {
+      "callbacks": {}
+    },
+    "Flex113": {
+      "callbacks": {}
+    },
+    "Flex106": {
+      "callbacks": {}
+    },
+    "Flex99": {
+      "callbacks": {}
+    },
+    "Flex100": {
+      "callbacks": {}
+    },
+    "Flex107": {
+      "callbacks": {}
+    },
+    "Flex101": {
+      "callbacks": {}
+    },
+    "Flex102": {
+      "callbacks": {}
+    },
+    "Flex108": {
+      "callbacks": {}
+    },
+    "Flex114": {
+      "callbacks": {}
+    },
+    "Flex109": {
+      "callbacks": {}
+    },
+    "Flex103": {
+      "callbacks": {}
+    },
+    "Flex110": {
+      "callbacks": {}
+    },
+    "Menu2": {
+      "custom": {
+        "open": true,
+        "iconHeight": 24,
+        "iconWidth": 24,
+        "alignRight": true
+      },
+      "callbacks": {}
+    },
+    "Flex98": {
+      "callbacks": {}
+    },
+    "Flex104": {
+      "callbacks": {}
+    },
+    "Flex111": {
+      "callbacks": {}
+    },
+    "Flex105": {
+      "callbacks": {}
+    },
+    "Flex112": {
+      "callbacks": {}
+    },
+    "Overlay2": {
+      "custom": {
+        "open": true
+      },
+      "callbacks": {}
+    },
+    "Flex712": {
+      "callbacks": {}
+    },
+    "Flex710": {
+      "callbacks": {}
+    },
+    "Flex722": {
+      "callbacks": {}
+    },
+    "Flex760": {
+      "callbacks": {}
+    },
+    "Flex759": {
+      "callbacks": {}
+    },
+    "Flex756": {
+      "callbacks": {}
+    },
+    "Flex751": {
+      "callbacks": {}
+    },
+    "Flex752": {
+      "callbacks": {}
+    },
+    "Flex757": {
+      "callbacks": {}
+    },
+    "Flex753": {
+      "callbacks": {}
+    },
+    "Flex754": {
+      "callbacks": {}
+    },
+    "Flex755": {
+      "callbacks": {}
+    },
+    "Flex758": {
+      "callbacks": {}
+    },
+    "Flex711": {
+      "callbacks": {}
+    },
+    "Flex738": {
+      "callbacks": {}
+    },
+    "Flex736": {
+      "callbacks": {}
+    },
+    "Flex737": {
+      "callbacks": {}
+    },
+    "Flex741": {
+      "callbacks": {}
+    },
+    "Flex739": {
+      "callbacks": {}
+    },
+    "Flex740": {
+      "callbacks": {}
+    },
+    "Flex744": {
+      "callbacks": {}
+    },
+    "Flex742": {
+      "callbacks": {}
+    },
+    "Flex743": {
+      "callbacks": {}
+    },
+    "Flex747": {
+      "callbacks": {}
+    },
+    "Flex745": {
+      "callbacks": {}
+    },
+    "Flex746": {
+      "callbacks": {}
+    },
+    "Flex136": {
+      "callbacks": {}
+    },
+    "Flex133": {
+      "callbacks": {}
+    },
+    "Flex129": {
+      "callbacks": {}
+    },
+    "Flex121": {
+      "callbacks": {}
+    },
+    "Flex134": {
+      "callbacks": {}
+    },
+    "Flex130": {
+      "callbacks": {}
+    },
+    "Flex122": {
+      "callbacks": {}
+    },
+    "Flex135": {
+      "callbacks": {}
+    },
+    "Flex131": {
+      "callbacks": {}
+    },
+    "Flex123": {
+      "callbacks": {}
+    },
+    "Flex124": {
+      "callbacks": {}
+    },
+    "Flex116": {
+      "callbacks": {}
+    },
+    "Flex132": {
+      "callbacks": {}
+    },
+    "Flex125": {
+      "callbacks": {}
+    },
+    "Flex117": {
+      "callbacks": {}
+    },
+    "Flex126": {
+      "callbacks": {}
+    },
+    "Flex118": {
+      "callbacks": {}
+    },
+    "Flex127": {
+      "callbacks": {}
+    },
+    "Flex119": {
+      "callbacks": {}
+    },
+    "Flex128": {
+      "callbacks": {}
+    },
+    "Flex120": {
+      "callbacks": {}
+    },
+    "Flex152": {
+      "callbacks": {}
+    },
+    "Flex150": {
+      "callbacks": {}
+    },
+    "Flex147": {
+      "callbacks": {}
+    },
+    "Flex143": {
+      "callbacks": {}
+    },
+    "Flex139": {
+      "callbacks": {}
+    },
+    "Flex144": {
+      "callbacks": {}
+    },
+    "Flex140": {
+      "callbacks": {}
+    },
+    "Flex148": {
+      "callbacks": {}
+    },
+    "Flex145": {
+      "callbacks": {}
+    },
+    "Flex141": {
+      "callbacks": {}
+    },
+    "Flex137": {
+      "callbacks": {}
+    },
+    "Flex146": {
+      "callbacks": {}
+    },
+    "Flex142": {
+      "callbacks": {}
+    },
+    "Flex138": {
+      "callbacks": {}
+    },
+    "Flex151": {
+      "callbacks": {}
+    },
+    "Flex149": {
+      "callbacks": {}
+    },
+    "Image29": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/landing_page_img.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image26": {
+      "custom": {
+        "alt": "installation",
+        "src": "/app-assets/installation_figure.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox107": {
+      "custom": {
+        "text": "Get started with the full-stack Atri framework in three easy steps and follow our documentation to create your first Atri app "
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox108": {
+      "custom": {
+        "text": "Install and get started"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox109": {
+      "custom": {
+        "text": "$ atri start"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox110": {
+      "custom": {
+        "text": "$ pipenv shell"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox111": {
+      "custom": {
+        "text": "$ pipenv install atri"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox112": {
+      "custom": {
+        "text": "Ready to get started?"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox113": {
+      "custom": {
+        "text": "Get started with the full-stack Atri framework in three easy steps"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox116": {
+      "custom": {
+        "text": "Fewer lines of code. Better code quality. Minimal learning curve."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox117": {
+      "custom": {
+        "text": "Build better apps faster"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox114": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox115": {
+      "custom": {
+        "text": "Showcase"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox103": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox104": {
+      "custom": {
+        "text": "Talks"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox105": {
+      "custom": {
+        "text": "About"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox106": {
+      "custom": {
+        "text": "Contact Me"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button7": {
+      "custom": {
+        "text": "Get Started"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image27": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_only.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox118": {
+      "custom": {
+        "text": "Atri Labs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image28": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_without_bg.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image314": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/cross-svgrepo-com%20(1).svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image313": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Screen%20Shot%202022-11-06%20at%202.45%201.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox493": {
+      "custom": {
+        "text": "Creator Name"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image310": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/user.jpeg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image311": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image312": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button229": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button230": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button231": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox494": {
+      "custom": {
+        "text": "Personal blog with minimalist design. It includes four pages - landing page, blog, talks and about page."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox495": {
+      "custom": {
+        "text": "Title of the website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button228": {
+      "custom": {
+        "text": "Submit"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox482": {
+      "custom": {
+        "text": "Creator's Image"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Upload2": {
+      "custom": {
+        "multiple": false,
+        "showFilename": true,
+        "text": "Upload",
+        "disabled": false
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendFile": {
+              "self": true,
+              "props": [
+                "io",
+                "files"
+              ]
+            }
+          }
+        ]
+      }
+    },
+    "TextBox483": {
+      "custom": {
+        "text": "Demo Image"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Upload1": {
+      "custom": {
+        "multiple": false,
+        "showFilename": true,
+        "text": "Upload",
+        "disabled": false
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendFile": {
+              "self": true,
+              "props": [
+                "io",
+                "files"
+              ]
+            }
+          }
+        ]
+      }
+    },
+    "TextBox484": {
+      "custom": {
+        "text": "Tags"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input11": {
+      "custom": {
+        "value": "",
+        "placeholder": "open-source, ocr, ml"
+      },
+      "callbacks": {}
+    },
+    "TextBox492": {
+      "custom": {
+        "text": "*Add the tags seperated by ,"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input12": {
+      "custom": {
+        "value": "",
+        "placeholder": "https://atri-apps.github.io/"
+      },
+      "callbacks": {}
+    },
+    "TextBox485": {
+      "custom": {
+        "text": "Published Url"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox486": {
+      "custom": {
+        "text": "Github Url"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input13": {
+      "custom": {
+        "value": "",
+        "placeholder": "https://github.com/"
+      },
+      "callbacks": {}
+    },
+    "Input14": {
+      "custom": {
+        "value": "",
+        "placeholder": "Name....."
+      },
+      "callbacks": {}
+    },
+    "TextBox487": {
+      "custom": {
+        "text": "Creator Name"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox488": {
+      "custom": {
+        "text": "About"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input15": {
+      "custom": {
+        "value": "",
+        "placeholder": "About Text...."
+      },
+      "callbacks": {}
+    },
+    "Input16": {
+      "custom": {
+        "value": "",
+        "placeholder": "Title of the website....."
+      },
+      "callbacks": {}
+    },
+    "TextBox489": {
+      "custom": {
+        "text": "Title"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button8": {
+      "custom": {
+        "text": ""
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox138": {
+      "custom": {
+        "text": "Copyright © 2022 Pulastya, Inc."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox129": {
+      "custom": {
+        "text": "Terms of Use"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox130": {
+      "custom": {
+        "text": "Privacy Policy"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox139": {
+      "custom": {
+        "text": "Copyright © 2022 Pulastya, Inc."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox131": {
+      "custom": {
+        "text": "Privacy Policy"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox132": {
+      "custom": {
+        "text": "Terms of Use"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image31": {
+      "custom": {
+        "alt": "slack",
+        "src": "/app-assets/slack.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image32": {
+      "custom": {
+        "alt": "youtube",
+        "src": "/app-assets/youtube.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image33": {
+      "custom": {
+        "alt": "twitter",
+        "src": "/app-assets/twitter.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image34": {
+      "custom": {
+        "alt": "linkedin",
+        "src": "/app-assets/linkedin.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image35": {
+      "custom": {
+        "alt": "github",
+        "src": "/app-assets/github.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox133": {
+      "custom": {
+        "text": "Full-stack framework to  build Progressive Web Apps faster"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image30": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_without_bg.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox119": {
+      "custom": {
+        "text": "Atri Labs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox134": {
+      "custom": {
+        "text": "ABOUT"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox120": {
+      "custom": {
+        "text": "Conference talks"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox135": {
+      "custom": {
+        "text": "RESOURCES"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox121": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox122": {
+      "custom": {
+        "text": "Tutorials"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox123": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox136": {
+      "custom": {
+        "text": "SHOWCASE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox124": {
+      "custom": {
+        "text": "Ecommerce website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox125": {
+      "custom": {
+        "text": "Personal blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox126": {
+      "custom": {
+        "text": "Repo traffic history"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox137": {
+      "custom": {
+        "text": "OPEN SOURCE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox127": {
+      "custom": {
+        "text": "Contribute"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox128": {
+      "custom": {
+        "text": "Discussions"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox151": {
+      "custom": {
+        "text": "RESOURCES"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox145": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox146": {
+      "custom": {
+        "text": "Tutorials"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox147": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox152": {
+      "custom": {
+        "text": "ABOUT"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox148": {
+      "custom": {
+        "text": "Conference talks"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox149": {
+      "custom": {
+        "text": "OPEN SOURCE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox140": {
+      "custom": {
+        "text": "Discussions"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox141": {
+      "custom": {
+        "text": "Contribute"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox150": {
+      "custom": {
+        "text": "SHOWCASE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox142": {
+      "custom": {
+        "text": "Repo traffic history"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox143": {
+      "custom": {
+        "text": "Personal blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox144": {
+      "custom": {
+        "text": "Ecommerce website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox154": {
+      "custom": {
+        "text": "Full-stack framework to  build Progressive Web Apps faster"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image36": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_without_bg.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox153": {
+      "custom": {
+        "text": "Atri Labs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    }
+  },
+  "Showcase": {
+    "Flex462": {
+      "callbacks": {}
+    },
+    "Overlay3": {
+      "custom": {
+        "open": true
+      },
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Flex786": {
+      "callbacks": {}
+    },
+    "Flex784": {
+      "callbacks": {}
+    },
+    "Flex779": {
+      "callbacks": {}
+    },
+    "Flex770": {
+      "callbacks": {}
+    },
+    "Flex771": {
+      "callbacks": {}
+    },
+    "Flex780": {
+      "callbacks": {}
+    },
+    "Flex772": {
+      "callbacks": {}
+    },
+    "Flex773": {
+      "callbacks": {}
+    },
+    "Flex781": {
+      "callbacks": {}
+    },
+    "Flex774": {
+      "callbacks": {}
+    },
+    "Flex775": {
+      "callbacks": {}
+    },
+    "Flex782": {
+      "callbacks": {}
+    },
+    "Flex776": {
+      "callbacks": {}
+    },
+    "Flex777": {
+      "callbacks": {}
+    },
+    "Flex785": {
+      "callbacks": {}
+    },
+    "Flex783": {
+      "callbacks": {}
+    },
+    "Flex778": {
+      "callbacks": {}
+    },
+    "Flex769": {
+      "callbacks": {}
+    },
+    "Flex766": {
+      "callbacks": {}
+    },
+    "Flex767": {
+      "callbacks": {}
+    },
+    "Tag_Flex_1": {
+      "callbacks": {}
+    },
+    "Tag_Flex_2": {
+      "callbacks": {}
+    },
+    "Tag_Flex_3": {
+      "callbacks": {}
+    },
+    "Flex768": {
+      "callbacks": {}
+    },
+    "Flex764": {
+      "callbacks": {}
+    },
+    "Flex765": {
+      "callbacks": {}
+    },
+    "Flex463": {
+      "callbacks": {}
+    },
+    "Flex466": {
+      "callbacks": {}
+    },
+    "Flex467": {
+      "callbacks": {}
+    },
+    "Filter1": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Filter2": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Filter3": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Filter4": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Filter5": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Filter6": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Filter7": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Filter8": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Filter9": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Flex468": {
+      "callbacks": {}
+    },
+    "Flex469": {
+      "callbacks": {}
+    },
+    "Card_1": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex481": {
+      "callbacks": {}
+    },
+    "Flex482": {
+      "callbacks": {}
+    },
+    "Flex483": {
+      "callbacks": {}
+    },
+    "Card_Tag_1_a": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Card_Tag_1_b": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_1_c": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Flex484": {
+      "callbacks": {}
+    },
+    "Flex485": {
+      "callbacks": {}
+    },
+    "Flex486": {
+      "callbacks": {}
+    },
+    "Card_2": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex528": {
+      "callbacks": {}
+    },
+    "Flex525": {
+      "callbacks": {}
+    },
+    "Flex523": {
+      "callbacks": {}
+    },
+    "Flex524": {
+      "callbacks": {}
+    },
+    "Flex527": {
+      "callbacks": {}
+    },
+    "Flex657": {
+      "callbacks": {}
+    },
+    "Card_Tag_2_c": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_2_b": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_2_a": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Card_3": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex535": {
+      "callbacks": {}
+    },
+    "Flex532": {
+      "callbacks": {}
+    },
+    "Flex534": {
+      "callbacks": {}
+    },
+    "Flex530": {
+      "callbacks": {}
+    },
+    "Flex531": {
+      "callbacks": {}
+    },
+    "Flex661": {
+      "callbacks": {}
+    },
+    "Card_Tag_3_c": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_3_b": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_3_a": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex646": {
+      "callbacks": {}
+    },
+    "Card_6": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex640": {
+      "callbacks": {}
+    },
+    "Flex632": {
+      "callbacks": {}
+    },
+    "Flex625": {
+      "callbacks": {}
+    },
+    "Flex626": {
+      "callbacks": {}
+    },
+    "Flex633": {
+      "callbacks": {}
+    },
+    "Flex673": {
+      "callbacks": {}
+    },
+    "Card_Tag_6_c": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_6_b": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_6_a": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Card_5": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex641": {
+      "callbacks": {}
+    },
+    "Flex635": {
+      "callbacks": {}
+    },
+    "Flex636": {
+      "callbacks": {}
+    },
+    "Flex627": {
+      "callbacks": {}
+    },
+    "Flex628": {
+      "callbacks": {}
+    },
+    "Flex669": {
+      "callbacks": {}
+    },
+    "Card_Tag_5_c": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_5_b": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_5_a": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Card_4": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex642": {
+      "callbacks": {}
+    },
+    "Flex637": {
+      "callbacks": {}
+    },
+    "Flex629": {
+      "callbacks": {}
+    },
+    "Flex630": {
+      "callbacks": {}
+    },
+    "Flex639": {
+      "callbacks": {}
+    },
+    "Flex665": {
+      "callbacks": {}
+    },
+    "Card_Tag_4_c": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_4_b": {
+      "callbacks": {},
+      "styles": {
+        "display": "none"
+      }
+    },
+    "Card_Tag_4_a": {
+      "callbacks": {},
+      "styles": {
+        "display": "flex"
+      }
+    },
+    "Flex674": {
+      "callbacks": {}
+    },
+    "Flex675": {
+      "callbacks": {}
+    },
+    "Flex706": {
+      "callbacks": {}
+    },
+    "Flex624": {
+      "callbacks": {}
+    },
+    "Flex621": {
+      "callbacks": {}
+    },
+    "Flex620": {
+      "callbacks": {}
+    },
+    "Menu7": {
+      "custom": {
+        "open": false,
+        "iconHeight": 24,
+        "iconWidth": 36,
+        "alignRight": true,
+        "src": "/app-assets/menu_new.svg",
+        "gap": ""
+      },
+      "callbacks": {}
+    },
+    "Flex618": {
+      "callbacks": {}
+    },
+    "Flex619": {
+      "callbacks": {}
+    },
+    "Flex623": {
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "internal",
+              "url": "/"
+            }
+          }
+        ]
+      }
+    },
+    "Flex647": {
+      "callbacks": {}
+    },
+    "Flex705": {
+      "callbacks": {}
+    },
+    "Flex702": {
+      "callbacks": {}
+    },
+    "Flex703": {
+      "callbacks": {}
+    },
+    "Flex699": {
+      "callbacks": {}
+    },
+    "Flex692": {
+      "callbacks": {}
+    },
+    "Flex704": {
+      "callbacks": {}
+    },
+    "Flex700": {
+      "callbacks": {}
+    },
+    "Flex693": {
+      "callbacks": {}
+    },
+    "Flex687": {
+      "callbacks": {}
+    },
+    "Flex686": {
+      "callbacks": {}
+    },
+    "Flex685": {
+      "callbacks": {}
+    },
+    "Flex694": {
+      "callbacks": {}
+    },
+    "Flex701": {
+      "callbacks": {}
+    },
+    "Flex695": {
+      "callbacks": {}
+    },
+    "Flex688": {
+      "callbacks": {}
+    },
+    "Flex696": {
+      "callbacks": {}
+    },
+    "Flex689": {
+      "callbacks": {}
+    },
+    "Flex697": {
+      "callbacks": {}
+    },
+    "Flex690": {
+      "callbacks": {}
+    },
+    "Flex698": {
+      "callbacks": {}
+    },
+    "Flex691": {
+      "callbacks": {}
+    },
+    "TextBox361": {
+      "custom": {
+        "text": "Showcase"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox362": {
+      "custom": {
+        "text": "Explore the websites built using Atri framework"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button116": {
+      "custom": {
+        "text": "Add your site"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Button235": {
+      "custom": {
+        "text": "Submit"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox499": {
+      "custom": {
+        "text": "Title"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input19": {
+      "custom": {
+        "value": "",
+        "placeholder": "Title of the website....."
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input20": {
+      "custom": {
+        "value": "",
+        "placeholder": "About Text...."
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox500": {
+      "custom": {
+        "text": "About"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox501": {
+      "custom": {
+        "text": "Creator Name"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input21": {
+      "custom": {
+        "value": "",
+        "placeholder": "Name....."
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input22": {
+      "custom": {
+        "value": "",
+        "placeholder": "https://github.com/"
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox502": {
+      "custom": {
+        "text": "Github Url"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox503": {
+      "custom": {
+        "text": "Published Url"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input23": {
+      "custom": {
+        "value": "",
+        "placeholder": "https://atri-apps.github.io/"
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox504": {
+      "custom": {
+        "text": "*Add the tags seperated by ,"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Input24": {
+      "custom": {
+        "value": "",
+        "placeholder": "open-source, ocr, ml"
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox505": {
+      "custom": {
+        "text": "Tags"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Upload3": {
+      "custom": {
+        "multiple": false,
+        "showFilename": true,
+        "text": "Upload",
+        "disabled": false
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendFile": {
+              "self": true,
+              "props": [
+                "io",
+                "files"
+              ]
+            }
+          }
+        ]
+      }
+    },
+    "TextBox506": {
+      "custom": {
+        "text": "Demo Image"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Upload4": {
+      "custom": {
+        "multiple": false,
+        "showFilename": true,
+        "text": "Upload",
+        "disabled": false
+      },
+      "callbacks": {
+        "onChange": [
+          {
+            "sendFile": {
+              "self": true,
+              "props": [
+                "io",
+                "files"
+              ]
+            }
+          }
+        ]
+      }
+    },
+    "TextBox507": {
+      "custom": {
+        "text": "Creator's Image"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image319": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/cross-svgrepo-com%20(1).svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image318": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Screen%20Shot%202022-11-06%20at%202.45%201.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox497": {
+      "custom": {
+        "text": "Title of the website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox498": {
+      "custom": {
+        "text": "Personal blog with minimalist design. It includes four pages - landing page, blog, talks and about page."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Tag_1": {
+      "custom": {
+        "text": ""
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Tag_2": {
+      "custom": {
+        "text": ""
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Tag_3": {
+      "custom": {
+        "text": ""
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image315": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image316": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image317": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/user.jpeg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox496": {
+      "custom": {
+        "text": "Creator Name"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox363": {
+      "custom": {
+        "text": "FILTERS"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox364": {
+      "custom": {
+        "text": "9 results"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_1": {
+      "custom": {
+        "text": "ocr"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_2": {
+      "custom": {
+        "text": "machine-learning"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_3": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_4": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_5": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_6": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_7": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_8": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Filter_Btn_9": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Image_1": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/image-7-compressed.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Title_1": {
+      "custom": {
+        "text": "Traffic History"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Text_1": {
+      "custom": {
+        "text": "Inspired by star-history.com, we have created [traffic-history.com] to help open-source maintainers in keeping tabs on their repo's traffic!"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_1_a_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_1_b_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_1_c_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Github_1": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Deploy_1": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Image_1": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/christopher-campbell-rDEOVtE7vOs-unsplash.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Name_1": {
+      "custom": {
+        "text": "Darshita Chaturvedi"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Image_2": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/image-6-compressed.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Name_2": {
+      "custom": {
+        "text": "Sanskar Gupta"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Image_2": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/christopher-campbell-rDEOVtE7vOs-unsplash.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Deploy_2": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Github_2": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Text_2": {
+      "custom": {
+        "text": "Full Stack Website for your Restaurant"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Title_2": {
+      "custom": {
+        "text": "Restaurante X"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_2_c_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_2_b_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_2_a_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Image_3": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/image-4-compressed.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Title_3": {
+      "custom": {
+        "text": "Personal Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Text_3": {
+      "custom": {
+        "text": "Personal blog with minimalist design."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Github_3": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Deploy_3": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Image_3": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/christopher-campbell-rDEOVtE7vOs-unsplash.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Name_3": {
+      "custom": {
+        "text": "Darshita Chaturvedi"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_3_c_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_3_b_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_3_a_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Image_6": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/image-5-compressed.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Name_6": {
+      "custom": {
+        "text": "Darshita Chaturvedi"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Image_6": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/christopher-campbell-rDEOVtE7vOs-unsplash.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Deploy_6": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Github_6": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Text_6": {
+      "custom": {
+        "text": "This is a skeleton repositery for Software Developers or Machine Learning Engineers who want to put a nice portfolio on the web and showcase their projects"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Title_6": {
+      "custom": {
+        "text": "Portfolio Website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_6_c_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_6_b_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_6_a_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Image_5": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/image-2-compressed.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Title_5": {
+      "custom": {
+        "text": "Codely X"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Text_5": {
+      "custom": {
+        "text": "This is a Ed-Tech website with awesome design"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Github_5": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Deploy_5": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Image_5": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/christopher-campbell-rDEOVtE7vOs-unsplash.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Name_5": {
+      "custom": {
+        "text": "Sanskar Gupta"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_5_c_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_5_b_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_5_a_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Image_4": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/image-1-compressed.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Name_4": {
+      "custom": {
+        "text": "Sanskar Gupta"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Creator_Image_4": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/christopher-campbell-rDEOVtE7vOs-unsplash.jpg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Deploy_4": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/Vector.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Github_4": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/git.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Text_4": {
+      "custom": {
+        "text": "Full Stack Ecommerce Website with dynamic product's and pagination support."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Title_4": {
+      "custom": {
+        "text": "E-commerce Website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_4_c_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_4_b_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Card_Tag_4_a_Text": {
+      "custom": {
+        "text": "open-source"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image303": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/aiga_left_arrow_bg.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image304": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/aiga_right_arrow_bg.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox474": {
+      "custom": {
+        "text": "1 of 2"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox453": {
+      "custom": {
+        "text": "Contribution 1-6"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image278": {
+      "custom": {
+        "alt": "github",
+        "src": "/app-assets/github_darkmode.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox430": {
+      "custom": {
+        "text": "Showcase"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox431": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Button200": {
+      "custom": {
+        "text": "Get Started"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/category/getting-started",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox438": {
+      "custom": {
+        "text": "Atri Labs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image279": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_without_bg.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox448": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/blog",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox449": {
+      "custom": {
+        "text": "Tutorials"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox450": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox451": {
+      "custom": {
+        "text": "Showcase"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "internal",
+              "url": "/Showcase"
+            }
+          }
+        ]
+      }
+    },
+    "Image300": {
+      "custom": {
+        "alt": "made with atri",
+        "src": "/app-assets/made_with_atri_2.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox472": {
+      "custom": {
+        "text": "Copyright © 2022 Pulastya, Inc."
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox466": {
+      "custom": {
+        "text": "Terms of Use"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox467": {
+      "custom": {
+        "text": "Privacy Policy"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox456": {
+      "custom": {
+        "text": "Full stack web development framework to build Progressive Web Apps faster"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image295": {
+      "custom": {
+        "alt": "github",
+        "src": "/app-assets/github%20star%20button.svg"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox455": {
+      "custom": {
+        "text": "Atri Labs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image294": {
+      "custom": {
+        "alt": "No preview available",
+        "src": "/app-assets/logo_without_bg.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "Image296": {
+      "custom": {
+        "alt": "slack",
+        "src": "/app-assets/slack.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://join.slack.com/t/atricommunity/shared_invite/zt-1e756m1at-bZBxngvw7KWWO0riI4pc0w",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image297": {
+      "custom": {
+        "alt": "youtube",
+        "src": "/app-assets/youtube.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://www.youtube.com/channel/UC1uR2Q5x_8olWS_Y4PdK1Bw",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image298": {
+      "custom": {
+        "alt": "twitter",
+        "src": "/app-assets/twitter.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://twitter.com/atrilabs",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "Image299": {
+      "custom": {
+        "alt": "linkedin",
+        "src": "/app-assets/linkedin.png"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://www.linkedin.com/company/atri-labs",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox468": {
+      "custom": {
+        "text": "ABOUT"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox457": {
+      "custom": {
+        "text": "Conference talks"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/conferences",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox469": {
+      "custom": {
+        "text": "RESOURCES"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox458": {
+      "custom": {
+        "text": "Docs"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox459": {
+      "custom": {
+        "text": "Tutorials"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox460": {
+      "custom": {
+        "text": "Blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://docs.atrilabs.com/blog",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox470": {
+      "custom": {
+        "text": "SHOWCASE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox461": {
+      "custom": {
+        "text": "Ecommerce website"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps/full_stack_ecommerce_website",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox462": {
+      "custom": {
+        "text": "Personal blog"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps/personal_blog",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox463": {
+      "custom": {
+        "text": "Repo traffic history"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Apps/traffic-history",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox471": {
+      "custom": {
+        "text": "OPEN SOURCE"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "sendEventData": true
+          }
+        ]
+      }
+    },
+    "TextBox464": {
+      "custom": {
+        "text": "Contribute"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine#how-to-contribute",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    },
+    "TextBox465": {
+      "custom": {
+        "text": "Discussions"
+      },
+      "callbacks": {
+        "onClick": [
+          {
+            "navigate": {
+              "type": "external",
+              "url": "https://github.com/Atri-Labs/atrilabs-engine/discussions",
+              "target": "_blank"
+            }
+          }
+        ]
+      }
+    }
+  }
+}};
+
+useStore.setState(desktopModeProps);
+
+export default useStore;
diff --git a/atri_app/app/src/index.jsx b/atri_app/app/src/index.jsx
new file mode 100644
index 0000000..b51a15b
--- /dev/null
+++ b/atri_app/app/src/index.jsx
@@ -0,0 +1,16 @@
+import React from "react";
+import { hydrateRoot } from "react-dom/client";
+import { BrowserRouter } from "react-router-dom";
+import App from "./App";
+import { GlobalContext } from "@atrilabs/core/lib/reactUtilities";
+
+const rootEl = document.getElementById("root");
+
+hydrateRoot(
+  rootEl,
+  <GlobalContext.Provider value={{ window }}>
+    <BrowserRouter basename={"" || undefined}>
+      <App />
+    </BrowserRouter>
+  </GlobalContext.Provider>
+);
diff --git a/atri_app/app/src/page-cbs/Home.js b/atri_app/app/src/page-cbs/Home.js
new file mode 100644
index 0000000..f11ea58
--- /dev/null
+++ b/atri_app/app/src/page-cbs/Home.js
@@ -0,0 +1,1817 @@
+import { useCallback } from "react";
+import { callbackFactory } from "../utils/callbackFactory";
+export function useFlex1Cb() {
+	const onClick = useCallback(callbackFactory("Flex1", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage2Cb() {
+	const onClick = useCallback(callbackFactory("Image2", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox2Cb() {
+	const onClick = useCallback(callbackFactory("TextBox2", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex5Cb() {
+	const onClick = useCallback(callbackFactory("Flex5", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "internal",
+        "url": "/"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox5Cb() {
+	const onClick = useCallback(callbackFactory("TextBox5", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/tutorials/bkg_swapper/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox6Cb() {
+	const onClick = useCallback(callbackFactory("TextBox6", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/blog/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox7Cb() {
+	const onClick = useCallback(callbackFactory("TextBox7", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox8Cb() {
+	const onClick = useCallback(callbackFactory("TextBox8", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton2Cb() {
+	const onClick = useCallback(callbackFactory("Button2", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/category/getting-started",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex6Cb() {
+	const onClick = useCallback(callbackFactory("Flex6", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox10Cb() {
+	const onClick = useCallback(callbackFactory("TextBox10", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "internal",
+        "url": "/Showcase"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox11Cb() {
+	const onClick = useCallback(callbackFactory("TextBox11", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex9Cb() {
+	const onClick = useCallback(callbackFactory("Flex9", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useMenu1Cb() {
+	const onClick = useCallback(callbackFactory("Menu1", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "open"
+      ]
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex10Cb() {
+	const onClick = useCallback(callbackFactory("Flex10", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex12Cb() {
+	const onClick = useCallback(callbackFactory("Flex12", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex14Cb() {
+	const onClick = useCallback(callbackFactory("Flex14", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex15Cb() {
+	const onClick = useCallback(callbackFactory("Flex15", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox14Cb() {
+	const onClick = useCallback(callbackFactory("TextBox14", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox16Cb() {
+	const onClick = useCallback(callbackFactory("TextBox16", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex16Cb() {
+	const onClick = useCallback(callbackFactory("Flex16", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox54Cb() {
+	const onClick = useCallback(callbackFactory("TextBox54", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine/discussions",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox55Cb() {
+	const onClick = useCallback(callbackFactory("TextBox55", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine#how-to-contribute",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox56Cb() {
+	const onClick = useCallback(callbackFactory("TextBox56", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps/traffic-history",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox57Cb() {
+	const onClick = useCallback(callbackFactory("TextBox57", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps/personal_blog",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox58Cb() {
+	const onClick = useCallback(callbackFactory("TextBox58", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps/full_stack_ecommerce_website",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox59Cb() {
+	const onClick = useCallback(callbackFactory("TextBox59", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/blog",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox60Cb() {
+	const onClick = useCallback(callbackFactory("TextBox60", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox61Cb() {
+	const onClick = useCallback(callbackFactory("TextBox61", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox62Cb() {
+	const onClick = useCallback(callbackFactory("TextBox62", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/conferences",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex47Cb() {
+	const onClick = useCallback(callbackFactory("Flex47", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox63Cb() {
+	const onClick = useCallback(callbackFactory("TextBox63", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox64Cb() {
+	const onClick = useCallback(callbackFactory("TextBox64", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex48Cb() {
+	const onClick = useCallback(callbackFactory("Flex48", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex49Cb() {
+	const onClick = useCallback(callbackFactory("Flex49", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox65Cb() {
+	const onClick = useCallback(callbackFactory("TextBox65", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox66Cb() {
+	const onClick = useCallback(callbackFactory("TextBox66", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex50Cb() {
+	const onClick = useCallback(callbackFactory("Flex50", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex51Cb() {
+	const onClick = useCallback(callbackFactory("Flex51", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex52Cb() {
+	const onClick = useCallback(callbackFactory("Flex52", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex53Cb() {
+	const onClick = useCallback(callbackFactory("Flex53", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex54Cb() {
+	const onClick = useCallback(callbackFactory("Flex54", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex60Cb() {
+	const onClick = useCallback(callbackFactory("Flex60", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex62Cb() {
+	const onClick = useCallback(callbackFactory("Flex62", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex77Cb() {
+	const onClick = useCallback(callbackFactory("Flex77", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox93Cb() {
+	const onClick = useCallback(callbackFactory("TextBox93", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox94Cb() {
+	const onClick = useCallback(callbackFactory("TextBox94", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox95Cb() {
+	const onClick = useCallback(callbackFactory("TextBox95", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex84Cb() {
+	const onClick = useCallback(callbackFactory("Flex84", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex85Cb() {
+	const onClick = useCallback(callbackFactory("Flex85", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex86Cb() {
+	const onClick = useCallback(callbackFactory("Flex86", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex154Cb() {
+	const onClick = useCallback(callbackFactory("Flex154", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage37Cb() {
+	const onClick = useCallback(callbackFactory("Image37", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox155Cb() {
+	const onClick = useCallback(callbackFactory("TextBox155", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox156Cb() {
+	const onClick = useCallback(callbackFactory("TextBox156", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/blog",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox160Cb() {
+	const onClick = useCallback(callbackFactory("TextBox160", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex160Cb() {
+	const onClick = useCallback(callbackFactory("Flex160", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage38Cb() {
+	const onClick = useCallback(callbackFactory("Image38", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex195Cb() {
+	const onClick = useCallback(callbackFactory("Flex195", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex193Cb() {
+	const onClick = useCallback(callbackFactory("Flex193", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex183Cb() {
+	const onClick = useCallback(callbackFactory("Flex183", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox185Cb() {
+	const onClick = useCallback(callbackFactory("TextBox185", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox186Cb() {
+	const onClick = useCallback(callbackFactory("TextBox186", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton16Cb() {
+	const onClick = useCallback(callbackFactory("Button16", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox192Cb() {
+	const onClick = useCallback(callbackFactory("TextBox192", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex198Cb() {
+	const onClick = useCallback(callbackFactory("Flex198", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex199Cb() {
+	const onClick = useCallback(callbackFactory("Flex199", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput4Cb() {
+	const onChange = useCallback(callbackFactory("Input4", "Home", "/", "onChange", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input4", "Home", "/", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox201Cb() {
+	const onClick = useCallback(callbackFactory("TextBox201", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox202Cb() {
+	const onClick = useCallback(callbackFactory("TextBox202", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex207Cb() {
+	const onClick = useCallback(callbackFactory("Flex207", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex208Cb() {
+	const onClick = useCallback(callbackFactory("Flex208", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex219Cb() {
+	const onClick = useCallback(callbackFactory("Flex219", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex223Cb() {
+	const onClick = useCallback(callbackFactory("Flex223", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox209Cb() {
+	const onClick = useCallback(callbackFactory("TextBox209", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox210Cb() {
+	const onClick = useCallback(callbackFactory("TextBox210", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage56Cb() {
+	const onClick = useCallback(callbackFactory("Image56", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex224Cb() {
+	const onClick = useCallback(callbackFactory("Flex224", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex225Cb() {
+	const onClick = useCallback(callbackFactory("Flex225", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex226Cb() {
+	const onClick = useCallback(callbackFactory("Flex226", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox213Cb() {
+	const onClick = useCallback(callbackFactory("TextBox213", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox214Cb() {
+	const onClick = useCallback(callbackFactory("TextBox214", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox215Cb() {
+	const onClick = useCallback(callbackFactory("TextBox215", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex227Cb() {
+	const onClick = useCallback(callbackFactory("Flex227", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex228Cb() {
+	const onClick = useCallback(callbackFactory("Flex228", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex229Cb() {
+	const onClick = useCallback(callbackFactory("Flex229", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox216Cb() {
+	const onClick = useCallback(callbackFactory("TextBox216", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox217Cb() {
+	const onClick = useCallback(callbackFactory("TextBox217", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox218Cb() {
+	const onClick = useCallback(callbackFactory("TextBox218", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex230Cb() {
+	const onClick = useCallback(callbackFactory("Flex230", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex231Cb() {
+	const onClick = useCallback(callbackFactory("Flex231", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex232Cb() {
+	const onClick = useCallback(callbackFactory("Flex232", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage59Cb() {
+	const onClick = useCallback(callbackFactory("Image59", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage60Cb() {
+	const onClick = useCallback(callbackFactory("Image60", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex241Cb() {
+	const onClick = useCallback(callbackFactory("Flex241", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage63Cb() {
+	const onClick = useCallback(callbackFactory("Image63", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex242Cb() {
+	const onClick = useCallback(callbackFactory("Flex242", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex243Cb() {
+	const onClick = useCallback(callbackFactory("Flex243", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage66Cb() {
+	const onClick = useCallback(callbackFactory("Image66", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex250Cb() {
+	const onClick = useCallback(callbackFactory("Flex250", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage76Cb() {
+	const onClick = useCallback(callbackFactory("Image76", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://www.linkedin.com/company/atri-labs",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage77Cb() {
+	const onClick = useCallback(callbackFactory("Image77", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://twitter.com/atrilabs",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage78Cb() {
+	const onClick = useCallback(callbackFactory("Image78", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://www.youtube.com/channel/UC1uR2Q5x_8olWS_Y4PdK1Bw",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage79Cb() {
+	const onClick = useCallback(callbackFactory("Image79", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://join.slack.com/t/atricommunity/shared_invite/zt-1e756m1at-bZBxngvw7KWWO0riI4pc0w",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex251Cb() {
+	const onClick = useCallback(callbackFactory("Flex251", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex252Cb() {
+	const onClick = useCallback(callbackFactory("Flex252", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage84Cb() {
+	const onClick = useCallback(callbackFactory("Image84", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox229Cb() {
+	const onClick = useCallback(callbackFactory("TextBox229", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage85Cb() {
+	const onClick = useCallback(callbackFactory("Image85", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex256Cb() {
+	const onClick = useCallback(callbackFactory("Flex256", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox230Cb() {
+	const onClick = useCallback(callbackFactory("TextBox230", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex258Cb() {
+	const onClick = useCallback(callbackFactory("Flex258", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex259Cb() {
+	const onClick = useCallback(callbackFactory("Flex259", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage96Cb() {
+	const onClick = useCallback(callbackFactory("Image96", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox237Cb() {
+	const onClick = useCallback(callbackFactory("TextBox237", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox238Cb() {
+	const onClick = useCallback(callbackFactory("TextBox238", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox239Cb() {
+	const onClick = useCallback(callbackFactory("TextBox239", "Home", "/", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex269Cb() {
+	const onClick = useCallback(callbackFactory("Flex269", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex270Cb() {
+	const onClick = useCallback(callbackFactory("Flex270", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex271Cb() {
+	const onClick = useCallback(callbackFactory("Flex271", "Home", "/", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
\ No newline at end of file
diff --git a/atri_app/app/src/page-cbs/Showcase.js b/atri_app/app/src/page-cbs/Showcase.js
new file mode 100644
index 0000000..461d22d
--- /dev/null
+++ b/atri_app/app/src/page-cbs/Showcase.js
@@ -0,0 +1,4156 @@
+import { useCallback } from "react";
+import { callbackFactory } from "../utils/callbackFactory";
+export function useFlex462Cb() {
+	const onClick = useCallback(callbackFactory("Flex462", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox361Cb() {
+	const onClick = useCallback(callbackFactory("TextBox361", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox362Cb() {
+	const onClick = useCallback(callbackFactory("TextBox362", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton116Cb() {
+	const onClick = useCallback(callbackFactory("Button116", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex463Cb() {
+	const onClick = useCallback(callbackFactory("Flex463", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex466Cb() {
+	const onClick = useCallback(callbackFactory("Flex466", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex467Cb() {
+	const onClick = useCallback(callbackFactory("Flex467", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox363Cb() {
+	const onClick = useCallback(callbackFactory("TextBox363", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox364Cb() {
+	const onClick = useCallback(callbackFactory("TextBox364", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_1Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_7Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_7", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_3Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_4Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_2Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_5Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_6Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_8Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_8", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter_Btn_9Cb() {
+	const onClick = useCallback(callbackFactory("Filter_Btn_9", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex468Cb() {
+	const onClick = useCallback(callbackFactory("Flex468", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex469Cb() {
+	const onClick = useCallback(callbackFactory("Flex469", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Image_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_Image_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex481Cb() {
+	const onClick = useCallback(callbackFactory("Flex481", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex482Cb() {
+	const onClick = useCallback(callbackFactory("Flex482", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Title_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_Title_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex483Cb() {
+	const onClick = useCallback(callbackFactory("Flex483", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex484Cb() {
+	const onClick = useCallback(callbackFactory("Flex484", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Text_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_Text_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_1_a_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_1_a_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_1_b_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_1_b_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_1_c_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_1_c_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex485Cb() {
+	const onClick = useCallback(callbackFactory("Flex485", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex486Cb() {
+	const onClick = useCallback(callbackFactory("Flex486", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Image_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Image_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Name_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Name_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Github_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_Github_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Deploy_1Cb() {
+	const onClick = useCallback(callbackFactory("Card_Deploy_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+
+export function useCard_Image_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_Image_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Github_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_Github_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Deploy_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_Deploy_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Image_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Image_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Name_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Name_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Title_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_Title_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Text_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_Text_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex530Cb() {
+	const onClick = useCallback(callbackFactory("Flex530", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex531Cb() {
+	const onClick = useCallback(callbackFactory("Flex531", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex532Cb() {
+	const onClick = useCallback(callbackFactory("Flex532", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex534Cb() {
+	const onClick = useCallback(callbackFactory("Flex534", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Image_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_Image_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex535Cb() {
+	const onClick = useCallback(callbackFactory("Flex535", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_3Cb() {
+	const onClick = useCallback(callbackFactory("Card_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+export function useFlex528Cb() {
+	const onClick = useCallback(callbackFactory("Flex528", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex525Cb() {
+	const onClick = useCallback(callbackFactory("Flex525", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex523Cb() {
+	const onClick = useCallback(callbackFactory("Flex523", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex524Cb() {
+	const onClick = useCallback(callbackFactory("Flex524", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Name_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Name_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Image_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Image_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Deploy_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_Deploy_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Github_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_Github_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex527Cb() {
+	const onClick = useCallback(callbackFactory("Flex527", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Text_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_Text_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Title_2Cb() {
+	const onClick = useCallback(callbackFactory("Card_Title_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+
+
+
+
+
+
+
+
+
+
+
+
+export function useTextBox430Cb() {
+	const onClick = useCallback(callbackFactory("TextBox430", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox431Cb() {
+	const onClick = useCallback(callbackFactory("TextBox431", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex618Cb() {
+	const onClick = useCallback(callbackFactory("Flex618", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton200Cb() {
+	const onClick = useCallback(callbackFactory("Button200", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/category/getting-started",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useMenu7Cb() {
+	const onClick = useCallback(callbackFactory("Menu7", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "open"
+      ]
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex619Cb() {
+	const onClick = useCallback(callbackFactory("Flex619", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage278Cb() {
+	const onClick = useCallback(callbackFactory("Image278", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex620Cb() {
+	const onClick = useCallback(callbackFactory("Flex620", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox438Cb() {
+	const onClick = useCallback(callbackFactory("TextBox438", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage279Cb() {
+	const onClick = useCallback(callbackFactory("Image279", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex621Cb() {
+	const onClick = useCallback(callbackFactory("Flex621", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex623Cb() {
+	const onClick = useCallback(callbackFactory("Flex623", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "internal",
+        "url": "/"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex624Cb() {
+	const onClick = useCallback(callbackFactory("Flex624", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Name_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Name_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Image_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Image_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Deploy_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_Deploy_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Github_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_Github_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Github_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_Github_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Deploy_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_Deploy_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Image_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Image_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Name_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Name_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Name_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Name_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Creator_Image_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_Creator_Image_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Deploy_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_Deploy_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Github_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_Github_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex625Cb() {
+	const onClick = useCallback(callbackFactory("Flex625", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex626Cb() {
+	const onClick = useCallback(callbackFactory("Flex626", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Text_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_Text_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Title_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_Title_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Title_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_Title_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Text_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_Text_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex627Cb() {
+	const onClick = useCallback(callbackFactory("Flex627", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex628Cb() {
+	const onClick = useCallback(callbackFactory("Flex628", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex629Cb() {
+	const onClick = useCallback(callbackFactory("Flex629", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex630Cb() {
+	const onClick = useCallback(callbackFactory("Flex630", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Text_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_Text_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Title_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_Title_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex632Cb() {
+	const onClick = useCallback(callbackFactory("Flex632", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex633Cb() {
+	const onClick = useCallback(callbackFactory("Flex633", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex635Cb() {
+	const onClick = useCallback(callbackFactory("Flex635", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex636Cb() {
+	const onClick = useCallback(callbackFactory("Flex636", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex637Cb() {
+	const onClick = useCallback(callbackFactory("Flex637", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex639Cb() {
+	const onClick = useCallback(callbackFactory("Flex639", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex640Cb() {
+	const onClick = useCallback(callbackFactory("Flex640", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Image_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_Image_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex641Cb() {
+	const onClick = useCallback(callbackFactory("Flex641", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Image_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_Image_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex642Cb() {
+	const onClick = useCallback(callbackFactory("Flex642", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Image_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_Image_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_6Cb() {
+	const onClick = useCallback(callbackFactory("Card_6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_5Cb() {
+	const onClick = useCallback(callbackFactory("Card_5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_4Cb() {
+	const onClick = useCallback(callbackFactory("Card_4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex646Cb() {
+	const onClick = useCallback(callbackFactory("Flex646", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox448Cb() {
+	const onClick = useCallback(callbackFactory("TextBox448", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/blog",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox449Cb() {
+	const onClick = useCallback(callbackFactory("TextBox449", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox450Cb() {
+	const onClick = useCallback(callbackFactory("TextBox450", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex647Cb() {
+	const onClick = useCallback(callbackFactory("Flex647", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox451Cb() {
+	const onClick = useCallback(callbackFactory("TextBox451", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "internal",
+        "url": "/Showcase"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_1_aCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_1_a", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_1_bCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_1_b", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_1_cCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_1_c", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_2_c_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_2_c_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_2_b_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_2_b_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_2_a_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_2_a_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_2_cCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_2_c", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_2_bCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_2_b", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_2_aCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_2_a", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex657Cb() {
+	const onClick = useCallback(callbackFactory("Flex657", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_3_c_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_3_c_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_3_b_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_3_b_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_3_a_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_3_a_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_3_cCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_3_c", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_3_bCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_3_b", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_3_aCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_3_a", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex661Cb() {
+	const onClick = useCallback(callbackFactory("Flex661", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_4_c_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_4_c_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_4_b_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_4_b_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_4_a_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_4_a_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_4_cCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_4_c", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_4_bCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_4_b", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_4_aCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_4_a", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex665Cb() {
+	const onClick = useCallback(callbackFactory("Flex665", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_5_c_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_5_c_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_5_b_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_5_b_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_5_a_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_5_a_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_5_cCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_5_c", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_5_bCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_5_b", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_5_aCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_5_a", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex669Cb() {
+	const onClick = useCallback(callbackFactory("Flex669", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_6_c_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_6_c_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_6_b_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_6_b_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_6_a_TextCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_6_a_Text", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_6_cCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_6_c", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_6_bCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_6_b", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useCard_Tag_6_aCb() {
+	const onClick = useCallback(callbackFactory("Card_Tag_6_a", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex673Cb() {
+	const onClick = useCallback(callbackFactory("Flex673", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex674Cb() {
+	const onClick = useCallback(callbackFactory("Flex674", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex675Cb() {
+	const onClick = useCallback(callbackFactory("Flex675", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter1Cb() {
+	const onClick = useCallback(callbackFactory("Filter1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter2Cb() {
+	const onClick = useCallback(callbackFactory("Filter2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter3Cb() {
+	const onClick = useCallback(callbackFactory("Filter3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter4Cb() {
+	const onClick = useCallback(callbackFactory("Filter4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter5Cb() {
+	const onClick = useCallback(callbackFactory("Filter5", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter6Cb() {
+	const onClick = useCallback(callbackFactory("Filter6", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter7Cb() {
+	const onClick = useCallback(callbackFactory("Filter7", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter8Cb() {
+	const onClick = useCallback(callbackFactory("Filter8", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFilter9Cb() {
+	const onClick = useCallback(callbackFactory("Filter9", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox455Cb() {
+	const onClick = useCallback(callbackFactory("TextBox455", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage294Cb() {
+	const onClick = useCallback(callbackFactory("Image294", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex685Cb() {
+	const onClick = useCallback(callbackFactory("Flex685", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage295Cb() {
+	const onClick = useCallback(callbackFactory("Image295", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex686Cb() {
+	const onClick = useCallback(callbackFactory("Flex686", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox456Cb() {
+	const onClick = useCallback(callbackFactory("TextBox456", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox457Cb() {
+	const onClick = useCallback(callbackFactory("TextBox457", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/conferences",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox458Cb() {
+	const onClick = useCallback(callbackFactory("TextBox458", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox459Cb() {
+	const onClick = useCallback(callbackFactory("TextBox459", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/tutorials/bkg_swapper",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox460Cb() {
+	const onClick = useCallback(callbackFactory("TextBox460", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://docs.atrilabs.com/blog",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox461Cb() {
+	const onClick = useCallback(callbackFactory("TextBox461", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps/full_stack_ecommerce_website",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox462Cb() {
+	const onClick = useCallback(callbackFactory("TextBox462", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps/personal_blog",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox463Cb() {
+	const onClick = useCallback(callbackFactory("TextBox463", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Apps/traffic-history",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox464Cb() {
+	const onClick = useCallback(callbackFactory("TextBox464", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine#how-to-contribute",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox465Cb() {
+	const onClick = useCallback(callbackFactory("TextBox465", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine/discussions",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox466Cb() {
+	const onClick = useCallback(callbackFactory("TextBox466", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox467Cb() {
+	const onClick = useCallback(callbackFactory("TextBox467", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex687Cb() {
+	const onClick = useCallback(callbackFactory("Flex687", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage296Cb() {
+	const onClick = useCallback(callbackFactory("Image296", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://join.slack.com/t/atricommunity/shared_invite/zt-1e756m1at-bZBxngvw7KWWO0riI4pc0w",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage297Cb() {
+	const onClick = useCallback(callbackFactory("Image297", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://www.youtube.com/channel/UC1uR2Q5x_8olWS_Y4PdK1Bw",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage298Cb() {
+	const onClick = useCallback(callbackFactory("Image298", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://twitter.com/atrilabs",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage299Cb() {
+	const onClick = useCallback(callbackFactory("Image299", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://www.linkedin.com/company/atri-labs",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex688Cb() {
+	const onClick = useCallback(callbackFactory("Flex688", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox468Cb() {
+	const onClick = useCallback(callbackFactory("TextBox468", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox469Cb() {
+	const onClick = useCallback(callbackFactory("TextBox469", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex689Cb() {
+	const onClick = useCallback(callbackFactory("Flex689", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex690Cb() {
+	const onClick = useCallback(callbackFactory("Flex690", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox470Cb() {
+	const onClick = useCallback(callbackFactory("TextBox470", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox471Cb() {
+	const onClick = useCallback(callbackFactory("TextBox471", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex691Cb() {
+	const onClick = useCallback(callbackFactory("Flex691", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex692Cb() {
+	const onClick = useCallback(callbackFactory("Flex692", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox472Cb() {
+	const onClick = useCallback(callbackFactory("TextBox472", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex693Cb() {
+	const onClick = useCallback(callbackFactory("Flex693", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex694Cb() {
+	const onClick = useCallback(callbackFactory("Flex694", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex695Cb() {
+	const onClick = useCallback(callbackFactory("Flex695", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex696Cb() {
+	const onClick = useCallback(callbackFactory("Flex696", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex697Cb() {
+	const onClick = useCallback(callbackFactory("Flex697", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex698Cb() {
+	const onClick = useCallback(callbackFactory("Flex698", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage300Cb() {
+	const onClick = useCallback(callbackFactory("Image300", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "navigate": {
+        "type": "external",
+        "url": "https://github.com/Atri-Labs/atrilabs-engine",
+        "target": "_blank"
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex699Cb() {
+	const onClick = useCallback(callbackFactory("Flex699", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex700Cb() {
+	const onClick = useCallback(callbackFactory("Flex700", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex701Cb() {
+	const onClick = useCallback(callbackFactory("Flex701", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex702Cb() {
+	const onClick = useCallback(callbackFactory("Flex702", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex703Cb() {
+	const onClick = useCallback(callbackFactory("Flex703", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex704Cb() {
+	const onClick = useCallback(callbackFactory("Flex704", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex705Cb() {
+	const onClick = useCallback(callbackFactory("Flex705", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage303Cb() {
+	const onClick = useCallback(callbackFactory("Image303", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage304Cb() {
+	const onClick = useCallback(callbackFactory("Image304", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox474Cb() {
+	const onClick = useCallback(callbackFactory("TextBox474", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox453Cb() {
+	const onClick = useCallback(callbackFactory("TextBox453", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex706Cb() {
+	const onClick = useCallback(callbackFactory("Flex706", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useOverlay3Cb() {
+
+	return {  }
+}
+export function useFlex786Cb() {
+	const onClick = useCallback(callbackFactory("Flex786", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex784Cb() {
+	const onClick = useCallback(callbackFactory("Flex784", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex779Cb() {
+	const onClick = useCallback(callbackFactory("Flex779", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex770Cb() {
+	const onClick = useCallback(callbackFactory("Flex770", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex771Cb() {
+	const onClick = useCallback(callbackFactory("Flex771", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex780Cb() {
+	const onClick = useCallback(callbackFactory("Flex780", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex772Cb() {
+	const onClick = useCallback(callbackFactory("Flex772", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex773Cb() {
+	const onClick = useCallback(callbackFactory("Flex773", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex781Cb() {
+	const onClick = useCallback(callbackFactory("Flex781", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex774Cb() {
+	const onClick = useCallback(callbackFactory("Flex774", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex775Cb() {
+	const onClick = useCallback(callbackFactory("Flex775", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex782Cb() {
+	const onClick = useCallback(callbackFactory("Flex782", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex776Cb() {
+	const onClick = useCallback(callbackFactory("Flex776", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex777Cb() {
+	const onClick = useCallback(callbackFactory("Flex777", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex785Cb() {
+	const onClick = useCallback(callbackFactory("Flex785", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex783Cb() {
+	const onClick = useCallback(callbackFactory("Flex783", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex778Cb() {
+	const onClick = useCallback(callbackFactory("Flex778", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex769Cb() {
+	const onClick = useCallback(callbackFactory("Flex769", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex766Cb() {
+	const onClick = useCallback(callbackFactory("Flex766", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex767Cb() {
+	const onClick = useCallback(callbackFactory("Flex767", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTag_Flex_1Cb() {
+	const onClick = useCallback(callbackFactory("Tag_Flex_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTag_Flex_2Cb() {
+	const onClick = useCallback(callbackFactory("Tag_Flex_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTag_Flex_3Cb() {
+	const onClick = useCallback(callbackFactory("Tag_Flex_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex768Cb() {
+	const onClick = useCallback(callbackFactory("Flex768", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex764Cb() {
+	const onClick = useCallback(callbackFactory("Flex764", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex765Cb() {
+	const onClick = useCallback(callbackFactory("Flex765", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton235Cb() {
+	const onClick = useCallback(callbackFactory("Button235", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox499Cb() {
+	const onClick = useCallback(callbackFactory("TextBox499", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput19Cb() {
+	const onChange = useCallback(callbackFactory("Input19", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input19", "Showcase", "/Showcase", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useInput20Cb() {
+	const onChange = useCallback(callbackFactory("Input20", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input20", "Showcase", "/Showcase", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox500Cb() {
+	const onClick = useCallback(callbackFactory("TextBox500", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox501Cb() {
+	const onClick = useCallback(callbackFactory("TextBox501", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput21Cb() {
+	const onChange = useCallback(callbackFactory("Input21", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input21", "Showcase", "/Showcase", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useInput22Cb() {
+	const onChange = useCallback(callbackFactory("Input22", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input22", "Showcase", "/Showcase", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox502Cb() {
+	const onClick = useCallback(callbackFactory("TextBox502", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox503Cb() {
+	const onClick = useCallback(callbackFactory("TextBox503", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput23Cb() {
+	const onChange = useCallback(callbackFactory("Input23", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input23", "Showcase", "/Showcase", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox504Cb() {
+	const onClick = useCallback(callbackFactory("TextBox504", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput24Cb() {
+	const onChange = useCallback(callbackFactory("Input24", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input24", "Showcase", "/Showcase", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox505Cb() {
+	const onClick = useCallback(callbackFactory("TextBox505", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useUpload3Cb() {
+	const onChange = useCallback(callbackFactory("Upload3", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendFile": {
+        "self": true,
+        "props": [
+          "io",
+          "files"
+        ]
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "file_input",
+      "selector": [
+        "io",
+        "files"
+      ]
+    }
+  ]
+}), [])
+	const onClick = useCallback(callbackFactory("Upload3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onClick }
+}
+export function useTextBox506Cb() {
+	const onClick = useCallback(callbackFactory("TextBox506", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useUpload4Cb() {
+	const onChange = useCallback(callbackFactory("Upload4", "Showcase", "/Showcase", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendFile": {
+        "self": true,
+        "props": [
+          "io",
+          "files"
+        ]
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "file_input",
+      "selector": [
+        "io",
+        "files"
+      ]
+    }
+  ]
+}), [])
+	const onClick = useCallback(callbackFactory("Upload4", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onClick }
+}
+export function useTextBox507Cb() {
+	const onClick = useCallback(callbackFactory("TextBox507", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage319Cb() {
+	const onClick = useCallback(callbackFactory("Image319", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage318Cb() {
+	const onClick = useCallback(callbackFactory("Image318", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox497Cb() {
+	const onClick = useCallback(callbackFactory("TextBox497", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox498Cb() {
+	const onClick = useCallback(callbackFactory("TextBox498", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTag_1Cb() {
+	const onClick = useCallback(callbackFactory("Tag_1", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTag_2Cb() {
+	const onClick = useCallback(callbackFactory("Tag_2", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTag_3Cb() {
+	const onClick = useCallback(callbackFactory("Tag_3", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage315Cb() {
+	const onClick = useCallback(callbackFactory("Image315", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage316Cb() {
+	const onClick = useCallback(callbackFactory("Image316", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage317Cb() {
+	const onClick = useCallback(callbackFactory("Image317", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox496Cb() {
+	const onClick = useCallback(callbackFactory("TextBox496", "Showcase", "/Showcase", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
\ No newline at end of file
diff --git a/atri_app/app/src/page-cbs/trial.js b/atri_app/app/src/page-cbs/trial.js
new file mode 100644
index 0000000..e395e21
--- /dev/null
+++ b/atri_app/app/src/page-cbs/trial.js
@@ -0,0 +1,2590 @@
+import { useCallback } from "react";
+import { callbackFactory } from "../utils/callbackFactory";
+export function useTextBox103Cb() {
+	const onClick = useCallback(callbackFactory("TextBox103", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox104Cb() {
+	const onClick = useCallback(callbackFactory("TextBox104", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox105Cb() {
+	const onClick = useCallback(callbackFactory("TextBox105", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox106Cb() {
+	const onClick = useCallback(callbackFactory("TextBox106", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage26Cb() {
+	const onClick = useCallback(callbackFactory("Image26", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox107Cb() {
+	const onClick = useCallback(callbackFactory("TextBox107", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox108Cb() {
+	const onClick = useCallback(callbackFactory("TextBox108", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox109Cb() {
+	const onClick = useCallback(callbackFactory("TextBox109", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox110Cb() {
+	const onClick = useCallback(callbackFactory("TextBox110", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox111Cb() {
+	const onClick = useCallback(callbackFactory("TextBox111", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox112Cb() {
+	const onClick = useCallback(callbackFactory("TextBox112", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox113Cb() {
+	const onClick = useCallback(callbackFactory("TextBox113", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox114Cb() {
+	const onClick = useCallback(callbackFactory("TextBox114", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox115Cb() {
+	const onClick = useCallback(callbackFactory("TextBox115", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex98Cb() {
+	const onClick = useCallback(callbackFactory("Flex98", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton7Cb() {
+	const onClick = useCallback(callbackFactory("Button7", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage27Cb() {
+	const onClick = useCallback(callbackFactory("Image27", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex99Cb() {
+	const onClick = useCallback(callbackFactory("Flex99", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex100Cb() {
+	const onClick = useCallback(callbackFactory("Flex100", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex101Cb() {
+	const onClick = useCallback(callbackFactory("Flex101", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex102Cb() {
+	const onClick = useCallback(callbackFactory("Flex102", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox116Cb() {
+	const onClick = useCallback(callbackFactory("TextBox116", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox117Cb() {
+	const onClick = useCallback(callbackFactory("TextBox117", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex103Cb() {
+	const onClick = useCallback(callbackFactory("Flex103", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useMenu2Cb() {
+	const onClick = useCallback(callbackFactory("Menu2", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "open"
+      ]
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex104Cb() {
+	const onClick = useCallback(callbackFactory("Flex104", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex105Cb() {
+	const onClick = useCallback(callbackFactory("Flex105", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox118Cb() {
+	const onClick = useCallback(callbackFactory("TextBox118", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage28Cb() {
+	const onClick = useCallback(callbackFactory("Image28", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex106Cb() {
+	const onClick = useCallback(callbackFactory("Flex106", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex107Cb() {
+	const onClick = useCallback(callbackFactory("Flex107", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage29Cb() {
+	const onClick = useCallback(callbackFactory("Image29", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex108Cb() {
+	const onClick = useCallback(callbackFactory("Flex108", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex109Cb() {
+	const onClick = useCallback(callbackFactory("Flex109", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex110Cb() {
+	const onClick = useCallback(callbackFactory("Flex110", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex111Cb() {
+	const onClick = useCallback(callbackFactory("Flex111", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex112Cb() {
+	const onClick = useCallback(callbackFactory("Flex112", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex113Cb() {
+	const onClick = useCallback(callbackFactory("Flex113", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex114Cb() {
+	const onClick = useCallback(callbackFactory("Flex114", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex115Cb() {
+	const onClick = useCallback(callbackFactory("Flex115", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage30Cb() {
+	const onClick = useCallback(callbackFactory("Image30", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox119Cb() {
+	const onClick = useCallback(callbackFactory("TextBox119", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox120Cb() {
+	const onClick = useCallback(callbackFactory("TextBox120", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox121Cb() {
+	const onClick = useCallback(callbackFactory("TextBox121", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox122Cb() {
+	const onClick = useCallback(callbackFactory("TextBox122", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox123Cb() {
+	const onClick = useCallback(callbackFactory("TextBox123", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox124Cb() {
+	const onClick = useCallback(callbackFactory("TextBox124", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox125Cb() {
+	const onClick = useCallback(callbackFactory("TextBox125", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox126Cb() {
+	const onClick = useCallback(callbackFactory("TextBox126", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox127Cb() {
+	const onClick = useCallback(callbackFactory("TextBox127", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox128Cb() {
+	const onClick = useCallback(callbackFactory("TextBox128", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox129Cb() {
+	const onClick = useCallback(callbackFactory("TextBox129", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox130Cb() {
+	const onClick = useCallback(callbackFactory("TextBox130", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox131Cb() {
+	const onClick = useCallback(callbackFactory("TextBox131", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox132Cb() {
+	const onClick = useCallback(callbackFactory("TextBox132", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage31Cb() {
+	const onClick = useCallback(callbackFactory("Image31", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage32Cb() {
+	const onClick = useCallback(callbackFactory("Image32", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage33Cb() {
+	const onClick = useCallback(callbackFactory("Image33", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage34Cb() {
+	const onClick = useCallback(callbackFactory("Image34", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage35Cb() {
+	const onClick = useCallback(callbackFactory("Image35", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox133Cb() {
+	const onClick = useCallback(callbackFactory("TextBox133", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex116Cb() {
+	const onClick = useCallback(callbackFactory("Flex116", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex117Cb() {
+	const onClick = useCallback(callbackFactory("Flex117", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox134Cb() {
+	const onClick = useCallback(callbackFactory("TextBox134", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox135Cb() {
+	const onClick = useCallback(callbackFactory("TextBox135", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex118Cb() {
+	const onClick = useCallback(callbackFactory("Flex118", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex119Cb() {
+	const onClick = useCallback(callbackFactory("Flex119", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox136Cb() {
+	const onClick = useCallback(callbackFactory("TextBox136", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox137Cb() {
+	const onClick = useCallback(callbackFactory("TextBox137", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex120Cb() {
+	const onClick = useCallback(callbackFactory("Flex120", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex121Cb() {
+	const onClick = useCallback(callbackFactory("Flex121", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox138Cb() {
+	const onClick = useCallback(callbackFactory("TextBox138", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox139Cb() {
+	const onClick = useCallback(callbackFactory("TextBox139", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex122Cb() {
+	const onClick = useCallback(callbackFactory("Flex122", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex123Cb() {
+	const onClick = useCallback(callbackFactory("Flex123", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex124Cb() {
+	const onClick = useCallback(callbackFactory("Flex124", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex125Cb() {
+	const onClick = useCallback(callbackFactory("Flex125", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex126Cb() {
+	const onClick = useCallback(callbackFactory("Flex126", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex127Cb() {
+	const onClick = useCallback(callbackFactory("Flex127", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex128Cb() {
+	const onClick = useCallback(callbackFactory("Flex128", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex129Cb() {
+	const onClick = useCallback(callbackFactory("Flex129", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton8Cb() {
+	const onClick = useCallback(callbackFactory("Button8", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex130Cb() {
+	const onClick = useCallback(callbackFactory("Flex130", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex131Cb() {
+	const onClick = useCallback(callbackFactory("Flex131", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex132Cb() {
+	const onClick = useCallback(callbackFactory("Flex132", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex133Cb() {
+	const onClick = useCallback(callbackFactory("Flex133", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex134Cb() {
+	const onClick = useCallback(callbackFactory("Flex134", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex135Cb() {
+	const onClick = useCallback(callbackFactory("Flex135", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex136Cb() {
+	const onClick = useCallback(callbackFactory("Flex136", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox140Cb() {
+	const onClick = useCallback(callbackFactory("TextBox140", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox141Cb() {
+	const onClick = useCallback(callbackFactory("TextBox141", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox142Cb() {
+	const onClick = useCallback(callbackFactory("TextBox142", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox143Cb() {
+	const onClick = useCallback(callbackFactory("TextBox143", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox144Cb() {
+	const onClick = useCallback(callbackFactory("TextBox144", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox145Cb() {
+	const onClick = useCallback(callbackFactory("TextBox145", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox146Cb() {
+	const onClick = useCallback(callbackFactory("TextBox146", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox147Cb() {
+	const onClick = useCallback(callbackFactory("TextBox147", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox148Cb() {
+	const onClick = useCallback(callbackFactory("TextBox148", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex137Cb() {
+	const onClick = useCallback(callbackFactory("Flex137", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox149Cb() {
+	const onClick = useCallback(callbackFactory("TextBox149", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox150Cb() {
+	const onClick = useCallback(callbackFactory("TextBox150", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex138Cb() {
+	const onClick = useCallback(callbackFactory("Flex138", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex139Cb() {
+	const onClick = useCallback(callbackFactory("Flex139", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox151Cb() {
+	const onClick = useCallback(callbackFactory("TextBox151", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox152Cb() {
+	const onClick = useCallback(callbackFactory("TextBox152", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex140Cb() {
+	const onClick = useCallback(callbackFactory("Flex140", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex141Cb() {
+	const onClick = useCallback(callbackFactory("Flex141", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex142Cb() {
+	const onClick = useCallback(callbackFactory("Flex142", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex143Cb() {
+	const onClick = useCallback(callbackFactory("Flex143", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex144Cb() {
+	const onClick = useCallback(callbackFactory("Flex144", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex145Cb() {
+	const onClick = useCallback(callbackFactory("Flex145", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex146Cb() {
+	const onClick = useCallback(callbackFactory("Flex146", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage36Cb() {
+	const onClick = useCallback(callbackFactory("Image36", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox153Cb() {
+	const onClick = useCallback(callbackFactory("TextBox153", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex147Cb() {
+	const onClick = useCallback(callbackFactory("Flex147", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex148Cb() {
+	const onClick = useCallback(callbackFactory("Flex148", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox154Cb() {
+	const onClick = useCallback(callbackFactory("TextBox154", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex149Cb() {
+	const onClick = useCallback(callbackFactory("Flex149", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex150Cb() {
+	const onClick = useCallback(callbackFactory("Flex150", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex151Cb() {
+	const onClick = useCallback(callbackFactory("Flex151", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex152Cb() {
+	const onClick = useCallback(callbackFactory("Flex152", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex710Cb() {
+	const onClick = useCallback(callbackFactory("Flex710", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex711Cb() {
+	const onClick = useCallback(callbackFactory("Flex711", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex712Cb() {
+	const onClick = useCallback(callbackFactory("Flex712", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useOverlay2Cb() {
+
+	return {  }
+}
+export function useFlex722Cb() {
+	const onClick = useCallback(callbackFactory("Flex722", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox482Cb() {
+	const onClick = useCallback(callbackFactory("TextBox482", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox483Cb() {
+	const onClick = useCallback(callbackFactory("TextBox483", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex736Cb() {
+	const onClick = useCallback(callbackFactory("Flex736", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex737Cb() {
+	const onClick = useCallback(callbackFactory("Flex737", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex738Cb() {
+	const onClick = useCallback(callbackFactory("Flex738", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox484Cb() {
+	const onClick = useCallback(callbackFactory("TextBox484", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput11Cb() {
+	const onChange = useCallback(callbackFactory("Input11", "trial", "/trial", "onChange", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input11", "trial", "/trial", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useInput12Cb() {
+	const onChange = useCallback(callbackFactory("Input12", "trial", "/trial", "onChange", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input12", "trial", "/trial", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox485Cb() {
+	const onClick = useCallback(callbackFactory("TextBox485", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex739Cb() {
+	const onClick = useCallback(callbackFactory("Flex739", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex740Cb() {
+	const onClick = useCallback(callbackFactory("Flex740", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex741Cb() {
+	const onClick = useCallback(callbackFactory("Flex741", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox486Cb() {
+	const onClick = useCallback(callbackFactory("TextBox486", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput13Cb() {
+	const onChange = useCallback(callbackFactory("Input13", "trial", "/trial", "onChange", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input13", "trial", "/trial", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useInput14Cb() {
+	const onChange = useCallback(callbackFactory("Input14", "trial", "/trial", "onChange", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input14", "trial", "/trial", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox487Cb() {
+	const onClick = useCallback(callbackFactory("TextBox487", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex742Cb() {
+	const onClick = useCallback(callbackFactory("Flex742", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex743Cb() {
+	const onClick = useCallback(callbackFactory("Flex743", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex744Cb() {
+	const onClick = useCallback(callbackFactory("Flex744", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox488Cb() {
+	const onClick = useCallback(callbackFactory("TextBox488", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useInput15Cb() {
+	const onChange = useCallback(callbackFactory("Input15", "trial", "/trial", "onChange", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input15", "trial", "/trial", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useInput16Cb() {
+	const onChange = useCallback(callbackFactory("Input16", "trial", "/trial", "onChange", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "controlled",
+      "selector": [
+        "custom",
+        "value"
+      ]
+    }
+  ]
+}), [])
+	const onPressEnter = useCallback(callbackFactory("Input16", "trial", "/trial", "onPressEnter", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onPressEnter }
+}
+export function useTextBox489Cb() {
+	const onClick = useCallback(callbackFactory("TextBox489", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex745Cb() {
+	const onClick = useCallback(callbackFactory("Flex745", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex746Cb() {
+	const onClick = useCallback(callbackFactory("Flex746", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex747Cb() {
+	const onClick = useCallback(callbackFactory("Flex747", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useUpload1Cb() {
+	const onChange = useCallback(callbackFactory("Upload1", "trial", "/trial", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendFile": {
+        "self": true,
+        "props": [
+          "io",
+          "files"
+        ]
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "file_input",
+      "selector": [
+        "io",
+        "files"
+      ]
+    }
+  ]
+}), [])
+	const onClick = useCallback(callbackFactory("Upload1", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onClick }
+}
+export function useUpload2Cb() {
+	const onChange = useCallback(callbackFactory("Upload2", "trial", "/trial", "onChange", 
+			{
+  "handlers": [
+    {
+      "sendFile": {
+        "self": true,
+        "props": [
+          "io",
+          "files"
+        ]
+      }
+    }
+  ],
+  "actions": [
+    {
+      "type": "file_input",
+      "selector": [
+        "io",
+        "files"
+      ]
+    }
+  ]
+}), [])
+	const onClick = useCallback(callbackFactory("Upload2", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onChange,onClick }
+}
+export function useButton228Cb() {
+	const onClick = useCallback(callbackFactory("Button228", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox492Cb() {
+	const onClick = useCallback(callbackFactory("TextBox492", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox493Cb() {
+	const onClick = useCallback(callbackFactory("TextBox493", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage310Cb() {
+	const onClick = useCallback(callbackFactory("Image310", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage311Cb() {
+	const onClick = useCallback(callbackFactory("Image311", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage312Cb() {
+	const onClick = useCallback(callbackFactory("Image312", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton229Cb() {
+	const onClick = useCallback(callbackFactory("Button229", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton230Cb() {
+	const onClick = useCallback(callbackFactory("Button230", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useButton231Cb() {
+	const onClick = useCallback(callbackFactory("Button231", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex751Cb() {
+	const onClick = useCallback(callbackFactory("Flex751", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex752Cb() {
+	const onClick = useCallback(callbackFactory("Flex752", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex753Cb() {
+	const onClick = useCallback(callbackFactory("Flex753", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex754Cb() {
+	const onClick = useCallback(callbackFactory("Flex754", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex755Cb() {
+	const onClick = useCallback(callbackFactory("Flex755", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox494Cb() {
+	const onClick = useCallback(callbackFactory("TextBox494", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useTextBox495Cb() {
+	const onClick = useCallback(callbackFactory("TextBox495", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex756Cb() {
+	const onClick = useCallback(callbackFactory("Flex756", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex757Cb() {
+	const onClick = useCallback(callbackFactory("Flex757", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex758Cb() {
+	const onClick = useCallback(callbackFactory("Flex758", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex759Cb() {
+	const onClick = useCallback(callbackFactory("Flex759", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage313Cb() {
+	const onClick = useCallback(callbackFactory("Image313", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useFlex760Cb() {
+	const onClick = useCallback(callbackFactory("Flex760", "trial", "/trial", "onClick", 
+			{
+  "handlers": [],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
+export function useImage314Cb() {
+	const onClick = useCallback(callbackFactory("Image314", "trial", "/trial", "onClick", 
+			{
+  "handlers": [
+    {
+      "sendEventData": true
+    }
+  ],
+  "actions": [
+    {
+      "type": "do_nothing"
+    }
+  ]
+}), [])
+	return { onClick }
+}
\ No newline at end of file
diff --git a/atri_app/app/src/page-css/Home.css b/atri_app/app/src/page-css/Home.css
new file mode 100644
index 0000000..3c343f2
--- /dev/null
+++ b/atri_app/app/src/page-css/Home.css
@@ -0,0 +1,1107 @@
+.p-Home.Flex1 {
+display: flex;
+background-color: #0E0D26;
+flex-direction: column;
+padding-left: 60px;
+padding-right: 60px;
+row-gap: 150px;
+padding-bottom: 100px;
+padding-top: 40px;
+}
+.p-Home.Flex14 {
+display: flex;
+align-items: center;
+justify-content: space-between;
+padding-left: ;
+padding-right: ;
+font-family: IBM Plex Sans;
+font-size: 18px;
+margin-top: ;
+padding-bottom: ;
+padding-top: ;
+position: relative;
+}
+.p-Home.Flex5 {
+display: flex;
+column-gap: 10px;
+align-items: center;
+cursor: pointer;
+}
+.p-Home.Flex10 {
+display: flex;
+column-gap: 30px;
+color: #ffffff;
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 18px;
+}
+.p-Home.Flex154 {
+display: flex;
+column-gap: 30px;
+align-items: center;
+}
+.p-Home.Flex12 {
+display: flex;
+align-items: center;
+column-gap: 10px;
+width: ;
+justify-content: flex-end;
+}
+.p-Home.Flex9 {
+display: flex;
+}
+.p-Home.Menu1 {
+display: none;
+}
+.p-Home.Flex6 {
+display: flex;
+}
+.p-Home.Flex16 {
+display: flex;
+justify-content: center;
+flex-direction: column;
+align-items: center;
+row-gap: 60px;
+}
+.p-Home.Flex15 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: center;
+}
+.p-Home.Flex243 {
+display: flex;
+column-gap: 30px;
+align-items: center;
+}
+.p-Home.Flex160 {
+display: flex;
+background-image: ;
+justify-content: center;
+flex-direction: column;
+align-items: center;
+row-gap: 10px;
+background-color: #eaeacb00;
+padding-top: 40px;
+padding-bottom: 40px;
+width: 80%;
+margin-left: ;
+margin-right: ;
+padding-left: 40px;
+padding-right: 40px;
+border-radius: 8px;
+}
+.p-Home.Flex77 {
+display: flex;
+flex-direction: column;
+padding-left: 60px;
+padding-right: 60px;
+padding-top: 100px;
+padding-bottom: 100px;
+background-color: #1B1948;
+row-gap: 100px;
+}
+.p-Home.Flex62 {
+display: flex;
+background-color: ;
+padding-left: ;
+padding-right: ;
+padding-bottom: ;
+padding-top: ;
+column-gap: ;
+justify-content: space-between;
+}
+.p-Home.Flex60 {
+display: flex;
+column-gap: ;
+width: 60%;
+justify-content: space-between;
+}
+.p-Home.Flex51 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Home.Flex47 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Home.Flex52 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Home.Flex48 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Home.Flex53 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Home.Flex49 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Home.Flex54 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Home.Flex50 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Home.Flex250 {
+display: flex;
+flex-direction: column;
+row-gap: 30px;
+width: 30%;
+}
+.p-Home.Flex251 {
+display: flex;
+align-items: flex-start;
+column-gap: 20px;
+}
+.p-Home.Flex252 {
+display: flex;
+flex-direction: column;
+}
+.p-Home.Flex259 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+align-items: stretch;
+}
+.p-Home.Flex258 {
+display: flex;
+column-gap: 30px;
+align-items: center;
+justify-content: flex-start;
+}
+.p-Home.Flex256 {
+display: flex;
+column-gap: 20px;
+}
+.p-Home.Flex86 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Home.Flex85 {
+display: flex;
+justify-content: space-between;
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #A5B4FC;
+}
+.p-Home.Flex84 {
+display: flex;
+column-gap: 40px;
+}
+.p-Home.Flex241 {
+display: flex;
+justify-content: flex-end;
+position: fixed;
+right: 20px;
+bottom: 20px;
+height: 40px;
+}
+.p-Home.Flex195 {
+display: flex;
+background-color: #2B2B3B;
+flex-direction: column;
+padding-left: 60px;
+padding-right: 60px;
+row-gap: 125px;
+padding-bottom: 100px;
+padding-top: 100px;
+}
+.p-Home.Flex193 {
+display: flex;
+justify-content: center;
+flex-direction: column;
+align-items: center;
+row-gap: 100px;
+}
+.p-Home.Flex183 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: center;
+}
+.p-Home.Flex242 {
+display: flex;
+flex-direction: column;
+row-gap: 100px;
+}
+.p-Home.Flex229 {
+display: flex;
+background-image: ;
+background-attachment: fixed;
+height: ;
+flex-direction: row;
+row-gap: 50px;
+align-items: stretch;
+background-color: ;
+justify-content: center;
+padding-left: ;
+margin-left: ;
+margin-right: ;
+column-gap: 75px;
+}
+.p-Home.Flex227 {
+display: flex;
+background-color: ;
+border-radius: ;
+}
+.p-Home.Flex228 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: flex-start;
+padding-top: ;
+width: 40%;
+}
+.p-Home.Flex232 {
+display: flex;
+background-image: ;
+background-attachment: fixed;
+height: ;
+flex-direction: row;
+row-gap: 50px;
+align-items: stretch;
+background-color: ;
+justify-content: center;
+padding-left: ;
+margin-left: ;
+margin-right: ;
+column-gap: 75px;
+}
+.p-Home.Flex230 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: flex-start;
+padding-top: ;
+width: 40%;
+}
+.p-Home.Flex231 {
+display: flex;
+background-color: ;
+border-radius: ;
+}
+.p-Home.Flex271 {
+display: flex;
+background-image: ;
+background-attachment: fixed;
+height: ;
+flex-direction: row;
+row-gap: 50px;
+align-items: stretch;
+background-color: ;
+justify-content: center;
+padding-left: ;
+margin-left: ;
+margin-right: ;
+column-gap: 75px;
+}
+.p-Home.Flex269 {
+display: flex;
+background-color: ;
+border-radius: ;
+}
+.p-Home.Flex270 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: flex-start;
+padding-top: ;
+width: 40%;
+}
+.p-Home.Flex223 {
+display: flex;
+background-color: #0E0D26;
+flex-direction: column;
+padding-left: 60px;
+padding-right: 60px;
+row-gap: 150px;
+padding-bottom: 100px;
+padding-top: 100px;
+}
+.p-Home.Flex219 {
+display: flex;
+border-radius: 8px;
+background-color: #2B2B3B;
+padding-right: 100px;
+margin-right: ;
+justify-content: space-between;
+align-items: center;
+padding-left: 50px;
+padding-top: 50px;
+padding-bottom: 50px;
+color: #1E293B;
+}
+.p-Home.Flex207 {
+display: flex;
+flex-direction: column;
+align-items: center;
+row-gap: 20px;
+width: ;
+}
+.p-Home.Flex198 {
+display: flex;
+}
+.p-Home.Flex199 {
+display: none;
+}
+.p-Home.Flex208 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: stretch;
+align-content: stretch;
+width: 55%;
+}
+.p-Home.Flex226 {
+display: flex;
+background-image: ;
+background-attachment: fixed;
+height: ;
+flex-direction: column;
+row-gap: 40px;
+align-items: center;
+background-color: ;
+justify-content: center;
+padding-left: ;
+margin-left: ;
+margin-right: ;
+column-gap: ;
+}
+.p-Home.Flex224 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: center;
+padding-top: ;
+width: 700px;
+}
+.p-Home.Flex225 {
+display: flex;
+background-color: ;
+border-radius: ;
+}
+.p-Home.Image2 {
+width: ;
+height: 36px;
+}
+.p-Home.TextBox2 {
+font-family: PT Sans;
+font-weight: 700;
+font-size: 24px;
+color: #ffffff;
+}
+.p-Home.TextBox10 {
+cursor: pointer;
+}
+.p-Home.TextBox11 {
+cursor: pointer;
+}
+.p-Home.TextBox155 {
+cursor: pointer;
+}
+.p-Home.TextBox156 {
+cursor: pointer;
+}
+.p-Home.Image37 {
+width: ;
+height: 36px;
+cursor: pointer;
+}
+.p-Home.Button2 {
+color: #1E293B;
+background-color: #FDE047;
+padding-top: 8px;
+padding-left: 15px;
+padding-bottom: 8px;
+padding-right: 15px;
+font-size: 18px;
+border-radius: 4px;
+outline: none;
+font-weight: 600;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #F1945A;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+width: ;
+height: 40px;
+}
+.p-Home.TextBox5 {
+;
+}
+.p-Home.TextBox6 {
+;
+}
+.p-Home.TextBox7 {
+;
+}
+.p-Home.TextBox8 {
+;
+}
+.p-Home.TextBox14 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 64px;
+color: #ffffff;
+text-align: left;
+}
+.p-Home.TextBox16 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 24px;
+color: #ffffff;
+text-align: left;
+}
+.p-Home.TextBox160 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+font-size: 18px;
+color: #FEF3C7;
+text-align: left;
+}
+.p-Home.Image66 {
+cursor: pointer;
+}
+.p-Home.Image38 {
+width: 100%;
+border-radius: 8px;
+}
+.p-Home.TextBox63 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Home.TextBox54 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox55 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox64 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Home.TextBox56 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox57 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox58 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox65 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Home.TextBox59 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox60 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox61 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.TextBox66 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Home.TextBox62 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Home.Image76 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Home.Image77 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Home.Image78 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Home.Image79 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Home.TextBox230 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+width: 70%;
+}
+.p-Home.Image85 {
+width: ;
+height: 32px;
+cursor: pointer;
+}
+.p-Home.Image84 {
+width: 36px;
+}
+.p-Home.TextBox229 {
+font-family: PT Sans;
+font-weight: 700;
+font-size: 24px;
+color: #ffffff;
+}
+.p-Home.TextBox95 {
+;
+}
+.p-Home.TextBox93 {
+;
+}
+.p-Home.TextBox94 {
+;
+}
+.p-Home.Image63 {
+cursor: pointer;
+}
+.p-Home.TextBox185 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 24px;
+color: #dcdeff;
+text-align: center;
+}
+.p-Home.TextBox186 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 48px;
+color: #dcdeff;
+text-align: center;
+}
+.p-Home.Image60 {
+;
+}
+.p-Home.TextBox213 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #F9A8D4;
+text-align: left;
+}
+.p-Home.TextBox214 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 20px;
+color: #FCE7F3;
+text-align: left;
+}
+.p-Home.TextBox215 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 36px;
+color: #FBCFE8;
+text-align: left;
+}
+.p-Home.TextBox216 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 36px;
+color: #FED7AA;
+text-align: left;
+}
+.p-Home.TextBox217 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #FDBA74;
+text-align: left;
+}
+.p-Home.TextBox218 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 20px;
+color: #FFEDD5;
+text-align: left;
+}
+.p-Home.Image59 {
+;
+}
+.p-Home.Image96 {
+;
+}
+.p-Home.TextBox237 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 20px;
+color: #E0F2FE;
+text-align: left;
+}
+.p-Home.TextBox238 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #7DD3FC;
+text-align: left;
+}
+.p-Home.TextBox239 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 36px;
+color: #BAE6FD;
+text-align: left;
+}
+.p-Home.Input4 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 15px;
+padding-left: 15px;
+padding-bottom: 15px;
+padding-right: 15px;
+color: #DBEAFE;
+font-size: 18px;
+background-color: #0E0D26;
+background-image: none;
+border-width: 2px;
+border-style: solid;
+border-color: #000000;
+border-radius: 4px;
+font-family: IBM Plex Sans;
+font-weight: 400;
+height: ;
+width: 350px;
+text-align: center;
+}
+.p-Home.Button16 {
+color: #1E293B;
+background-color: #DBEAFE;
+padding-top: 8px;
+padding-left: 15px;
+padding-bottom: 8px;
+padding-right: 15px;
+font-size: 18px;
+border-radius: 4px;
+outline: none;
+font-weight: 600;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #F1945A;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+width: ;
+height: 40px;
+}
+.p-Home.TextBox192 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 18px;
+color: #DBEAFE;
+width: 300px;
+text-align: center;
+}
+.p-Home.TextBox201 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 18px;
+color: #fbbdaf;
+text-align: left;
+}
+.p-Home.TextBox202 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 48px;
+color: #fbbdaf;
+}
+.p-Home.TextBox209 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 48px;
+color: #6EE7B7;
+text-align: center;
+}
+.p-Home.TextBox210 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 24px;
+color: #D1FAE5;
+text-align: center;
+}
+.p-Home.Image56 {
+;
+}
+@media screen and (max-width: 991px) {
+	.p-Home.Flex10.bpt {
+display: none;
+	}
+	.p-Home.Flex6.bpt {
+flex-direction: column;
+column-gap: ;
+row-gap: 16px;
+margin-top: 30px;
+align-items: flex-end;
+width: 100px;
+font-family: IBM Plex Sans;
+font-weight: 400;
+color: #ffffff;
+font-size: 18px;
+	}
+	.p-Home.Flex62.bpt {
+flex-direction: column;
+row-gap: 60px;
+	}
+	.p-Home.Flex250.bpt {
+width: 100%;
+	}
+	.p-Home.Flex229.bpt {
+flex-direction: column;
+align-items: center;
+	}
+	.p-Home.Flex228.bpt {
+width: 80%;
+align-items: center;
+	}
+	.p-Home.Flex232.bpt {
+flex-direction: column;
+align-items: center;
+	}
+	.p-Home.Flex230.bpt {
+width: 80%;
+align-items: center;
+	}
+	.p-Home.Flex271.bpt {
+flex-direction: column;
+align-items: center;
+	}
+	.p-Home.Flex270.bpt {
+width: 80%;
+align-items: center;
+	}
+	.p-Home.Flex224.bpt {
+width: 80%;
+	}
+	.p-Home.TextBox16.bpt {
+text-align: center;
+font-size: 20px;
+	}
+	.p-Home.TextBox230.bpt {
+width: 100%;
+	}
+	.p-Home.TextBox217.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox238.bpt {
+text-align: center;
+	}
+	.p-Home.Flex154.bpt {
+font-family: IBM Plex Sans;
+font-weight: 400;
+color: #ffffff;
+	}
+	.p-Home.Flex12.bpt {
+display: flex;
+justify-content: center;
+align-items: center;
+	}
+	.p-Home.Flex9.bpt {
+display: none;
+	}
+	.p-Home.Menu1.bpt {
+display: flex;
+cursor: pointer;
+color: #000000;
+align-items: center;
+	}
+	.p-Home.Flex60.bpt {
+width: 100%;
+	}
+	.p-Home.Flex85.bpt {
+flex-direction: row;
+row-gap: ;
+	}
+	.p-Home.Flex227.bpt {
+justify-content: center;
+width: 80%;
+	}
+	.p-Home.Flex231.bpt {
+width: 80%;
+justify-content: center;
+	}
+	.p-Home.Flex269.bpt {
+width: 80%;
+justify-content: center;
+	}
+	.p-Home.Flex219.bpt {
+flex-direction: column;
+row-gap: 40px;
+	}
+	.p-Home.Flex208.bpt {
+width: 80%;
+	}
+	.p-Home.Flex225.bpt {
+width: 80%;
+justify-content: center;
+	}
+	.p-Home.TextBox14.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox214.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox215.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox216.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox218.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox237.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox239.bpt {
+text-align: center;
+	}
+	.p-Home.Input4.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox201.bpt {
+text-align: center;
+	}
+	.p-Home.TextBox202.bpt {
+text-align: center;
+font-size: 36px;
+	}
+}
+@media screen and (max-width: 478px) {
+	.p-Home.Flex1.bpt {
+padding-left: 30px;
+padding-right: 30px;
+	}
+	.p-Home.Flex154.bpt {
+column-gap: 30px;
+	}
+	.p-Home.Flex12.bpt {
+width: ;
+display: flex;
+	}
+	.p-Home.Flex9.bpt {
+display: none;
+	}
+	.p-Home.Menu1.bpt {
+width: ;
+display: flex;
+	}
+	.p-Home.Flex243.bpt {
+column-gap: 20px;
+	}
+	.p-Home.Flex160.bpt {
+width: 100%;
+padding-left: 20px;
+padding-top: 20px;
+padding-right: 20px;
+padding-bottom: 20px;
+	}
+	.p-Home.Flex77.bpt {
+padding-left: 30px;
+padding-right: 30px;
+	}
+	.p-Home.Flex60.bpt {
+flex-wrap: wrap;
+row-gap: 40px;
+justify-content: flex-start;
+column-gap: ;
+	}
+	.p-Home.Flex51.bpt {
+width: 50%;
+	}
+	.p-Home.Flex52.bpt {
+width: 50%;
+	}
+	.p-Home.Flex53.bpt {
+width: 50%;
+	}
+	.p-Home.Flex54.bpt {
+width: 50%;
+	}
+	.p-Home.Flex85.bpt {
+flex-wrap: wrap;
+row-gap: 20px;
+	}
+	.p-Home.Flex241.bpt {
+height: 32px;
+	}
+	.p-Home.Flex195.bpt {
+padding-left: 30px;
+padding-right: 30px;
+row-gap: 100px;
+	}
+	.p-Home.Flex227.bpt {
+width: 100%;
+	}
+	.p-Home.Flex231.bpt {
+width: 100%;
+	}
+	.p-Home.Flex269.bpt {
+width: 100%;
+	}
+	.p-Home.Flex223.bpt {
+padding-left: 30px;
+padding-right: 30px;
+	}
+	.p-Home.Flex219.bpt {
+padding-right: 50px;
+	}
+	.p-Home.Flex208.bpt {
+width: 100%;
+	}
+	.p-Home.Flex225.bpt {
+width: 100%;
+	}
+	.p-Home.TextBox14.bpt {
+font-size: 36px;
+	}
+	.p-Home.TextBox160.bpt {
+font-size: 16px;
+	}
+	.p-Home.Image66.bpt {
+height: 32px;
+	}
+	.p-Home.TextBox185.bpt {
+font-size: 20px;
+	}
+	.p-Home.TextBox186.bpt {
+font-size: 32px;
+	}
+	.p-Home.Image60.bpt {
+width: 100%;
+	}
+	.p-Home.TextBox214.bpt {
+font-size: 18px;
+	}
+	.p-Home.TextBox215.bpt {
+font-size: 28px;
+	}
+	.p-Home.TextBox216.bpt {
+font-size: 28px;
+	}
+	.p-Home.TextBox218.bpt {
+font-size: 18px;
+	}
+	.p-Home.Image59.bpt {
+width: 100%;
+	}
+	.p-Home.Image96.bpt {
+width: 100%;
+	}
+	.p-Home.TextBox237.bpt {
+font-size: 18px;
+	}
+	.p-Home.TextBox239.bpt {
+font-size: 28px;
+	}
+	.p-Home.Input4.bpt {
+width: 250px;
+text-align: center;
+	}
+	.p-Home.TextBox201.bpt {
+font-size: 12px;
+	}
+	.p-Home.TextBox202.bpt {
+font-size: 24px;
+	}
+	.p-Home.TextBox209.bpt {
+font-size: 32px;
+	}
+	.p-Home.TextBox210.bpt {
+font-size: 20px;
+	}
+	.p-Home.Image56.bpt {
+width: 100%;
+	}
+}
\ No newline at end of file
diff --git a/atri_app/app/src/page-css/Showcase.css b/atri_app/app/src/page-css/Showcase.css
new file mode 100644
index 0000000..5d0ecfa
--- /dev/null
+++ b/atri_app/app/src/page-css/Showcase.css
@@ -0,0 +1,3301 @@
+.p-Showcase.Flex462 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+border-style: none;
+flex-direction: column;
+align-items: center;
+background-color: #0e0d26;
+padding-top: 80px;
+padding-bottom: 80px;
+row-gap: 15px;
+}
+.p-Showcase.Overlay3 {
+background-color: #00000073;
+position: fixed;
+top: 0;
+left: 0;
+width: 100%;
+height: 100%;
+justify-content: center;
+align-items: center;
+display: none;
+}
+.p-Showcase.Flex786 {
+display: flex;
+background-color: #ffffff;
+border-radius: 8px;
+}
+.p-Showcase.Flex784 {
+display: flex;
+flex-direction: column;
+padding-left: 40px;
+padding-right: 40px;
+padding-top: 40px;
+padding-bottom: 40px;
+border-right-style: solid;
+border-right-width: 1px;
+border-right-color: #ebe4e4;
+row-gap: 30px;
+align-items: center;
+}
+.p-Showcase.Flex779 {
+display: flex;
+column-gap: 40px;
+}
+.p-Showcase.Flex770 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex771 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex780 {
+display: flex;
+column-gap: 40px;
+}
+.p-Showcase.Flex772 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex773 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex781 {
+display: flex;
+column-gap: 40px;
+}
+.p-Showcase.Flex774 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex775 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex782 {
+display: flex;
+column-gap: 40px;
+}
+.p-Showcase.Flex776 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex777 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-Showcase.Flex785 {
+display: flex;
+}
+.p-Showcase.Flex783 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: 5px;
+padding-right: 35px;
+padding-top: 40px;
+padding-bottom: 40px;
+width: ;
+height: px;
+border-radius: 1%;
+max-width: 350px;
+align-items: stretch;
+}
+.p-Showcase.Flex778 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: px;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-Showcase.Flex769 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+}
+.p-Showcase.Flex766 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-Showcase.Flex767 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-Showcase.Tag_Flex_1 {
+display: flex;
+}
+.p-Showcase.Tag_Flex_2 {
+display: flex;
+}
+.p-Showcase.Tag_Flex_3 {
+display: flex;
+}
+.p-Showcase.Flex768 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-Showcase.Flex764 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex765 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-Showcase.Flex463 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+border-style: none;
+flex-direction: column;
+height: ;
+padding-left: 25px;
+background-color: #0e0d26;
+padding-right: 25px;
+row-gap: 15px;
+padding-top: 30px;
+padding-bottom: 30px;
+flex-wrap: wrap;
+}
+.p-Showcase.Flex466 {
+display: flex;
+background-color: ;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+}
+.p-Showcase.Flex467 {
+display: flex;
+border-style: none;
+overflow: hidden;
+box-sizing: border-box;
+align-items: center;
+justify-content: flex-start;
+column-gap: 10px;
+}
+.p-Showcase.Filter1 {
+display: flex;
+}
+.p-Showcase.Filter2 {
+display: flex;
+}
+.p-Showcase.Filter3 {
+display: flex;
+}
+.p-Showcase.Filter4 {
+display: flex;
+}
+.p-Showcase.Filter5 {
+display: flex;
+}
+.p-Showcase.Filter6 {
+display: flex;
+}
+.p-Showcase.Filter7 {
+display: flex;
+}
+.p-Showcase.Filter8 {
+display: flex;
+}
+.p-Showcase.Filter9 {
+display: flex;
+}
+.p-Showcase.Flex468 {
+display: flex;
+height: auto;
+flex-direction: column;
+justify-content: space-between;
+overflow: hidden;
+box-sizing: border-box;
+border-color: #f80a0a;
+}
+.p-Showcase.Flex469 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+border-style: none;
+border-color: #ecfa0b;
+height: ;
+column-gap: 25px;
+background-color: #0e0d26;
+padding-left: 25px;
+padding-top: 40px;
+padding-bottom: 40px;
+padding-right: 25px;
+flex-wrap: nowrap;
+justify-content: center;
+}
+.p-Showcase.Card_1 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: px;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-Showcase.Flex481 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+height: ;
+}
+.p-Showcase.Flex482 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-Showcase.Flex483 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-Showcase.Card_Tag_1_a {
+display: flex;
+}
+.p-Showcase.Card_Tag_1_b {
+display: flex;
+}
+.p-Showcase.Card_Tag_1_c {
+display: flex;
+}
+.p-Showcase.Flex484 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-Showcase.Flex485 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex486 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-Showcase.Card_2 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: px;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-Showcase.Flex528 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+height: ;
+}
+.p-Showcase.Flex525 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-Showcase.Flex523 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-Showcase.Flex524 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex527 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-Showcase.Flex657 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-Showcase.Card_Tag_2_c {
+display: flex;
+}
+.p-Showcase.Card_Tag_2_b {
+display: flex;
+}
+.p-Showcase.Card_Tag_2_a {
+display: flex;
+}
+.p-Showcase.Card_3 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: px;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-Showcase.Flex535 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+height: ;
+}
+.p-Showcase.Flex532 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-Showcase.Flex534 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-Showcase.Flex530 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex531 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-Showcase.Flex661 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-Showcase.Card_Tag_3_c {
+display: flex;
+}
+.p-Showcase.Card_Tag_3_b {
+display: flex;
+}
+.p-Showcase.Card_Tag_3_a {
+display: flex;
+}
+.p-Showcase.Flex646 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+border-style: none;
+border-color: #ecfa0b;
+height: ;
+column-gap: 25px;
+background-color: #0e0d26;
+padding-left: 25px;
+padding-top: ;
+padding-bottom: 30px;
+padding-right: 25px;
+flex-wrap: nowrap;
+justify-content: center;
+}
+.p-Showcase.Card_6 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: auto;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-Showcase.Flex640 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+height: ;
+}
+.p-Showcase.Flex632 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-Showcase.Flex625 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-Showcase.Flex626 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex633 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-Showcase.Flex673 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-Showcase.Card_Tag_6_c {
+display: flex;
+}
+.p-Showcase.Card_Tag_6_b {
+display: flex;
+}
+.p-Showcase.Card_Tag_6_a {
+display: flex;
+}
+.p-Showcase.Card_5 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: auto;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-Showcase.Flex641 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+height: ;
+}
+.p-Showcase.Flex635 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-Showcase.Flex636 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-Showcase.Flex627 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex628 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-Showcase.Flex669 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-Showcase.Card_Tag_5_c {
+display: flex;
+}
+.p-Showcase.Card_Tag_5_b {
+display: flex;
+}
+.p-Showcase.Card_Tag_5_a {
+display: flex;
+}
+.p-Showcase.Card_4 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: auto;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-Showcase.Flex642 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+height: ;
+}
+.p-Showcase.Flex637 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-Showcase.Flex629 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-Showcase.Flex630 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex639 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-Showcase.Flex665 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-Showcase.Card_Tag_4_c {
+display: flex;
+}
+.p-Showcase.Card_Tag_4_b {
+display: flex;
+}
+.p-Showcase.Card_Tag_4_a {
+display: flex;
+}
+.p-Showcase.Flex674 {
+display: flex;
+background-color: #0e0d26;
+justify-content: center;
+padding-bottom: 50px;
+padding-top: 50px;
+}
+.p-Showcase.Flex675 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex706 {
+display: none;
+}
+.p-Showcase.Flex624 {
+display: flex;
+align-items: center;
+justify-content: space-between;
+padding-left: 60px;
+padding-right: 60px;
+font-family: IBM Plex Sans;
+font-size: 18px;
+margin-top: ;
+padding-bottom: 40px;
+padding-top: 40px;
+position: relative;
+background-color: #0e0d26;
+}
+.p-Showcase.Flex621 {
+display: flex;
+column-gap: 30px;
+align-items: center;
+}
+.p-Showcase.Flex620 {
+display: flex;
+align-items: center;
+column-gap: 10px;
+width: ;
+justify-content: flex-end;
+}
+.p-Showcase.Menu7 {
+display: none;
+}
+.p-Showcase.Flex618 {
+display: flex;
+}
+.p-Showcase.Flex619 {
+display: flex;
+}
+.p-Showcase.Flex623 {
+display: flex;
+column-gap: 10px;
+align-items: center;
+cursor: pointer;
+}
+.p-Showcase.Flex647 {
+display: flex;
+column-gap: 30px;
+color: #ffffff;
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 18px;
+}
+.p-Showcase.Flex705 {
+display: flex;
+flex-direction: column;
+padding-left: 60px;
+padding-right: 60px;
+padding-top: 100px;
+padding-bottom: 100px;
+background-color: #1B1948;
+row-gap: 100px;
+}
+.p-Showcase.Flex702 {
+display: flex;
+justify-content: flex-end;
+position: fixed;
+right: 20px;
+bottom: 20px;
+height: 40px;
+}
+.p-Showcase.Flex703 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Showcase.Flex699 {
+display: flex;
+justify-content: space-between;
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #A5B4FC;
+}
+.p-Showcase.Flex692 {
+display: flex;
+column-gap: 40px;
+}
+.p-Showcase.Flex704 {
+display: flex;
+background-color: ;
+padding-left: ;
+padding-right: ;
+padding-bottom: ;
+padding-top: ;
+column-gap: ;
+justify-content: space-between;
+}
+.p-Showcase.Flex700 {
+display: flex;
+flex-direction: column;
+row-gap: 30px;
+width: 30%;
+}
+.p-Showcase.Flex693 {
+display: flex;
+flex-direction: column;
+}
+.p-Showcase.Flex687 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+align-items: stretch;
+}
+.p-Showcase.Flex686 {
+display: flex;
+column-gap: 30px;
+align-items: center;
+justify-content: flex-start;
+}
+.p-Showcase.Flex685 {
+display: flex;
+column-gap: 20px;
+}
+.p-Showcase.Flex694 {
+display: flex;
+align-items: flex-start;
+column-gap: 20px;
+}
+.p-Showcase.Flex701 {
+display: flex;
+column-gap: ;
+width: 60%;
+justify-content: space-between;
+}
+.p-Showcase.Flex695 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Showcase.Flex688 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Showcase.Flex696 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Showcase.Flex689 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Showcase.Flex697 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Showcase.Flex690 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Showcase.Flex698 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-Showcase.Flex691 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-Showcase.TextBox361 {
+font-family: IBM Plex Sans;
+font-size: 4em;
+font-weight: 500;
+color: #FEFCE8;
+}
+.p-Showcase.TextBox362 {
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+color: #FEFCE8;
+}
+.p-Showcase.Button116 {
+color: #000000;
+background-color: #19b8ff;
+padding-top: 8px;
+padding-left: 15px;
+padding-bottom: 8px;
+padding-right: 15px;
+font-size: 1em;
+border-radius: 5px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: solid;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Button235 {
+color: #fff;
+background-color: #0e0d26;
+padding-top: 12px;
+padding-left: 15px;
+padding-bottom: 12px;
+padding-right: 15px;
+font-size: 16px;
+border-radius: 5px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+max-width: 200px;
+width: 40%;
+}
+.p-Showcase.TextBox499 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.Input19 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-Showcase.Input20 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-Showcase.TextBox500 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.TextBox501 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.Input21 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-Showcase.Input22 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-Showcase.TextBox502 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.TextBox503 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.Input23 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-Showcase.TextBox504 {
+font-family: Fira Code;
+font-weight: 400;
+font-size: 10px;
+}
+.p-Showcase.Input24 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-Showcase.TextBox505 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.Upload3 {
+align-items: center;
+color: #fff;
+background-color: #0e0d26;
+padding-top: 12px;
+padding-left: 15px;
+padding-bottom: 12px;
+padding-right: 15px;
+font-size: 16px;
+border-radius: 3px;
+outline: none;
+font-weight: 400;
+border-width: 1px;
+border-style: none;
+border-color: ;
+cursor: pointer;
+user-select: none;
+column-gap: 12px;
+}
+.p-Showcase.TextBox506 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.Upload4 {
+align-items: center;
+color: #fff;
+background-color: #0e0d26;
+padding-top: 12px;
+padding-left: 15px;
+padding-bottom: 12px;
+padding-right: 15px;
+font-size: 16px;
+border-radius: 3px;
+outline: none;
+font-weight: 400;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+column-gap: 12px;
+max-width: 200px;
+}
+.p-Showcase.TextBox507 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-Showcase.Image319 {
+width: 20px;
+align-self: flex-end;
+position: relative;
+bottom: 22px;
+left: 22px;
+}
+.p-Showcase.Image318 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: ;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-Showcase.TextBox497 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-Showcase.TextBox498 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+}
+.p-Showcase.Tag_1 {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Tag_2 {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Tag_3 {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Image315 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-Showcase.Image316 {
+width: 20px;
+height: 20px;
+}
+.p-Showcase.Image317 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-Showcase.TextBox496 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.TextBox363 {
+font-family: IBM Plex Sans;
+font-size: 1em;
+color: #D1D5DB;
+}
+.p-Showcase.TextBox364 {
+font-family: IBM Plex Sans;
+font-size: 1em;
+color: #ffffff;
+}
+.p-Showcase.Filter_Btn_1 {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_2 {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_3 {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_4 {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_5 {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_6 {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_7 {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_8 {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Filter_Btn_9 {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 0.75em;
+border-radius: 4px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Image_1 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: 200px;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-Showcase.Card_Title_1 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-Showcase.Card_Text_1 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+height: 80px;
+}
+.p-Showcase.Card_Tag_1_a_Text {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_1_b_Text {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_1_c_Text {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Github_1 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-Showcase.Card_Deploy_1 {
+width: 20px;
+height: 20px;
+}
+.p-Showcase.Card_Creator_Image_1 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-Showcase.Card_Creator_Name_1 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Image_2 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: 200px;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-Showcase.Card_Creator_Name_2 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Creator_Image_2 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-Showcase.Card_Deploy_2 {
+width: 20px;
+height: 20px;
+}
+.p-Showcase.Card_Github_2 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-Showcase.Card_Text_2 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+height: 80px;
+}
+.p-Showcase.Card_Title_2 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-Showcase.Card_Tag_2_c_Text {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_2_b_Text {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_2_a_Text {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Image_3 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: 200px;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-Showcase.Card_Title_3 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-Showcase.Card_Text_3 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+height: 80px;
+}
+.p-Showcase.Card_Github_3 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-Showcase.Card_Deploy_3 {
+width: 20px;
+height: 20px;
+}
+.p-Showcase.Card_Creator_Image_3 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-Showcase.Card_Creator_Name_3 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_3_c_Text {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_3_b_Text {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_3_a_Text {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Image_6 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: 200px;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-Showcase.Card_Creator_Name_6 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Creator_Image_6 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-Showcase.Card_Deploy_6 {
+width: 20px;
+height: 20px;
+}
+.p-Showcase.Card_Github_6 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-Showcase.Card_Text_6 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+height: 80px;
+}
+.p-Showcase.Card_Title_6 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-Showcase.Card_Tag_6_c_Text {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_6_b_Text {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_6_a_Text {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Image_5 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: 200px;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-Showcase.Card_Title_5 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-Showcase.Card_Text_5 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+height: 80px;
+}
+.p-Showcase.Card_Github_5 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-Showcase.Card_Deploy_5 {
+width: 20px;
+height: 20px;
+}
+.p-Showcase.Card_Creator_Image_5 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-Showcase.Card_Creator_Name_5 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_5_c_Text {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_5_b_Text {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_5_a_Text {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Image_4 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: 200px;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-Showcase.Card_Creator_Name_4 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Creator_Image_4 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-Showcase.Card_Deploy_4 {
+width: 20px;
+height: 20px;
+}
+.p-Showcase.Card_Github_4 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-Showcase.Card_Text_4 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+height: 80px;
+}
+.p-Showcase.Card_Title_4 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-Showcase.Card_Tag_4_c_Text {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_4_b_Text {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Card_Tag_4_a_Text {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-Showcase.Image303 {
+width: 20px;
+cursor: pointer;
+}
+.p-Showcase.Image304 {
+width: 20px;
+cursor: pointer;
+}
+.p-Showcase.TextBox474 {
+font-family: Fira Code;
+color: #ffffff;
+}
+.p-Showcase.TextBox453 {
+font-family: Fira Code;
+color: #ffffff;
+}
+.p-Showcase.Image278 {
+width: ;
+height: 36px;
+cursor: pointer;
+}
+.p-Showcase.TextBox430 {
+;
+}
+.p-Showcase.TextBox431 {
+;
+}
+.p-Showcase.Button200 {
+color: #1E293B;
+background-color: #FDE047;
+padding-top: 8px;
+padding-left: 15px;
+padding-bottom: 8px;
+padding-right: 15px;
+font-size: 18px;
+border-radius: 4px;
+outline: none;
+font-weight: 600;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #F1945A;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+width: ;
+height: 40px;
+}
+.p-Showcase.TextBox438 {
+font-family: PT Sans;
+font-weight: 700;
+font-size: 24px;
+color: #ffffff;
+}
+.p-Showcase.Image279 {
+width: ;
+height: 36px;
+}
+.p-Showcase.TextBox448 {
+cursor: pointer;
+}
+.p-Showcase.TextBox449 {
+cursor: pointer;
+}
+.p-Showcase.TextBox450 {
+cursor: pointer;
+}
+.p-Showcase.TextBox451 {
+cursor: pointer;
+}
+.p-Showcase.Image300 {
+cursor: pointer;
+}
+.p-Showcase.TextBox472 {
+;
+}
+.p-Showcase.TextBox466 {
+;
+}
+.p-Showcase.TextBox467 {
+;
+}
+.p-Showcase.TextBox456 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+width: 70%;
+}
+.p-Showcase.Image295 {
+width: ;
+height: 32px;
+cursor: pointer;
+}
+.p-Showcase.TextBox455 {
+font-family: PT Sans;
+font-weight: 700;
+font-size: 24px;
+color: #ffffff;
+}
+.p-Showcase.Image294 {
+width: 36px;
+}
+.p-Showcase.Image296 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Showcase.Image297 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Showcase.Image298 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Showcase.Image299 {
+width: 32px;
+height: ;
+cursor: pointer;
+}
+.p-Showcase.TextBox468 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Showcase.TextBox457 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox469 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Showcase.TextBox458 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox459 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox460 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox470 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Showcase.TextBox461 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox462 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox463 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox471 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-Showcase.TextBox464 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+.p-Showcase.TextBox465 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+cursor: pointer;
+}
+@media screen and (max-width: 991px) {
+	.p-Showcase.Flex462.bpt {
+border-style: none;
+border-color: #070707;
+	}
+	.p-Showcase.Flex783.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Flex778.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Card_1.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Card_2.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Card_3.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Card_6.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Card_5.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Card_4.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-Showcase.Flex618.bpt {
+flex-direction: column;
+column-gap: ;
+row-gap: 16px;
+margin-top: 30px;
+align-items: flex-end;
+width: 100px;
+font-family: IBM Plex Sans;
+font-weight: 400;
+color: #ffffff;
+font-size: 18px;
+	}
+	.p-Showcase.Flex647.bpt {
+display: none;
+	}
+	.p-Showcase.Flex704.bpt {
+flex-direction: column;
+row-gap: 60px;
+	}
+	.p-Showcase.Flex700.bpt {
+width: 100%;
+	}
+	.p-Showcase.TextBox456.bpt {
+width: 100%;
+	}
+	.p-Showcase.Flex621.bpt {
+font-family: IBM Plex Sans;
+font-weight: 400;
+color: #ffffff;
+	}
+	.p-Showcase.Flex620.bpt {
+display: flex;
+justify-content: center;
+align-items: center;
+	}
+	.p-Showcase.Menu7.bpt {
+display: flex;
+cursor: pointer;
+color: #000000;
+align-items: center;
+	}
+	.p-Showcase.Flex619.bpt {
+display: none;
+	}
+	.p-Showcase.Flex699.bpt {
+flex-direction: row;
+row-gap: ;
+	}
+	.p-Showcase.Flex701.bpt {
+width: 100%;
+	}
+	.p-Showcase.Flex769.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-Showcase.Flex469.bpt {
+padding-bottom: 20px;
+flex-wrap: nowrap;
+	}
+	.p-Showcase.Flex481.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-Showcase.Flex528.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-Showcase.Flex535.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-Showcase.Flex646.bpt {
+padding-bottom: 20px;
+flex-wrap: nowrap;
+	}
+	.p-Showcase.Flex640.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-Showcase.Flex641.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-Showcase.Flex642.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-Showcase.TextBox497.bpt {
+font-size: 1.2em;
+	}
+	.p-Showcase.TextBox498.bpt {
+font-size: 0.9em;
+	}
+	.p-Showcase.Tag_1.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Tag_2.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Tag_3.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Title_1.bpt {
+font-size: 1.2em;
+	}
+	.p-Showcase.Card_Text_1.bpt {
+font-size: 0.9em;
+	}
+	.p-Showcase.Card_Tag_1_a_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_1_b_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_1_c_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Text_2.bpt {
+font-size: 0.9em;
+	}
+	.p-Showcase.Card_Title_2.bpt {
+font-size: 1.2em;
+	}
+	.p-Showcase.Card_Tag_2_c_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_2_b_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_2_a_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Title_3.bpt {
+font-size: 1.2em;
+	}
+	.p-Showcase.Card_Text_3.bpt {
+font-size: 0.9em;
+	}
+	.p-Showcase.Card_Tag_3_c_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_3_b_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_3_a_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Text_6.bpt {
+font-size: 0.9em;
+	}
+	.p-Showcase.Card_Title_6.bpt {
+font-size: 1.2em;
+	}
+	.p-Showcase.Card_Tag_6_c_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_6_b_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_6_a_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Title_5.bpt {
+font-size: 1.2em;
+	}
+	.p-Showcase.Card_Text_5.bpt {
+font-size: 0.9em;
+	}
+	.p-Showcase.Card_Tag_5_c_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_5_b_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_5_a_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Text_4.bpt {
+font-size: 0.9em;
+	}
+	.p-Showcase.Card_Title_4.bpt {
+font-size: 1.2em;
+	}
+	.p-Showcase.Card_Tag_4_c_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_4_b_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-Showcase.Card_Tag_4_a_Text.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+}
+@media screen and (max-width: 767px) {
+	.p-Showcase.Flex768.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-Showcase.Flex764.bpt {
+column-gap: 10px;
+	}
+	.p-Showcase.Flex765.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-Showcase.Flex463.bpt {
+padding-top: 25px;
+padding-bottom: 25px;
+padding-right: 25px;
+	}
+	.p-Showcase.Flex484.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-Showcase.Flex485.bpt {
+column-gap: 10px;
+	}
+	.p-Showcase.Flex486.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-Showcase.Flex525.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-Showcase.Flex523.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-Showcase.Flex524.bpt {
+column-gap: 10px;
+	}
+	.p-Showcase.Flex534.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-Showcase.Flex530.bpt {
+column-gap: 10px;
+	}
+	.p-Showcase.Flex531.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-Showcase.Flex632.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-Showcase.Flex625.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-Showcase.Flex626.bpt {
+column-gap: 10px;
+	}
+	.p-Showcase.Flex636.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-Showcase.Flex627.bpt {
+column-gap: 10px;
+	}
+	.p-Showcase.Flex628.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-Showcase.Flex637.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-Showcase.Flex629.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-Showcase.Flex630.bpt {
+column-gap: 10px;
+	}
+	.p-Showcase.TextBox361.bpt {
+font-size: 2.5em;
+box-sizing: border-box;
+overflow: hidden;
+	}
+	.p-Showcase.TextBox362.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Button116.bpt {
+padding-left: 5px;
+padding-right: 5px;
+padding-bottom: 5px;
+padding-top: 5px;
+	}
+	.p-Showcase.TextBox496.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-Showcase.Filter_Btn_1.bpt {
+padding-left: 4px;
+padding-right: 4px;
+font-size: 0.75em;
+	}
+	.p-Showcase.Filter_Btn_2.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Filter_Btn_3.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Filter_Btn_4.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Filter_Btn_5.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Filter_Btn_6.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Filter_Btn_7.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Filter_Btn_8.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Filter_Btn_9.bpt {
+padding-left: 4px;
+padding-right: 4px;
+	}
+	.p-Showcase.Card_Creator_Name_1.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-Showcase.Card_Creator_Name_2.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-Showcase.Card_Creator_Name_3.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-Showcase.Card_Creator_Name_6.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-Showcase.Card_Creator_Name_5.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-Showcase.Card_Creator_Name_4.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-Showcase.Flex769.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-Showcase.Flex767.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-Showcase.Flex467.bpt {
+column-gap: 30px;
+flex-wrap: wrap;
+row-gap: 10px;
+	}
+	.p-Showcase.Flex469.bpt {
+flex-wrap: wrap;
+justify-content: center;
+padding-right: ;
+padding-left: ;
+row-gap: 20px;
+column-gap: ;
+	}
+	.p-Showcase.Flex481.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-Showcase.Flex483.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-Showcase.Flex528.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-Showcase.Flex657.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-Showcase.Flex535.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-Showcase.Flex661.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-Showcase.Flex646.bpt {
+flex-wrap: wrap;
+justify-content: center;
+padding-right: ;
+padding-left: ;
+row-gap: 20px;
+column-gap: ;
+	}
+	.p-Showcase.Flex640.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-Showcase.Flex673.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-Showcase.Flex641.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-Showcase.Flex669.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-Showcase.Flex642.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-Showcase.Flex665.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-Showcase.TextBox497.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+	.p-Showcase.TextBox498.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-Showcase.Tag_1.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+	.p-Showcase.Tag_2.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-Showcase.Tag_3.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-Showcase.Card_Title_1.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+	.p-Showcase.Card_Text_1.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-Showcase.Card_Tag_1_a_Text.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+	.p-Showcase.Card_Tag_1_b_Text.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-Showcase.Card_Tag_1_c_Text.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-Showcase.Card_Text_2.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-Showcase.Card_Title_2.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+	.p-Showcase.Card_Tag_2_c_Text.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-Showcase.Card_Tag_2_b_Text.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-Showcase.Card_Tag_2_a_Text.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+	.p-Showcase.Card_Title_3.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+	.p-Showcase.Card_Text_3.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-Showcase.Card_Tag_3_c_Text.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-Showcase.Card_Tag_3_b_Text.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-Showcase.Card_Tag_3_a_Text.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+	.p-Showcase.Card_Text_6.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-Showcase.Card_Title_6.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+	.p-Showcase.Card_Tag_6_c_Text.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-Showcase.Card_Tag_6_b_Text.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-Showcase.Card_Tag_6_a_Text.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+	.p-Showcase.Card_Title_5.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+	.p-Showcase.Card_Text_5.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-Showcase.Card_Tag_5_c_Text.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-Showcase.Card_Tag_5_b_Text.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-Showcase.Card_Tag_5_a_Text.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+	.p-Showcase.Card_Text_4.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-Showcase.Card_Title_4.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+	.p-Showcase.Card_Tag_4_c_Text.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-Showcase.Card_Tag_4_b_Text.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-Showcase.Card_Tag_4_a_Text.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+}
+@media screen and (max-width: 478px) {
+	.p-Showcase.Flex769.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex767.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-Showcase.Flex467.bpt {
+flex-wrap: wrap;
+row-gap: 10px;
+	}
+	.p-Showcase.Flex468.bpt {
+padding-left: ;
+	}
+	.p-Showcase.Flex469.bpt {
+flex-wrap: wrap;
+flex-direction: row;
+row-gap: 20px;
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex481.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex483.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-Showcase.Flex528.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex657.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-Showcase.Flex535.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex661.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-Showcase.Flex646.bpt {
+flex-wrap: wrap;
+flex-direction: row;
+row-gap: 20px;
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex640.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex673.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-Showcase.Flex641.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex669.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-Showcase.Flex642.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-Showcase.Flex665.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-Showcase.Flex621.bpt {
+column-gap: 30px;
+	}
+	.p-Showcase.Flex620.bpt {
+width: ;
+display: flex;
+	}
+	.p-Showcase.Menu7.bpt {
+width: ;
+display: flex;
+	}
+	.p-Showcase.Flex619.bpt {
+display: none;
+	}
+	.p-Showcase.Flex705.bpt {
+padding-left: 30px;
+padding-right: 30px;
+	}
+	.p-Showcase.Flex702.bpt {
+height: 32px;
+	}
+	.p-Showcase.Flex699.bpt {
+flex-wrap: wrap;
+row-gap: 20px;
+	}
+	.p-Showcase.Flex701.bpt {
+flex-wrap: wrap;
+row-gap: 40px;
+justify-content: flex-start;
+column-gap: ;
+	}
+	.p-Showcase.Flex695.bpt {
+width: 50%;
+	}
+	.p-Showcase.Flex696.bpt {
+width: 50%;
+	}
+	.p-Showcase.Flex697.bpt {
+width: 50%;
+	}
+	.p-Showcase.Flex698.bpt {
+width: 50%;
+	}
+	.p-Showcase.TextBox497.bpt {
+font-size: 1.5em;
+	}
+	.p-Showcase.TextBox498.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Tag_1.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+	.p-Showcase.Tag_2.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Tag_3.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Title_1.bpt {
+font-size: 1.5em;
+	}
+	.p-Showcase.Card_Text_1.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Card_Tag_1_a_Text.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+	.p-Showcase.Card_Tag_1_b_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_1_c_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Text_2.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Card_Title_2.bpt {
+font-size: 1.5em;
+	}
+	.p-Showcase.Card_Tag_2_c_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_2_b_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_2_a_Text.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+	.p-Showcase.Card_Title_3.bpt {
+font-size: 1.5em;
+	}
+	.p-Showcase.Card_Text_3.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Card_Tag_3_c_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_3_b_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_3_a_Text.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+	.p-Showcase.Card_Text_6.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Card_Title_6.bpt {
+font-size: 1.5em;
+	}
+	.p-Showcase.Card_Tag_6_c_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_6_b_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_6_a_Text.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+	.p-Showcase.Card_Title_5.bpt {
+font-size: 1.5em;
+	}
+	.p-Showcase.Card_Text_5.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Card_Tag_5_c_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_5_b_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_5_a_Text.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+	.p-Showcase.Card_Text_4.bpt {
+font-size: 1em;
+	}
+	.p-Showcase.Card_Title_4.bpt {
+font-size: 1.5em;
+	}
+	.p-Showcase.Card_Tag_4_c_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_4_b_Text.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-Showcase.Card_Tag_4_a_Text.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+}
\ No newline at end of file
diff --git a/atri_app/app/src/page-css/trial.css b/atri_app/app/src/page-css/trial.css
new file mode 100644
index 0000000..ba6205d
--- /dev/null
+++ b/atri_app/app/src/page-css/trial.css
@@ -0,0 +1,1360 @@
+.p-trial.Flex115 {
+display: flex;
+background-color: #0E0D26;
+flex-direction: column;
+padding-left: 60px;
+padding-right: 60px;
+row-gap: 125px;
+padding-bottom: 100px;
+padding-top: 40px;
+}
+.p-trial.Flex113 {
+display: flex;
+justify-content: center;
+flex-direction: column;
+align-items: center;
+row-gap: 100px;
+}
+.p-trial.Flex106 {
+display: flex;
+background-image: ;
+background-attachment: fixed;
+height: ;
+flex-direction: row;
+row-gap: 50px;
+align-items: stretch;
+background-color: ;
+justify-content: space-between;
+}
+.p-trial.Flex99 {
+display: flex;
+background-color: ;
+border-radius: ;
+}
+.p-trial.Flex100 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: flex-start;
+padding-top: ;
+width: 40%;
+}
+.p-trial.Flex107 {
+display: flex;
+background-image: ;
+background-attachment: fixed;
+height: ;
+flex-direction: column;
+row-gap: 50px;
+align-items: center;
+background-color: ;
+}
+.p-trial.Flex101 {
+display: flex;
+flex-direction: column;
+font-family: Fira Code;
+font-weight: 700;
+font-size: 20px;
+color: #ffffff;
+}
+.p-trial.Flex102 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 10px;
+align-items: center;
+padding-top: ;
+}
+.p-trial.Flex108 {
+display: flex;
+flex-direction: column;
+font-family: ;
+font-weight: 600;
+font-size: ;
+row-gap: 20px;
+align-items: center;
+}
+.p-trial.Flex114 {
+display: flex;
+align-items: center;
+justify-content: space-between;
+padding-left: ;
+padding-right: ;
+font-family: IBM Plex Sans;
+font-size: 18px;
+margin-top: ;
+padding-bottom: ;
+padding-top: ;
+}
+.p-trial.Flex109 {
+display: flex;
+align-items: center;
+justify-content: center;
+}
+.p-trial.Flex103 {
+display: flex;
+column-gap: 30px;
+color: #ffffff;
+font-family: IBM Plex Sans;
+font-weight: 500;
+font-size: 16px;
+}
+.p-trial.Flex110 {
+display: flex;
+align-items: center;
+column-gap: 10px;
+width: 250px;
+justify-content: flex-end;
+}
+.p-trial.Menu2 {
+display: none;
+}
+.p-trial.Flex98 {
+display: flex;
+}
+.p-trial.Flex104 {
+display: flex;
+}
+.p-trial.Flex111 {
+display: flex;
+}
+.p-trial.Flex105 {
+display: none;
+}
+.p-trial.Flex112 {
+display: flex;
+column-gap: 10px;
+align-items: center;
+}
+.p-trial.Overlay2 {
+background-color: #00000073;
+position: fixed;
+top: 0;
+left: 0;
+width: 100%;
+height: 100%;
+justify-content: center;
+align-items: center;
+}
+.p-trial.Flex712 {
+display: flex;
+background-color: #ffffff;
+border-radius: 8px;
+}
+.p-trial.Flex710 {
+display: flex;
+}
+.p-trial.Flex722 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: 5px;
+padding-right: 35px;
+padding-top: 40px;
+padding-bottom: 40px;
+width: ;
+height: px;
+border-radius: 1%;
+max-width: 350px;
+align-items: stretch;
+}
+.p-trial.Flex760 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+flex-direction: column;
+border-style: none;
+padding-left: ;
+padding-right: ;
+padding-top: ;
+padding-bottom: ;
+width: ;
+height: px;
+border-radius: 1%;
+max-width: 350px;
+}
+.p-trial.Flex759 {
+display: flex;
+border-style: none;
+border-color: #f70b0b;
+flex-direction: column;
+padding-left: 20px;
+padding-right: 20px;
+padding-top: 20px;
+padding-bottom: 20px;
+background-color: #2B2B3B;
+row-gap: 40px;
+overflow: hidden;
+box-sizing: border-box;
+}
+.p-trial.Flex756 {
+display: flex;
+background-color: #2B2B3B;
+justify-content: space-between;
+align-items: center;
+}
+.p-trial.Flex751 {
+display: flex;
+column-gap: 20px;
+overflow: hidden;
+box-sizing: border-box;
+align-items: stretch;
+}
+.p-trial.Flex752 {
+display: flex;
+column-gap: 20px;
+}
+.p-trial.Flex757 {
+display: flex;
+overflow: hidden;
+box-sizing: border-box;
+column-gap: 5px;
+background-color: #2B2B3B;
+align-items: center;
+}
+.p-trial.Flex753 {
+display: flex;
+}
+.p-trial.Flex754 {
+display: flex;
+}
+.p-trial.Flex755 {
+display: flex;
+}
+.p-trial.Flex758 {
+display: flex;
+flex-direction: column;
+align-items: stretch;
+row-gap: 10px;
+}
+.p-trial.Flex711 {
+display: flex;
+flex-direction: column;
+padding-left: 40px;
+padding-right: 40px;
+padding-top: 40px;
+padding-bottom: 40px;
+border-right-style: solid;
+border-right-width: 1px;
+border-right-color: #ebe4e4;
+row-gap: 30px;
+align-items: center;
+}
+.p-trial.Flex738 {
+display: flex;
+column-gap: 40px;
+}
+.p-trial.Flex736 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex737 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex741 {
+display: flex;
+column-gap: 40px;
+}
+.p-trial.Flex739 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex740 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex744 {
+display: flex;
+column-gap: 40px;
+}
+.p-trial.Flex742 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex743 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex747 {
+display: flex;
+column-gap: 40px;
+}
+.p-trial.Flex745 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex746 {
+display: flex;
+flex-direction: column;
+row-gap: 7px;
+}
+.p-trial.Flex136 {
+display: flex;
+flex-direction: column;
+padding-left: 60px;
+padding-right: 60px;
+padding-top: 50px;
+padding-bottom: 100px;
+background-color: #1B1948;
+row-gap: 100px;
+}
+.p-trial.Flex133 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex129 {
+display: flex;
+justify-content: space-between;
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #A5B4FC;
+}
+.p-trial.Flex121 {
+display: flex;
+column-gap: 40px;
+}
+.p-trial.Flex134 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex130 {
+display: flex;
+justify-content: space-between;
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #A5B4FC;
+}
+.p-trial.Flex122 {
+display: flex;
+column-gap: 40px;
+}
+.p-trial.Flex135 {
+display: flex;
+background-color: ;
+padding-left: ;
+padding-right: ;
+padding-bottom: ;
+padding-top: ;
+column-gap: ;
+justify-content: space-between;
+}
+.p-trial.Flex131 {
+display: flex;
+flex-direction: column;
+row-gap: 30px;
+width: 20%;
+}
+.p-trial.Flex123 {
+display: flex;
+align-items: flex-start;
+column-gap: 20px;
+}
+.p-trial.Flex124 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+width: ;
+}
+.p-trial.Flex116 {
+display: flex;
+column-gap: 10px;
+align-items: center;
+}
+.p-trial.Flex132 {
+display: flex;
+column-gap: ;
+width: 70%;
+justify-content: space-between;
+}
+.p-trial.Flex125 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex117 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex126 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex118 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex127 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex119 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex128 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex120 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex152 {
+display: flex;
+background-color: #1B1948;
+padding-left: 60px;
+padding-right: 100px;
+padding-bottom: 100px;
+padding-top: 50px;
+column-gap: ;
+justify-content: space-between;
+}
+.p-trial.Flex150 {
+display: flex;
+column-gap: ;
+width: 60%;
+justify-content: space-between;
+}
+.p-trial.Flex147 {
+display: flex;
+flex-direction: column;
+width: ;
+row-gap: 75px;
+align-items: flex-start;
+}
+.p-trial.Flex143 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex139 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex144 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex140 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex148 {
+display: flex;
+flex-direction: column;
+width: ;
+row-gap: 75px;
+}
+.p-trial.Flex145 {
+display: flex;
+width: ;
+justify-content: space-between;
+flex-direction: row;
+}
+.p-trial.Flex141 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex137 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex146 {
+display: flex;
+width: ;
+justify-content: space-between;
+flex-direction: row;
+}
+.p-trial.Flex142 {
+display: flex;
+flex-direction: column;
+row-gap: 20px;
+align-items: flex-start;
+}
+.p-trial.Flex138 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+}
+.p-trial.Flex151 {
+display: flex;
+flex-direction: column;
+row-gap: 10px;
+width: 30%;
+}
+.p-trial.Flex149 {
+display: flex;
+column-gap: 10px;
+align-items: center;
+}
+.p-trial.Image29 {
+width: 700px;
+}
+.p-trial.Image26 {
+;
+}
+.p-trial.TextBox107 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 24px;
+color: #D1FAE5;
+text-align: left;
+}
+.p-trial.TextBox108 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 48px;
+color: #6EE7B7;
+text-align: left;
+}
+.p-trial.TextBox109 {
+font-family: ;
+font-weight: 400;
+font-size: ;
+color: ;
+text-align: left;
+}
+.p-trial.TextBox110 {
+font-family: ;
+font-weight: 400;
+font-size: ;
+color: ;
+text-align: left;
+}
+.p-trial.TextBox111 {
+font-family: ;
+font-weight: 400;
+font-size: ;
+color: ;
+text-align: left;
+}
+.p-trial.TextBox112 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 48px;
+color: #FEF3C7;
+text-align: left;
+}
+.p-trial.TextBox113 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 24px;
+color: #FEF3C7;
+text-align: left;
+}
+.p-trial.TextBox116 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 24px;
+color: #ffffff;
+text-align: left;
+}
+.p-trial.TextBox117 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 64px;
+color: #ffffff;
+text-align: left;
+}
+.p-trial.TextBox114 {
+cursor: pointer;
+}
+.p-trial.TextBox115 {
+cursor: pointer;
+}
+.p-trial.TextBox103 {
+;
+}
+.p-trial.TextBox104 {
+;
+}
+.p-trial.TextBox105 {
+;
+}
+.p-trial.TextBox106 {
+;
+}
+.p-trial.Button7 {
+color: #1E293B;
+background-color: #FDE047;
+padding-top: 8px;
+padding-left: 15px;
+padding-bottom: 8px;
+padding-right: 15px;
+font-size: 16px;
+border-radius: 4px;
+outline: none;
+font-weight: 600;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #F1945A;
+cursor: pointer;
+user-select: none;
+font-family: IBM Plex Sans;
+width: ;
+height: 40px;
+}
+.p-trial.Image27 {
+width: 32px;
+}
+.p-trial.TextBox118 {
+font-family: PT Sans;
+font-weight: 700;
+font-size: 24px;
+color: #ffffff;
+}
+.p-trial.Image28 {
+width: 36px;
+}
+.p-trial.Image314 {
+width: 25px;
+align-self: flex-end;
+position: relative;
+bottom: 26px;
+left: 26px;
+}
+.p-trial.Image313 {
+overflow: hidden;
+box-sizing: border-box;
+width: ;
+height: ;
+border-radius: ;
+border-style: none;
+border-width: ;
+border-color: #ffffff;
+border-top-style: none;
+border-top-width: ;
+border-top-color: #fbfbfb;
+border-right-width: ;
+border-right-style: none;
+border-right-color: #ffffff;
+border-left-style: none;
+border-left-width: ;
+border-left-color: #fffdfd;
+}
+.p-trial.TextBox493 {
+color: #fbf5f5;
+font-family: IBM Plex Sans;
+}
+.p-trial.Image310 {
+width: 20px;
+height: 20px;
+overflow: hidden;
+box-sizing: border-box;
+border-radius: 50%;
+}
+.p-trial.Image311 {
+width: 20px;
+height: 20px;
+}
+.p-trial.Image312 {
+width: 20px;
+height: 20px;
+border-radius: 50%;
+}
+.p-trial.Button229 {
+color: #DB2777;
+background-color: #FCE7F3;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-trial.Button230 {
+color: #0284C7;
+background-color: #E0F2FE;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-trial.Button231 {
+color: #EA580C;
+background-color: #FFEDD5;
+padding-top: 5px;
+padding-left: 5px;
+padding-bottom: 5px;
+padding-right: 5px;
+font-size: 13px;
+border-radius: 10px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: ;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+}
+.p-trial.TextBox494 {
+overflow: hidden;
+box-sizing: border-box;
+word-wrap: break-word;
+font-family: IBM Plex Sans;
+font-weight: 400;
+background-color: #2B2B3B;
+color: #fbf8f8;
+}
+.p-trial.TextBox495 {
+overflow: hidden;
+box-sizing: border-box;
+font-family: IBM Plex Sans;
+font-size: 1.5em;
+background-color: #2B2B3B;
+color: #fbf2f2;
+}
+.p-trial.Button228 {
+color: #fff;
+background-color: #0e0d26;
+padding-top: 12px;
+padding-left: 15px;
+padding-bottom: 12px;
+padding-right: 15px;
+font-size: 16px;
+border-radius: 5px;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+max-width: 200px;
+width: 40%;
+}
+.p-trial.TextBox482 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.Upload2 {
+align-items: center;
+color: #fff;
+background-color: #0e0d26;
+padding-top: 12px;
+padding-left: 15px;
+padding-bottom: 12px;
+padding-right: 15px;
+font-size: 16px;
+border-radius: 3px;
+outline: none;
+font-weight: 400;
+border-width: 1px;
+border-style: none;
+border-color: #1890ff;
+cursor: pointer;
+user-select: none;
+column-gap: 12px;
+}
+.p-trial.TextBox483 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.Upload1 {
+align-items: center;
+color: #fff;
+background-color: #0e0d26;
+padding-top: 12px;
+padding-left: 15px;
+padding-bottom: 12px;
+padding-right: 15px;
+font-size: 16px;
+border-radius: 3px;
+outline: none;
+font-weight: 400;
+border-width: 1px;
+border-style: none;
+border-color: ;
+cursor: pointer;
+user-select: none;
+column-gap: 12px;
+}
+.p-trial.TextBox484 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.Input11 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-trial.TextBox492 {
+font-family: Fira Code;
+font-weight: 400;
+font-size: 10px;
+}
+.p-trial.Input12 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-trial.TextBox485 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.TextBox486 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.Input13 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-trial.Input14 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-trial.TextBox487 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.TextBox488 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.Input15 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-trial.Input16 {
+box-sizing: border-box;
+font-variant: tabular-nums;
+font-feature-settings: tnum;
+padding-top: 11px;
+padding-left: 11px;
+padding-bottom: 11px;
+padding-right: 11px;
+color: #000000d9;
+font-size: 14px;
+background-color: #fff;
+background-image: none;
+border-width: 1px;
+border-style: solid;
+border-color: #d9d9d9;
+border-radius: 30px;
+}
+.p-trial.TextBox489 {
+font-family: IBM Plex Sans;
+font-weight: 500;
+color: #828282;
+}
+.p-trial.Button8 {
+color: #fff;
+background-color: ;
+padding-top: ;
+padding-left: ;
+padding-bottom: ;
+padding-right: ;
+font-size: 16px;
+border-radius: ;
+outline: none;
+font-weight: 400;
+text-align: center;
+border-width: 1px;
+border-style: solid;
+border-color: #A5B4FC;
+cursor: pointer;
+user-select: none;
+}
+.p-trial.TextBox138 {
+;
+}
+.p-trial.TextBox129 {
+;
+}
+.p-trial.TextBox130 {
+;
+}
+.p-trial.TextBox139 {
+;
+}
+.p-trial.TextBox131 {
+;
+}
+.p-trial.TextBox132 {
+;
+}
+.p-trial.Image31 {
+width: 32px;
+height: ;
+}
+.p-trial.Image32 {
+width: 32px;
+height: ;
+}
+.p-trial.Image33 {
+width: 32px;
+height: ;
+}
+.p-trial.Image34 {
+width: 32px;
+height: ;
+}
+.p-trial.Image35 {
+width: 32px;
+height: ;
+}
+.p-trial.TextBox133 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.Image30 {
+width: 36px;
+}
+.p-trial.TextBox119 {
+font-family: PT Sans;
+font-weight: 700;
+font-size: 24px;
+color: #ffffff;
+}
+.p-trial.TextBox134 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox120 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox135 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox121 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox122 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox123 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox136 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox124 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox125 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox126 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox137 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox127 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox128 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox151 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox145 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox146 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox147 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox152 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox148 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox149 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox140 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox141 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox150 {
+font-family: IBM Plex Sans;
+font-weight: 600;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox142 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox143 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox144 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.TextBox154 {
+font-family: IBM Plex Sans;
+font-weight: 400;
+font-size: 16px;
+color: #ffffff;
+}
+.p-trial.Image36 {
+width: 36px;
+}
+.p-trial.TextBox153 {
+font-family: PT Sans;
+font-weight: 700;
+font-size: 24px;
+color: #ffffff;
+}
+@media screen and (max-width: 991px) {
+	.p-trial.Flex103.bpt {
+display: none;
+	}
+	.p-trial.Menu2.bpt {
+display: flex;
+cursor: pointer;
+	}
+	.p-trial.Flex98.bpt {
+flex-direction: column;
+column-gap: ;
+row-gap: 16px;
+margin-top: 20px;
+align-items: flex-end;
+width: 100px;
+	}
+	.p-trial.Flex104.bpt {
+display: none;
+	}
+	.p-trial.Flex105.bpt {
+display: flex;
+	}
+	.p-trial.Flex722.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-trial.Flex760.bpt {
+align-items: stretch;
+justify-content: flex-start;
+	}
+	.p-trial.Image27.bpt {
+cursor: pointer;
+	}
+	.p-trial.Flex759.bpt {
+row-gap: 40px;
+align-items: stretch;
+padding-bottom: 20px;
+	}
+	.p-trial.Button229.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-trial.Button230.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-trial.Button231.bpt {
+padding-left: 2px;
+padding-right: 2px;
+	}
+	.p-trial.TextBox494.bpt {
+font-size: 0.9em;
+	}
+	.p-trial.TextBox495.bpt {
+font-size: 1.2em;
+	}
+}
+@media screen and (max-width: 767px) {
+	.p-trial.Flex756.bpt {
+overflow: hidden;
+box-sizing: border-box;
+	}
+	.p-trial.Flex751.bpt {
+column-gap: 10px;
+align-items: stretch;
+	}
+	.p-trial.Flex752.bpt {
+column-gap: 10px;
+	}
+	.p-trial.TextBox493.bpt {
+align-self: center;
+font-family: IBM Plex Sans;
+	}
+	.p-trial.Flex759.bpt {
+padding-left: 15px;
+padding-right: 15px;
+row-gap: 30px;
+	}
+	.p-trial.Flex757.bpt {
+justify-content: flex-start;
+column-gap: 7px;
+	}
+	.p-trial.Button229.bpt {
+font-size: 16px;
+padding-right: 5px;
+padding-left: 5px;
+	}
+	.p-trial.Button230.bpt {
+font-size: 16px;
+padding-left: 5px;
+padding-right: 5px;
+	}
+	.p-trial.Button231.bpt {
+padding-left: 5px;
+padding-right: 5px;
+font-size: 16px;
+	}
+	.p-trial.TextBox494.bpt {
+font-size: 1em;
+word-wrap: normal;
+	}
+	.p-trial.TextBox495.bpt {
+font-size: 1.6em;
+font-weight: 400;
+	}
+}
+@media screen and (max-width: 478px) {
+	.p-trial.Flex759.bpt {
+padding-left: 15px;
+padding-right: 15px;
+	}
+	.p-trial.Flex757.bpt {
+justify-content: flex-start;
+column-gap: 10px;
+	}
+	.p-trial.Image27.bpt {
+width: 32px;
+	}
+	.p-trial.Button229.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-trial.Button230.bpt {
+font-size: 15px;
+padding-left: 3px;
+padding-right: 3px;
+	}
+	.p-trial.Button231.bpt {
+font-size: 15px;
+padding-right: 3px;
+padding-left: 3px;
+	}
+	.p-trial.TextBox494.bpt {
+font-size: 1em;
+	}
+	.p-trial.TextBox495.bpt {
+font-size: 1.5em;
+	}
+}
\ No newline at end of file
diff --git a/atri_app/app/src/pages/Home.jsx b/atri_app/app/src/pages/Home.jsx
new file mode 100644
index 0000000..8330986
--- /dev/null
+++ b/atri_app/app/src/pages/Home.jsx
@@ -0,0 +1,572 @@
+import { useLayoutEffect, useEffect } from "react";
+import useStore, { updateStoreStateFromController } from "../hooks/useStore";
+import useIoStore from "../hooks/useIoStore";
+import { useNavigate, useLocation } from "react-router-dom";
+import { subscribeInternalNavigation } from "../utils/navigate";
+import {fetchPageProps} from "../utils/fetchPageProps"
+import { Flex } from "@atrilabs/react-component-manifests/src/manifests/Flex/Flex.tsx";
+import { Menu } from "@atrilabs/react-component-manifests/src/manifests/Menu/Menu.tsx";
+import { Image } from "@atrilabs/react-component-manifests/src/manifests/Image/Image.tsx";
+import { TextBox } from "@atrilabs/react-component-manifests/src/manifests/TextBox/TextBox.tsx";
+import { Button } from "@atrilabs/react-component-manifests/src/manifests/Button/Button.tsx";
+import { Input } from "@atrilabs/react-component-manifests/src/manifests/Input/Input.tsx";
+import { useFlex1Cb, useFlex14Cb, useFlex5Cb, useFlex10Cb, useFlex154Cb, useFlex12Cb, useFlex9Cb, useMenu1Cb, useFlex6Cb, useFlex16Cb, useFlex15Cb, useFlex243Cb, useFlex160Cb, useFlex77Cb, useFlex62Cb, useFlex60Cb, useFlex51Cb, useFlex47Cb, useFlex52Cb, useFlex48Cb, useFlex53Cb, useFlex49Cb, useFlex54Cb, useFlex50Cb, useFlex250Cb, useFlex251Cb, useFlex252Cb, useFlex259Cb, useFlex258Cb, useFlex256Cb, useFlex86Cb, useFlex85Cb, useFlex84Cb, useFlex241Cb, useFlex195Cb, useFlex193Cb, useFlex183Cb, useFlex242Cb, useFlex229Cb, useFlex227Cb, useFlex228Cb, useFlex232Cb, useFlex230Cb, useFlex231Cb, useFlex271Cb, useFlex269Cb, useFlex270Cb, useFlex223Cb, useFlex219Cb, useFlex207Cb, useFlex198Cb, useFlex199Cb, useFlex208Cb, useFlex226Cb, useFlex224Cb, useFlex225Cb, useImage2Cb, useTextBox2Cb, useTextBox10Cb, useTextBox11Cb, useTextBox155Cb, useTextBox156Cb, useImage37Cb, useButton2Cb, useTextBox5Cb, useTextBox6Cb, useTextBox7Cb, useTextBox8Cb, useTextBox14Cb, useTextBox16Cb, useTextBox160Cb, useImage66Cb, useImage38Cb, useTextBox63Cb, useTextBox54Cb, useTextBox55Cb, useTextBox64Cb, useTextBox56Cb, useTextBox57Cb, useTextBox58Cb, useTextBox65Cb, useTextBox59Cb, useTextBox60Cb, useTextBox61Cb, useTextBox66Cb, useTextBox62Cb, useImage76Cb, useImage77Cb, useImage78Cb, useImage79Cb, useTextBox230Cb, useImage85Cb, useImage84Cb, useTextBox229Cb, useTextBox95Cb, useTextBox93Cb, useTextBox94Cb, useImage63Cb, useTextBox185Cb, useTextBox186Cb, useImage60Cb, useTextBox213Cb, useTextBox214Cb, useTextBox215Cb, useTextBox216Cb, useTextBox217Cb, useTextBox218Cb, useImage59Cb, useImage96Cb, useTextBox237Cb, useTextBox238Cb, useTextBox239Cb, useInput4Cb, useButton16Cb, useTextBox192Cb, useTextBox201Cb, useTextBox202Cb, useTextBox209Cb, useTextBox210Cb, useImage56Cb } from "../page-cbs/Home";
+import "../page-css/Home.css";
+import "../custom/Home";
+
+export default function Home() {
+  const navigate = useNavigate();
+  useEffect(() => {
+    const unsub = subscribeInternalNavigation((url) => {
+      navigate(url);
+    });
+    return unsub;
+  }, [navigate]);
+
+  const location = useLocation();
+  useLayoutEffect(()=>{
+    fetchPageProps(location.pathname, location.search).then((res)=>{
+      updateStoreStateFromController(res.pageName, res.pageState)
+    })
+  }, [location])
+
+  const Flex1Props = useStore((state)=>state["Home"]["Flex1"]);
+const Flex1IoProps = useIoStore((state)=>state["Home"]["Flex1"]);
+const Flex1Cb = useFlex1Cb()
+const Flex14Props = useStore((state)=>state["Home"]["Flex14"]);
+const Flex14IoProps = useIoStore((state)=>state["Home"]["Flex14"]);
+const Flex14Cb = useFlex14Cb()
+const Flex5Props = useStore((state)=>state["Home"]["Flex5"]);
+const Flex5IoProps = useIoStore((state)=>state["Home"]["Flex5"]);
+const Flex5Cb = useFlex5Cb()
+const Flex10Props = useStore((state)=>state["Home"]["Flex10"]);
+const Flex10IoProps = useIoStore((state)=>state["Home"]["Flex10"]);
+const Flex10Cb = useFlex10Cb()
+const Flex154Props = useStore((state)=>state["Home"]["Flex154"]);
+const Flex154IoProps = useIoStore((state)=>state["Home"]["Flex154"]);
+const Flex154Cb = useFlex154Cb()
+const Flex12Props = useStore((state)=>state["Home"]["Flex12"]);
+const Flex12IoProps = useIoStore((state)=>state["Home"]["Flex12"]);
+const Flex12Cb = useFlex12Cb()
+const Flex9Props = useStore((state)=>state["Home"]["Flex9"]);
+const Flex9IoProps = useIoStore((state)=>state["Home"]["Flex9"]);
+const Flex9Cb = useFlex9Cb()
+const Menu1Props = useStore((state)=>state["Home"]["Menu1"]);
+const Menu1IoProps = useIoStore((state)=>state["Home"]["Menu1"]);
+const Menu1Cb = useMenu1Cb()
+const Flex6Props = useStore((state)=>state["Home"]["Flex6"]);
+const Flex6IoProps = useIoStore((state)=>state["Home"]["Flex6"]);
+const Flex6Cb = useFlex6Cb()
+const Flex16Props = useStore((state)=>state["Home"]["Flex16"]);
+const Flex16IoProps = useIoStore((state)=>state["Home"]["Flex16"]);
+const Flex16Cb = useFlex16Cb()
+const Flex15Props = useStore((state)=>state["Home"]["Flex15"]);
+const Flex15IoProps = useIoStore((state)=>state["Home"]["Flex15"]);
+const Flex15Cb = useFlex15Cb()
+const Flex243Props = useStore((state)=>state["Home"]["Flex243"]);
+const Flex243IoProps = useIoStore((state)=>state["Home"]["Flex243"]);
+const Flex243Cb = useFlex243Cb()
+const Flex160Props = useStore((state)=>state["Home"]["Flex160"]);
+const Flex160IoProps = useIoStore((state)=>state["Home"]["Flex160"]);
+const Flex160Cb = useFlex160Cb()
+const Flex77Props = useStore((state)=>state["Home"]["Flex77"]);
+const Flex77IoProps = useIoStore((state)=>state["Home"]["Flex77"]);
+const Flex77Cb = useFlex77Cb()
+const Flex62Props = useStore((state)=>state["Home"]["Flex62"]);
+const Flex62IoProps = useIoStore((state)=>state["Home"]["Flex62"]);
+const Flex62Cb = useFlex62Cb()
+const Flex60Props = useStore((state)=>state["Home"]["Flex60"]);
+const Flex60IoProps = useIoStore((state)=>state["Home"]["Flex60"]);
+const Flex60Cb = useFlex60Cb()
+const Flex51Props = useStore((state)=>state["Home"]["Flex51"]);
+const Flex51IoProps = useIoStore((state)=>state["Home"]["Flex51"]);
+const Flex51Cb = useFlex51Cb()
+const Flex47Props = useStore((state)=>state["Home"]["Flex47"]);
+const Flex47IoProps = useIoStore((state)=>state["Home"]["Flex47"]);
+const Flex47Cb = useFlex47Cb()
+const Flex52Props = useStore((state)=>state["Home"]["Flex52"]);
+const Flex52IoProps = useIoStore((state)=>state["Home"]["Flex52"]);
+const Flex52Cb = useFlex52Cb()
+const Flex48Props = useStore((state)=>state["Home"]["Flex48"]);
+const Flex48IoProps = useIoStore((state)=>state["Home"]["Flex48"]);
+const Flex48Cb = useFlex48Cb()
+const Flex53Props = useStore((state)=>state["Home"]["Flex53"]);
+const Flex53IoProps = useIoStore((state)=>state["Home"]["Flex53"]);
+const Flex53Cb = useFlex53Cb()
+const Flex49Props = useStore((state)=>state["Home"]["Flex49"]);
+const Flex49IoProps = useIoStore((state)=>state["Home"]["Flex49"]);
+const Flex49Cb = useFlex49Cb()
+const Flex54Props = useStore((state)=>state["Home"]["Flex54"]);
+const Flex54IoProps = useIoStore((state)=>state["Home"]["Flex54"]);
+const Flex54Cb = useFlex54Cb()
+const Flex50Props = useStore((state)=>state["Home"]["Flex50"]);
+const Flex50IoProps = useIoStore((state)=>state["Home"]["Flex50"]);
+const Flex50Cb = useFlex50Cb()
+const Flex250Props = useStore((state)=>state["Home"]["Flex250"]);
+const Flex250IoProps = useIoStore((state)=>state["Home"]["Flex250"]);
+const Flex250Cb = useFlex250Cb()
+const Flex251Props = useStore((state)=>state["Home"]["Flex251"]);
+const Flex251IoProps = useIoStore((state)=>state["Home"]["Flex251"]);
+const Flex251Cb = useFlex251Cb()
+const Flex252Props = useStore((state)=>state["Home"]["Flex252"]);
+const Flex252IoProps = useIoStore((state)=>state["Home"]["Flex252"]);
+const Flex252Cb = useFlex252Cb()
+const Flex259Props = useStore((state)=>state["Home"]["Flex259"]);
+const Flex259IoProps = useIoStore((state)=>state["Home"]["Flex259"]);
+const Flex259Cb = useFlex259Cb()
+const Flex258Props = useStore((state)=>state["Home"]["Flex258"]);
+const Flex258IoProps = useIoStore((state)=>state["Home"]["Flex258"]);
+const Flex258Cb = useFlex258Cb()
+const Flex256Props = useStore((state)=>state["Home"]["Flex256"]);
+const Flex256IoProps = useIoStore((state)=>state["Home"]["Flex256"]);
+const Flex256Cb = useFlex256Cb()
+const Flex86Props = useStore((state)=>state["Home"]["Flex86"]);
+const Flex86IoProps = useIoStore((state)=>state["Home"]["Flex86"]);
+const Flex86Cb = useFlex86Cb()
+const Flex85Props = useStore((state)=>state["Home"]["Flex85"]);
+const Flex85IoProps = useIoStore((state)=>state["Home"]["Flex85"]);
+const Flex85Cb = useFlex85Cb()
+const Flex84Props = useStore((state)=>state["Home"]["Flex84"]);
+const Flex84IoProps = useIoStore((state)=>state["Home"]["Flex84"]);
+const Flex84Cb = useFlex84Cb()
+const Flex241Props = useStore((state)=>state["Home"]["Flex241"]);
+const Flex241IoProps = useIoStore((state)=>state["Home"]["Flex241"]);
+const Flex241Cb = useFlex241Cb()
+const Flex195Props = useStore((state)=>state["Home"]["Flex195"]);
+const Flex195IoProps = useIoStore((state)=>state["Home"]["Flex195"]);
+const Flex195Cb = useFlex195Cb()
+const Flex193Props = useStore((state)=>state["Home"]["Flex193"]);
+const Flex193IoProps = useIoStore((state)=>state["Home"]["Flex193"]);
+const Flex193Cb = useFlex193Cb()
+const Flex183Props = useStore((state)=>state["Home"]["Flex183"]);
+const Flex183IoProps = useIoStore((state)=>state["Home"]["Flex183"]);
+const Flex183Cb = useFlex183Cb()
+const Flex242Props = useStore((state)=>state["Home"]["Flex242"]);
+const Flex242IoProps = useIoStore((state)=>state["Home"]["Flex242"]);
+const Flex242Cb = useFlex242Cb()
+const Flex229Props = useStore((state)=>state["Home"]["Flex229"]);
+const Flex229IoProps = useIoStore((state)=>state["Home"]["Flex229"]);
+const Flex229Cb = useFlex229Cb()
+const Flex227Props = useStore((state)=>state["Home"]["Flex227"]);
+const Flex227IoProps = useIoStore((state)=>state["Home"]["Flex227"]);
+const Flex227Cb = useFlex227Cb()
+const Flex228Props = useStore((state)=>state["Home"]["Flex228"]);
+const Flex228IoProps = useIoStore((state)=>state["Home"]["Flex228"]);
+const Flex228Cb = useFlex228Cb()
+const Flex232Props = useStore((state)=>state["Home"]["Flex232"]);
+const Flex232IoProps = useIoStore((state)=>state["Home"]["Flex232"]);
+const Flex232Cb = useFlex232Cb()
+const Flex230Props = useStore((state)=>state["Home"]["Flex230"]);
+const Flex230IoProps = useIoStore((state)=>state["Home"]["Flex230"]);
+const Flex230Cb = useFlex230Cb()
+const Flex231Props = useStore((state)=>state["Home"]["Flex231"]);
+const Flex231IoProps = useIoStore((state)=>state["Home"]["Flex231"]);
+const Flex231Cb = useFlex231Cb()
+const Flex271Props = useStore((state)=>state["Home"]["Flex271"]);
+const Flex271IoProps = useIoStore((state)=>state["Home"]["Flex271"]);
+const Flex271Cb = useFlex271Cb()
+const Flex269Props = useStore((state)=>state["Home"]["Flex269"]);
+const Flex269IoProps = useIoStore((state)=>state["Home"]["Flex269"]);
+const Flex269Cb = useFlex269Cb()
+const Flex270Props = useStore((state)=>state["Home"]["Flex270"]);
+const Flex270IoProps = useIoStore((state)=>state["Home"]["Flex270"]);
+const Flex270Cb = useFlex270Cb()
+const Flex223Props = useStore((state)=>state["Home"]["Flex223"]);
+const Flex223IoProps = useIoStore((state)=>state["Home"]["Flex223"]);
+const Flex223Cb = useFlex223Cb()
+const Flex219Props = useStore((state)=>state["Home"]["Flex219"]);
+const Flex219IoProps = useIoStore((state)=>state["Home"]["Flex219"]);
+const Flex219Cb = useFlex219Cb()
+const Flex207Props = useStore((state)=>state["Home"]["Flex207"]);
+const Flex207IoProps = useIoStore((state)=>state["Home"]["Flex207"]);
+const Flex207Cb = useFlex207Cb()
+const Flex198Props = useStore((state)=>state["Home"]["Flex198"]);
+const Flex198IoProps = useIoStore((state)=>state["Home"]["Flex198"]);
+const Flex198Cb = useFlex198Cb()
+const Flex199Props = useStore((state)=>state["Home"]["Flex199"]);
+const Flex199IoProps = useIoStore((state)=>state["Home"]["Flex199"]);
+const Flex199Cb = useFlex199Cb()
+const Flex208Props = useStore((state)=>state["Home"]["Flex208"]);
+const Flex208IoProps = useIoStore((state)=>state["Home"]["Flex208"]);
+const Flex208Cb = useFlex208Cb()
+const Flex226Props = useStore((state)=>state["Home"]["Flex226"]);
+const Flex226IoProps = useIoStore((state)=>state["Home"]["Flex226"]);
+const Flex226Cb = useFlex226Cb()
+const Flex224Props = useStore((state)=>state["Home"]["Flex224"]);
+const Flex224IoProps = useIoStore((state)=>state["Home"]["Flex224"]);
+const Flex224Cb = useFlex224Cb()
+const Flex225Props = useStore((state)=>state["Home"]["Flex225"]);
+const Flex225IoProps = useIoStore((state)=>state["Home"]["Flex225"]);
+const Flex225Cb = useFlex225Cb()
+const Image2Props = useStore((state)=>state["Home"]["Image2"]);
+const Image2IoProps = useIoStore((state)=>state["Home"]["Image2"]);
+const Image2Cb = useImage2Cb()
+const TextBox2Props = useStore((state)=>state["Home"]["TextBox2"]);
+const TextBox2IoProps = useIoStore((state)=>state["Home"]["TextBox2"]);
+const TextBox2Cb = useTextBox2Cb()
+const TextBox10Props = useStore((state)=>state["Home"]["TextBox10"]);
+const TextBox10IoProps = useIoStore((state)=>state["Home"]["TextBox10"]);
+const TextBox10Cb = useTextBox10Cb()
+const TextBox11Props = useStore((state)=>state["Home"]["TextBox11"]);
+const TextBox11IoProps = useIoStore((state)=>state["Home"]["TextBox11"]);
+const TextBox11Cb = useTextBox11Cb()
+const TextBox155Props = useStore((state)=>state["Home"]["TextBox155"]);
+const TextBox155IoProps = useIoStore((state)=>state["Home"]["TextBox155"]);
+const TextBox155Cb = useTextBox155Cb()
+const TextBox156Props = useStore((state)=>state["Home"]["TextBox156"]);
+const TextBox156IoProps = useIoStore((state)=>state["Home"]["TextBox156"]);
+const TextBox156Cb = useTextBox156Cb()
+const Image37Props = useStore((state)=>state["Home"]["Image37"]);
+const Image37IoProps = useIoStore((state)=>state["Home"]["Image37"]);
+const Image37Cb = useImage37Cb()
+const Button2Props = useStore((state)=>state["Home"]["Button2"]);
+const Button2IoProps = useIoStore((state)=>state["Home"]["Button2"]);
+const Button2Cb = useButton2Cb()
+const TextBox5Props = useStore((state)=>state["Home"]["TextBox5"]);
+const TextBox5IoProps = useIoStore((state)=>state["Home"]["TextBox5"]);
+const TextBox5Cb = useTextBox5Cb()
+const TextBox6Props = useStore((state)=>state["Home"]["TextBox6"]);
+const TextBox6IoProps = useIoStore((state)=>state["Home"]["TextBox6"]);
+const TextBox6Cb = useTextBox6Cb()
+const TextBox7Props = useStore((state)=>state["Home"]["TextBox7"]);
+const TextBox7IoProps = useIoStore((state)=>state["Home"]["TextBox7"]);
+const TextBox7Cb = useTextBox7Cb()
+const TextBox8Props = useStore((state)=>state["Home"]["TextBox8"]);
+const TextBox8IoProps = useIoStore((state)=>state["Home"]["TextBox8"]);
+const TextBox8Cb = useTextBox8Cb()
+const TextBox14Props = useStore((state)=>state["Home"]["TextBox14"]);
+const TextBox14IoProps = useIoStore((state)=>state["Home"]["TextBox14"]);
+const TextBox14Cb = useTextBox14Cb()
+const TextBox16Props = useStore((state)=>state["Home"]["TextBox16"]);
+const TextBox16IoProps = useIoStore((state)=>state["Home"]["TextBox16"]);
+const TextBox16Cb = useTextBox16Cb()
+const TextBox160Props = useStore((state)=>state["Home"]["TextBox160"]);
+const TextBox160IoProps = useIoStore((state)=>state["Home"]["TextBox160"]);
+const TextBox160Cb = useTextBox160Cb()
+const Image66Props = useStore((state)=>state["Home"]["Image66"]);
+const Image66IoProps = useIoStore((state)=>state["Home"]["Image66"]);
+const Image66Cb = useImage66Cb()
+const Image38Props = useStore((state)=>state["Home"]["Image38"]);
+const Image38IoProps = useIoStore((state)=>state["Home"]["Image38"]);
+const Image38Cb = useImage38Cb()
+const TextBox63Props = useStore((state)=>state["Home"]["TextBox63"]);
+const TextBox63IoProps = useIoStore((state)=>state["Home"]["TextBox63"]);
+const TextBox63Cb = useTextBox63Cb()
+const TextBox54Props = useStore((state)=>state["Home"]["TextBox54"]);
+const TextBox54IoProps = useIoStore((state)=>state["Home"]["TextBox54"]);
+const TextBox54Cb = useTextBox54Cb()
+const TextBox55Props = useStore((state)=>state["Home"]["TextBox55"]);
+const TextBox55IoProps = useIoStore((state)=>state["Home"]["TextBox55"]);
+const TextBox55Cb = useTextBox55Cb()
+const TextBox64Props = useStore((state)=>state["Home"]["TextBox64"]);
+const TextBox64IoProps = useIoStore((state)=>state["Home"]["TextBox64"]);
+const TextBox64Cb = useTextBox64Cb()
+const TextBox56Props = useStore((state)=>state["Home"]["TextBox56"]);
+const TextBox56IoProps = useIoStore((state)=>state["Home"]["TextBox56"]);
+const TextBox56Cb = useTextBox56Cb()
+const TextBox57Props = useStore((state)=>state["Home"]["TextBox57"]);
+const TextBox57IoProps = useIoStore((state)=>state["Home"]["TextBox57"]);
+const TextBox57Cb = useTextBox57Cb()
+const TextBox58Props = useStore((state)=>state["Home"]["TextBox58"]);
+const TextBox58IoProps = useIoStore((state)=>state["Home"]["TextBox58"]);
+const TextBox58Cb = useTextBox58Cb()
+const TextBox65Props = useStore((state)=>state["Home"]["TextBox65"]);
+const TextBox65IoProps = useIoStore((state)=>state["Home"]["TextBox65"]);
+const TextBox65Cb = useTextBox65Cb()
+const TextBox59Props = useStore((state)=>state["Home"]["TextBox59"]);
+const TextBox59IoProps = useIoStore((state)=>state["Home"]["TextBox59"]);
+const TextBox59Cb = useTextBox59Cb()
+const TextBox60Props = useStore((state)=>state["Home"]["TextBox60"]);
+const TextBox60IoProps = useIoStore((state)=>state["Home"]["TextBox60"]);
+const TextBox60Cb = useTextBox60Cb()
+const TextBox61Props = useStore((state)=>state["Home"]["TextBox61"]);
+const TextBox61IoProps = useIoStore((state)=>state["Home"]["TextBox61"]);
+const TextBox61Cb = useTextBox61Cb()
+const TextBox66Props = useStore((state)=>state["Home"]["TextBox66"]);
+const TextBox66IoProps = useIoStore((state)=>state["Home"]["TextBox66"]);
+const TextBox66Cb = useTextBox66Cb()
+const TextBox62Props = useStore((state)=>state["Home"]["TextBox62"]);
+const TextBox62IoProps = useIoStore((state)=>state["Home"]["TextBox62"]);
+const TextBox62Cb = useTextBox62Cb()
+const Image76Props = useStore((state)=>state["Home"]["Image76"]);
+const Image76IoProps = useIoStore((state)=>state["Home"]["Image76"]);
+const Image76Cb = useImage76Cb()
+const Image77Props = useStore((state)=>state["Home"]["Image77"]);
+const Image77IoProps = useIoStore((state)=>state["Home"]["Image77"]);
+const Image77Cb = useImage77Cb()
+const Image78Props = useStore((state)=>state["Home"]["Image78"]);
+const Image78IoProps = useIoStore((state)=>state["Home"]["Image78"]);
+const Image78Cb = useImage78Cb()
+const Image79Props = useStore((state)=>state["Home"]["Image79"]);
+const Image79IoProps = useIoStore((state)=>state["Home"]["Image79"]);
+const Image79Cb = useImage79Cb()
+const TextBox230Props = useStore((state)=>state["Home"]["TextBox230"]);
+const TextBox230IoProps = useIoStore((state)=>state["Home"]["TextBox230"]);
+const TextBox230Cb = useTextBox230Cb()
+const Image85Props = useStore((state)=>state["Home"]["Image85"]);
+const Image85IoProps = useIoStore((state)=>state["Home"]["Image85"]);
+const Image85Cb = useImage85Cb()
+const Image84Props = useStore((state)=>state["Home"]["Image84"]);
+const Image84IoProps = useIoStore((state)=>state["Home"]["Image84"]);
+const Image84Cb = useImage84Cb()
+const TextBox229Props = useStore((state)=>state["Home"]["TextBox229"]);
+const TextBox229IoProps = useIoStore((state)=>state["Home"]["TextBox229"]);
+const TextBox229Cb = useTextBox229Cb()
+const TextBox95Props = useStore((state)=>state["Home"]["TextBox95"]);
+const TextBox95IoProps = useIoStore((state)=>state["Home"]["TextBox95"]);
+const TextBox95Cb = useTextBox95Cb()
+const TextBox93Props = useStore((state)=>state["Home"]["TextBox93"]);
+const TextBox93IoProps = useIoStore((state)=>state["Home"]["TextBox93"]);
+const TextBox93Cb = useTextBox93Cb()
+const TextBox94Props = useStore((state)=>state["Home"]["TextBox94"]);
+const TextBox94IoProps = useIoStore((state)=>state["Home"]["TextBox94"]);
+const TextBox94Cb = useTextBox94Cb()
+const Image63Props = useStore((state)=>state["Home"]["Image63"]);
+const Image63IoProps = useIoStore((state)=>state["Home"]["Image63"]);
+const Image63Cb = useImage63Cb()
+const TextBox185Props = useStore((state)=>state["Home"]["TextBox185"]);
+const TextBox185IoProps = useIoStore((state)=>state["Home"]["TextBox185"]);
+const TextBox185Cb = useTextBox185Cb()
+const TextBox186Props = useStore((state)=>state["Home"]["TextBox186"]);
+const TextBox186IoProps = useIoStore((state)=>state["Home"]["TextBox186"]);
+const TextBox186Cb = useTextBox186Cb()
+const Image60Props = useStore((state)=>state["Home"]["Image60"]);
+const Image60IoProps = useIoStore((state)=>state["Home"]["Image60"]);
+const Image60Cb = useImage60Cb()
+const TextBox213Props = useStore((state)=>state["Home"]["TextBox213"]);
+const TextBox213IoProps = useIoStore((state)=>state["Home"]["TextBox213"]);
+const TextBox213Cb = useTextBox213Cb()
+const TextBox214Props = useStore((state)=>state["Home"]["TextBox214"]);
+const TextBox214IoProps = useIoStore((state)=>state["Home"]["TextBox214"]);
+const TextBox214Cb = useTextBox214Cb()
+const TextBox215Props = useStore((state)=>state["Home"]["TextBox215"]);
+const TextBox215IoProps = useIoStore((state)=>state["Home"]["TextBox215"]);
+const TextBox215Cb = useTextBox215Cb()
+const TextBox216Props = useStore((state)=>state["Home"]["TextBox216"]);
+const TextBox216IoProps = useIoStore((state)=>state["Home"]["TextBox216"]);
+const TextBox216Cb = useTextBox216Cb()
+const TextBox217Props = useStore((state)=>state["Home"]["TextBox217"]);
+const TextBox217IoProps = useIoStore((state)=>state["Home"]["TextBox217"]);
+const TextBox217Cb = useTextBox217Cb()
+const TextBox218Props = useStore((state)=>state["Home"]["TextBox218"]);
+const TextBox218IoProps = useIoStore((state)=>state["Home"]["TextBox218"]);
+const TextBox218Cb = useTextBox218Cb()
+const Image59Props = useStore((state)=>state["Home"]["Image59"]);
+const Image59IoProps = useIoStore((state)=>state["Home"]["Image59"]);
+const Image59Cb = useImage59Cb()
+const Image96Props = useStore((state)=>state["Home"]["Image96"]);
+const Image96IoProps = useIoStore((state)=>state["Home"]["Image96"]);
+const Image96Cb = useImage96Cb()
+const TextBox237Props = useStore((state)=>state["Home"]["TextBox237"]);
+const TextBox237IoProps = useIoStore((state)=>state["Home"]["TextBox237"]);
+const TextBox237Cb = useTextBox237Cb()
+const TextBox238Props = useStore((state)=>state["Home"]["TextBox238"]);
+const TextBox238IoProps = useIoStore((state)=>state["Home"]["TextBox238"]);
+const TextBox238Cb = useTextBox238Cb()
+const TextBox239Props = useStore((state)=>state["Home"]["TextBox239"]);
+const TextBox239IoProps = useIoStore((state)=>state["Home"]["TextBox239"]);
+const TextBox239Cb = useTextBox239Cb()
+const Input4Props = useStore((state)=>state["Home"]["Input4"]);
+const Input4IoProps = useIoStore((state)=>state["Home"]["Input4"]);
+const Input4Cb = useInput4Cb()
+const Button16Props = useStore((state)=>state["Home"]["Button16"]);
+const Button16IoProps = useIoStore((state)=>state["Home"]["Button16"]);
+const Button16Cb = useButton16Cb()
+const TextBox192Props = useStore((state)=>state["Home"]["TextBox192"]);
+const TextBox192IoProps = useIoStore((state)=>state["Home"]["TextBox192"]);
+const TextBox192Cb = useTextBox192Cb()
+const TextBox201Props = useStore((state)=>state["Home"]["TextBox201"]);
+const TextBox201IoProps = useIoStore((state)=>state["Home"]["TextBox201"]);
+const TextBox201Cb = useTextBox201Cb()
+const TextBox202Props = useStore((state)=>state["Home"]["TextBox202"]);
+const TextBox202IoProps = useIoStore((state)=>state["Home"]["TextBox202"]);
+const TextBox202Cb = useTextBox202Cb()
+const TextBox209Props = useStore((state)=>state["Home"]["TextBox209"]);
+const TextBox209IoProps = useIoStore((state)=>state["Home"]["TextBox209"]);
+const TextBox209Cb = useTextBox209Cb()
+const TextBox210Props = useStore((state)=>state["Home"]["TextBox210"]);
+const TextBox210IoProps = useIoStore((state)=>state["Home"]["TextBox210"]);
+const TextBox210Cb = useTextBox210Cb()
+const Image56Props = useStore((state)=>state["Home"]["Image56"]);
+const Image56IoProps = useIoStore((state)=>state["Home"]["Image56"]);
+const Image56Cb = useImage56Cb()
+
+  return (<>
+  <Flex className="p-Home Flex1 bpt" {...Flex1Props} {...Flex1Cb} {...Flex1IoProps}>
+<Flex className="p-Home Flex14 bpt" {...Flex14Props} {...Flex14Cb} {...Flex14IoProps}>
+<Flex className="p-Home Flex5 bpt" {...Flex5Props} {...Flex5Cb} {...Flex5IoProps}>
+<Image className="p-Home Image2 bpt" {...Image2Props} {...Image2Cb} {...Image2IoProps}/>
+<TextBox className="p-Home TextBox2 bpt" {...TextBox2Props} {...TextBox2Cb} {...TextBox2IoProps}/>
+</Flex>
+<Flex className="p-Home Flex10 bpt" {...Flex10Props} {...Flex10Cb} {...Flex10IoProps}>
+<TextBox className="p-Home TextBox10 bpt" {...TextBox10Props} {...TextBox10Cb} {...TextBox10IoProps}/>
+<TextBox className="p-Home TextBox11 bpt" {...TextBox11Props} {...TextBox11Cb} {...TextBox11IoProps}/>
+<TextBox className="p-Home TextBox156 bpt" {...TextBox156Props} {...TextBox156Cb} {...TextBox156IoProps}/>
+<TextBox className="p-Home TextBox155 bpt" {...TextBox155Props} {...TextBox155Cb} {...TextBox155IoProps}/>
+</Flex>
+<Flex className="p-Home Flex154 bpt" {...Flex154Props} {...Flex154Cb} {...Flex154IoProps}>
+<Image className="p-Home Image37 bpt" {...Image37Props} {...Image37Cb} {...Image37IoProps}/>
+<Flex className="p-Home Flex12 bpt" {...Flex12Props} {...Flex12Cb} {...Flex12IoProps}>
+<Flex className="p-Home Flex9 bpt" {...Flex9Props} {...Flex9Cb} {...Flex9IoProps}>
+<Button className="p-Home Button2 bpt" {...Button2Props} {...Button2Cb} {...Button2IoProps}/>
+</Flex>
+<Menu className="p-Home Menu1 bpt" {...Menu1Props} {...Menu1Cb} {...Menu1IoProps}>
+<Flex className="p-Home Flex6 bpt" {...Flex6Props} {...Flex6Cb} {...Flex6IoProps}>
+<TextBox className="p-Home TextBox8 bpt" {...TextBox8Props} {...TextBox8Cb} {...TextBox8IoProps}/>
+<TextBox className="p-Home TextBox7 bpt" {...TextBox7Props} {...TextBox7Cb} {...TextBox7IoProps}/>
+<TextBox className="p-Home TextBox6 bpt" {...TextBox6Props} {...TextBox6Cb} {...TextBox6IoProps}/>
+<TextBox className="p-Home TextBox5 bpt" {...TextBox5Props} {...TextBox5Cb} {...TextBox5IoProps}/>
+</Flex>
+</Menu>
+</Flex>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex16 bpt" {...Flex16Props} {...Flex16Cb} {...Flex16IoProps}>
+<Flex className="p-Home Flex15 bpt" {...Flex15Props} {...Flex15Cb} {...Flex15IoProps}>
+<Flex className="p-Home Flex243 bpt" {...Flex243Props} {...Flex243Cb} {...Flex243IoProps}>
+<TextBox className="p-Home TextBox160 bpt" {...TextBox160Props} {...TextBox160Cb} {...TextBox160IoProps}/>
+<Image className="p-Home Image66 bpt" {...Image66Props} {...Image66Cb} {...Image66IoProps}/>
+</Flex>
+<TextBox className="p-Home TextBox14 bpt" {...TextBox14Props} {...TextBox14Cb} {...TextBox14IoProps}/>
+<TextBox className="p-Home TextBox16 bpt" {...TextBox16Props} {...TextBox16Cb} {...TextBox16IoProps}/>
+</Flex>
+<Flex className="p-Home Flex160 bpt" {...Flex160Props} {...Flex160Cb} {...Flex160IoProps}>
+<Image className="p-Home Image38 bpt" {...Image38Props} {...Image38Cb} {...Image38IoProps}/>
+</Flex>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex195 bpt" {...Flex195Props} {...Flex195Cb} {...Flex195IoProps}>
+<Flex className="p-Home Flex193 bpt" {...Flex193Props} {...Flex193Cb} {...Flex193IoProps}>
+<Flex className="p-Home Flex183 bpt" {...Flex183Props} {...Flex183Cb} {...Flex183IoProps}>
+<TextBox className="p-Home TextBox186 bpt" {...TextBox186Props} {...TextBox186Cb} {...TextBox186IoProps}/>
+<TextBox className="p-Home TextBox185 bpt" {...TextBox185Props} {...TextBox185Cb} {...TextBox185IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex242 bpt" {...Flex242Props} {...Flex242Cb} {...Flex242IoProps}>
+<Flex className="p-Home Flex232 bpt" {...Flex232Props} {...Flex232Cb} {...Flex232IoProps}>
+<Flex className="p-Home Flex230 bpt" {...Flex230Props} {...Flex230Cb} {...Flex230IoProps}>
+<TextBox className="p-Home TextBox217 bpt" {...TextBox217Props} {...TextBox217Cb} {...TextBox217IoProps}/>
+<TextBox className="p-Home TextBox216 bpt" {...TextBox216Props} {...TextBox216Cb} {...TextBox216IoProps}/>
+<TextBox className="p-Home TextBox218 bpt" {...TextBox218Props} {...TextBox218Cb} {...TextBox218IoProps}/>
+</Flex>
+<Flex className="p-Home Flex231 bpt" {...Flex231Props} {...Flex231Cb} {...Flex231IoProps}>
+<Image className="p-Home Image59 bpt" {...Image59Props} {...Image59Cb} {...Image59IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex271 bpt" {...Flex271Props} {...Flex271Cb} {...Flex271IoProps}>
+<Flex className="p-Home Flex270 bpt" {...Flex270Props} {...Flex270Cb} {...Flex270IoProps}>
+<TextBox className="p-Home TextBox238 bpt" {...TextBox238Props} {...TextBox238Cb} {...TextBox238IoProps}/>
+<TextBox className="p-Home TextBox239 bpt" {...TextBox239Props} {...TextBox239Cb} {...TextBox239IoProps}/>
+<TextBox className="p-Home TextBox237 bpt" {...TextBox237Props} {...TextBox237Cb} {...TextBox237IoProps}/>
+</Flex>
+<Flex className="p-Home Flex269 bpt" {...Flex269Props} {...Flex269Cb} {...Flex269IoProps}>
+<Image className="p-Home Image96 bpt" {...Image96Props} {...Image96Cb} {...Image96IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex229 bpt" {...Flex229Props} {...Flex229Cb} {...Flex229IoProps}>
+<Flex className="p-Home Flex228 bpt" {...Flex228Props} {...Flex228Cb} {...Flex228IoProps}>
+<TextBox className="p-Home TextBox213 bpt" {...TextBox213Props} {...TextBox213Cb} {...TextBox213IoProps}/>
+<TextBox className="p-Home TextBox215 bpt" {...TextBox215Props} {...TextBox215Cb} {...TextBox215IoProps}/>
+<TextBox className="p-Home TextBox214 bpt" {...TextBox214Props} {...TextBox214Cb} {...TextBox214IoProps}/>
+</Flex>
+<Flex className="p-Home Flex227 bpt" {...Flex227Props} {...Flex227Cb} {...Flex227IoProps}>
+<Image className="p-Home Image60 bpt" {...Image60Props} {...Image60Cb} {...Image60IoProps}/>
+</Flex>
+</Flex>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex223 bpt" {...Flex223Props} {...Flex223Cb} {...Flex223IoProps}>
+<Flex className="p-Home Flex226 bpt" {...Flex226Props} {...Flex226Cb} {...Flex226IoProps}>
+<Flex className="p-Home Flex224 bpt" {...Flex224Props} {...Flex224Cb} {...Flex224IoProps}>
+<TextBox className="p-Home TextBox209 bpt" {...TextBox209Props} {...TextBox209Cb} {...TextBox209IoProps}/>
+<TextBox className="p-Home TextBox210 bpt" {...TextBox210Props} {...TextBox210Cb} {...TextBox210IoProps}/>
+</Flex>
+<Flex className="p-Home Flex225 bpt" {...Flex225Props} {...Flex225Cb} {...Flex225IoProps}>
+<Image className="p-Home Image56 bpt" {...Image56Props} {...Image56Cb} {...Image56IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex219 bpt" {...Flex219Props} {...Flex219Cb} {...Flex219IoProps}>
+<Flex className="p-Home Flex208 bpt" {...Flex208Props} {...Flex208Cb} {...Flex208IoProps}>
+<TextBox className="p-Home TextBox202 bpt" {...TextBox202Props} {...TextBox202Cb} {...TextBox202IoProps}/>
+<TextBox className="p-Home TextBox201 bpt" {...TextBox201Props} {...TextBox201Cb} {...TextBox201IoProps}/>
+</Flex>
+<Flex className="p-Home Flex207 bpt" {...Flex207Props} {...Flex207Cb} {...Flex207IoProps}>
+<Input className="p-Home Input4 bpt" {...Input4Props} {...Input4Cb} {...Input4IoProps}/>
+<Flex className="p-Home Flex199 bpt" {...Flex199Props} {...Flex199Cb} {...Flex199IoProps}>
+<TextBox className="p-Home TextBox192 bpt" {...TextBox192Props} {...TextBox192Cb} {...TextBox192IoProps}/>
+</Flex>
+<Flex className="p-Home Flex198 bpt" {...Flex198Props} {...Flex198Cb} {...Flex198IoProps}>
+<Button className="p-Home Button16 bpt" {...Button16Props} {...Button16Cb} {...Button16IoProps}/>
+</Flex>
+</Flex>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex77 bpt" {...Flex77Props} {...Flex77Cb} {...Flex77IoProps}>
+<Flex className="p-Home Flex62 bpt" {...Flex62Props} {...Flex62Cb} {...Flex62IoProps}>
+<Flex className="p-Home Flex250 bpt" {...Flex250Props} {...Flex250Cb} {...Flex250IoProps}>
+<Flex className="p-Home Flex252 bpt" {...Flex252Props} {...Flex252Cb} {...Flex252IoProps}>
+<Flex className="p-Home Flex259 bpt" {...Flex259Props} {...Flex259Cb} {...Flex259IoProps}>
+<Flex className="p-Home Flex258 bpt" {...Flex258Props} {...Flex258Cb} {...Flex258IoProps}>
+<Flex className="p-Home Flex256 bpt" {...Flex256Props} {...Flex256Cb} {...Flex256IoProps}>
+<Image className="p-Home Image84 bpt" {...Image84Props} {...Image84Cb} {...Image84IoProps}/>
+<TextBox className="p-Home TextBox229 bpt" {...TextBox229Props} {...TextBox229Cb} {...TextBox229IoProps}/>
+</Flex>
+<Image className="p-Home Image85 bpt" {...Image85Props} {...Image85Cb} {...Image85IoProps}/>
+</Flex>
+<TextBox className="p-Home TextBox230 bpt" {...TextBox230Props} {...TextBox230Cb} {...TextBox230IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex251 bpt" {...Flex251Props} {...Flex251Cb} {...Flex251IoProps}>
+<Image className="p-Home Image76 bpt" {...Image76Props} {...Image76Cb} {...Image76IoProps}/>
+<Image className="p-Home Image77 bpt" {...Image77Props} {...Image77Cb} {...Image77IoProps}/>
+<Image className="p-Home Image78 bpt" {...Image78Props} {...Image78Cb} {...Image78IoProps}/>
+<Image className="p-Home Image79 bpt" {...Image79Props} {...Image79Cb} {...Image79IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex60 bpt" {...Flex60Props} {...Flex60Cb} {...Flex60IoProps}>
+<Flex className="p-Home Flex52 bpt" {...Flex52Props} {...Flex52Cb} {...Flex52IoProps}>
+<TextBox className="p-Home TextBox64 bpt" {...TextBox64Props} {...TextBox64Cb} {...TextBox64IoProps}/>
+<Flex className="p-Home Flex48 bpt" {...Flex48Props} {...Flex48Cb} {...Flex48IoProps}>
+<TextBox className="p-Home TextBox56 bpt" {...TextBox56Props} {...TextBox56Cb} {...TextBox56IoProps}/>
+<TextBox className="p-Home TextBox57 bpt" {...TextBox57Props} {...TextBox57Cb} {...TextBox57IoProps}/>
+<TextBox className="p-Home TextBox58 bpt" {...TextBox58Props} {...TextBox58Cb} {...TextBox58IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex53 bpt" {...Flex53Props} {...Flex53Cb} {...Flex53IoProps}>
+<TextBox className="p-Home TextBox65 bpt" {...TextBox65Props} {...TextBox65Cb} {...TextBox65IoProps}/>
+<Flex className="p-Home Flex49 bpt" {...Flex49Props} {...Flex49Cb} {...Flex49IoProps}>
+<TextBox className="p-Home TextBox61 bpt" {...TextBox61Props} {...TextBox61Cb} {...TextBox61IoProps}/>
+<TextBox className="p-Home TextBox59 bpt" {...TextBox59Props} {...TextBox59Cb} {...TextBox59IoProps}/>
+<TextBox className="p-Home TextBox60 bpt" {...TextBox60Props} {...TextBox60Cb} {...TextBox60IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex51 bpt" {...Flex51Props} {...Flex51Cb} {...Flex51IoProps}>
+<TextBox className="p-Home TextBox63 bpt" {...TextBox63Props} {...TextBox63Cb} {...TextBox63IoProps}/>
+<Flex className="p-Home Flex47 bpt" {...Flex47Props} {...Flex47Cb} {...Flex47IoProps}>
+<TextBox className="p-Home TextBox55 bpt" {...TextBox55Props} {...TextBox55Cb} {...TextBox55IoProps}/>
+<TextBox className="p-Home TextBox54 bpt" {...TextBox54Props} {...TextBox54Cb} {...TextBox54IoProps}/>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex54 bpt" {...Flex54Props} {...Flex54Cb} {...Flex54IoProps}>
+<TextBox className="p-Home TextBox66 bpt" {...TextBox66Props} {...TextBox66Cb} {...TextBox66IoProps}/>
+<Flex className="p-Home Flex50 bpt" {...Flex50Props} {...Flex50Cb} {...Flex50IoProps}>
+<TextBox className="p-Home TextBox62 bpt" {...TextBox62Props} {...TextBox62Cb} {...TextBox62IoProps}/>
+</Flex>
+</Flex>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex86 bpt" {...Flex86Props} {...Flex86Cb} {...Flex86IoProps}>
+<Flex className="p-Home Flex85 bpt" {...Flex85Props} {...Flex85Cb} {...Flex85IoProps}>
+<TextBox className="p-Home TextBox95 bpt" {...TextBox95Props} {...TextBox95Cb} {...TextBox95IoProps}/>
+<Flex className="p-Home Flex84 bpt" {...Flex84Props} {...Flex84Cb} {...Flex84IoProps}>
+<TextBox className="p-Home TextBox93 bpt" {...TextBox93Props} {...TextBox93Cb} {...TextBox93IoProps}/>
+<TextBox className="p-Home TextBox94 bpt" {...TextBox94Props} {...TextBox94Cb} {...TextBox94IoProps}/>
+</Flex>
+</Flex>
+</Flex>
+<Flex className="p-Home Flex241 bpt" {...Flex241Props} {...Flex241Cb} {...Flex241IoProps}>
+<Image className="p-Home Image63 bpt" {...Image63Props} {...Image63Cb} {...Image63IoProps}/>
+</Flex>
+</Flex>
+  </>);
+}
diff --git a/atri_app/app/src/pages/Showcase.jsx b/atri_app/app/src/pages/Showcase.jsx
new file mode 100644
index 0000000..8d06eb3
--- /dev/null
+++ b/atri_app/app/src/pages/Showcase.jsx
@@ -0,0 +1,1281 @@
+import { useLayoutEffect, useEffect } from "react";
+import useStore, { updateStoreStateFromController } from "../hooks/useStore";
+import useIoStore from "../hooks/useIoStore";
+import { useNavigate, useLocation } from "react-router-dom";
+import { subscribeInternalNavigation } from "../utils/navigate";
+import {fetchPageProps} from "../utils/fetchPageProps"
+import { Flex as Flex2 } from "@atrilabs/react-component-manifests/src/manifests/Flex/Flex.tsx";
+import { Overlay as Overlay1 } from "@atrilabs/react-component-manifests/src/manifests/Overlay/Overlay.tsx";
+import { Menu as Menu2 } from "@atrilabs/react-component-manifests/src/manifests/Menu/Menu.tsx";
+import { TextBox as TextBox2 } from "@atrilabs/react-component-manifests/src/manifests/TextBox/TextBox.tsx";
+import { Button as Button2 } from "@atrilabs/react-component-manifests/src/manifests/Button/Button.tsx";
+import { Input as Input2 } from "@atrilabs/react-component-manifests/src/manifests/Input/Input.tsx";
+import { Upload as Upload1 } from "@atrilabs/react-component-manifests/src/manifests/Upload/Upload.tsx";
+import { Image as Image2 } from "@atrilabs/react-component-manifests/src/manifests/Image/Image.tsx";
+import { useFlex462Cb, useOverlay3Cb, useFlex786Cb, useFlex784Cb, useFlex779Cb, useFlex770Cb, useFlex771Cb, useFlex780Cb, useFlex772Cb, useFlex773Cb, useFlex781Cb, useFlex774Cb, useFlex775Cb, useFlex782Cb, useFlex776Cb, useFlex777Cb, useFlex785Cb, useFlex783Cb, useFlex778Cb, useFlex769Cb, useFlex766Cb, useFlex767Cb, useTag_Flex_1Cb, useTag_Flex_2Cb, useTag_Flex_3Cb, useFlex768Cb, useFlex764Cb, useFlex765Cb, useFlex463Cb, useFlex466Cb, useFlex467Cb, useFilter1Cb, useFilter2Cb, useFilter3Cb, useFilter4Cb, useFilter5Cb, useFilter6Cb, useFilter7Cb, useFilter8Cb, useFilter9Cb, useFlex468Cb, useFlex469Cb, useCard_1Cb, useFlex481Cb, useFlex482Cb, useFlex483Cb, useCard_Tag_1_aCb, useCard_Tag_1_bCb, useCard_Tag_1_cCb, useFlex484Cb, useFlex485Cb, useFlex486Cb, useCard_2Cb, useFlex528Cb, useFlex525Cb, useFlex523Cb, useFlex524Cb, useFlex527Cb, useFlex657Cb, useCard_Tag_2_cCb, useCard_Tag_2_bCb, useCard_Tag_2_aCb, useCard_3Cb, useFlex535Cb, useFlex532Cb, useFlex534Cb, useFlex530Cb, useFlex531Cb, useFlex661Cb, useCard_Tag_3_cCb, useCard_Tag_3_bCb, useCard_Tag_3_aCb, useFlex646Cb, useCard_6Cb, useFlex640Cb, useFlex632Cb, useFlex625Cb, useFlex626Cb, useFlex633Cb, useFlex673Cb, useCard_Tag_6_cCb, useCard_Tag_6_bCb, useCard_Tag_6_aCb, useCard_5Cb, useFlex641Cb, useFlex635Cb, useFlex636Cb, useFlex627Cb, useFlex628Cb, useFlex669Cb, useCard_Tag_5_cCb, useCard_Tag_5_bCb, useCard_Tag_5_aCb, useCard_4Cb, useFlex642Cb, useFlex637Cb, useFlex629Cb, useFlex630Cb, useFlex639Cb, useFlex665Cb, useCard_Tag_4_cCb, useCard_Tag_4_bCb, useCard_Tag_4_aCb, useFlex674Cb, useFlex675Cb, useFlex706Cb, useFlex624Cb, useFlex621Cb, useFlex620Cb, useMenu7Cb, useFlex618Cb, useFlex619Cb, useFlex623Cb, useFlex647Cb, useFlex705Cb, useFlex702Cb, useFlex703Cb, useFlex699Cb, useFlex692Cb, useFlex704Cb, useFlex700Cb, useFlex693Cb, useFlex687Cb, useFlex686Cb, useFlex685Cb, useFlex694Cb, useFlex701Cb, useFlex695Cb, useFlex688Cb, useFlex696Cb, useFlex689Cb, useFlex697Cb, useFlex690Cb, useFlex698Cb, useFlex691Cb, useTextBox361Cb, useTextBox362Cb, useButton116Cb, useButton235Cb, useTextBox499Cb, useInput19Cb, useInput20Cb, useTextBox500Cb, useTextBox501Cb, useInput21Cb, useInput22Cb, useTextBox502Cb, useTextBox503Cb, useInput23Cb, useTextBox504Cb, useInput24Cb, useTextBox505Cb, useUpload3Cb, useTextBox506Cb, useUpload4Cb, useTextBox507Cb, useImage319Cb, useImage318Cb, useTextBox497Cb, useTextBox498Cb, useTag_1Cb, useTag_2Cb, useTag_3Cb, useImage315Cb, useImage316Cb, useImage317Cb, useTextBox496Cb, useTextBox363Cb, useTextBox364Cb, useFilter_Btn_1Cb, useFilter_Btn_2Cb, useFilter_Btn_3Cb, useFilter_Btn_4Cb, useFilter_Btn_5Cb, useFilter_Btn_6Cb, useFilter_Btn_7Cb, useFilter_Btn_8Cb, useFilter_Btn_9Cb, useCard_Image_1Cb, useCard_Title_1Cb, useCard_Text_1Cb, useCard_Tag_1_a_TextCb, useCard_Tag_1_b_TextCb, useCard_Tag_1_c_TextCb, useCard_Github_1Cb, useCard_Deploy_1Cb, useCard_Creator_Image_1Cb, useCard_Creator_Name_1Cb, useCard_Image_2Cb, useCard_Creator_Name_2Cb, useCard_Creator_Image_2Cb, useCard_Deploy_2Cb, useCard_Github_2Cb, useCard_Text_2Cb, useCard_Title_2Cb, useCard_Tag_2_c_TextCb, useCard_Tag_2_b_TextCb, useCard_Tag_2_a_TextCb, useCard_Image_3Cb, useCard_Title_3Cb, useCard_Text_3Cb, useCard_Github_3Cb, useCard_Deploy_3Cb, useCard_Creator_Image_3Cb, useCard_Creator_Name_3Cb, useCard_Tag_3_c_TextCb, useCard_Tag_3_b_TextCb, useCard_Tag_3_a_TextCb, useCard_Image_6Cb, useCard_Creator_Name_6Cb, useCard_Creator_Image_6Cb, useCard_Deploy_6Cb, useCard_Github_6Cb, useCard_Text_6Cb, useCard_Title_6Cb, useCard_Tag_6_c_TextCb, useCard_Tag_6_b_TextCb, useCard_Tag_6_a_TextCb, useCard_Image_5Cb, useCard_Title_5Cb, useCard_Text_5Cb, useCard_Github_5Cb, useCard_Deploy_5Cb, useCard_Creator_Image_5Cb, useCard_Creator_Name_5Cb, useCard_Tag_5_c_TextCb, useCard_Tag_5_b_TextCb, useCard_Tag_5_a_TextCb, useCard_Image_4Cb, useCard_Creator_Name_4Cb, useCard_Creator_Image_4Cb, useCard_Deploy_4Cb, useCard_Github_4Cb, useCard_Text_4Cb, useCard_Title_4Cb, useCard_Tag_4_c_TextCb, useCard_Tag_4_b_TextCb, useCard_Tag_4_a_TextCb, useImage303Cb, useImage304Cb, useTextBox474Cb, useTextBox453Cb, useImage278Cb, useTextBox430Cb, useTextBox431Cb, useButton200Cb, useTextBox438Cb, useImage279Cb, useTextBox448Cb, useTextBox449Cb, useTextBox450Cb, useTextBox451Cb, useImage300Cb, useTextBox472Cb, useTextBox466Cb, useTextBox467Cb, useTextBox456Cb, useImage295Cb, useTextBox455Cb, useImage294Cb, useImage296Cb, useImage297Cb, useImage298Cb, useImage299Cb, useTextBox468Cb, useTextBox457Cb, useTextBox469Cb, useTextBox458Cb, useTextBox459Cb, useTextBox460Cb, useTextBox470Cb, useTextBox461Cb, useTextBox462Cb, useTextBox463Cb, useTextBox471Cb, useTextBox464Cb, useTextBox465Cb } from "../page-cbs/Showcase";
+import "../page-css/Showcase.css";
+import "../custom/Showcase";
+
+export default function Showcase() {
+  const navigate = useNavigate();
+  useEffect(() => {
+    const unsub = subscribeInternalNavigation((url) => {
+      navigate(url);
+    });
+    return unsub;
+  }, [navigate]);
+
+  const location = useLocation();
+  useLayoutEffect(()=>{
+    fetchPageProps(location.pathname, location.search).then((res)=>{
+      updateStoreStateFromController(res.pageName, res.pageState)
+    })
+  }, [location])
+
+  const Flex462Props = useStore((state)=>state["Showcase"]["Flex462"]);
+const Flex462IoProps = useIoStore((state)=>state["Showcase"]["Flex462"]);
+const Flex462Cb = useFlex462Cb()
+const Overlay3Props = useStore((state)=>state["Showcase"]["Overlay3"]);
+const Overlay3IoProps = useIoStore((state)=>state["Showcase"]["Overlay3"]);
+const Overlay3Cb = useOverlay3Cb()
+const Flex786Props = useStore((state)=>state["Showcase"]["Flex786"]);
+const Flex786IoProps = useIoStore((state)=>state["Showcase"]["Flex786"]);
+const Flex786Cb = useFlex786Cb()
+const Flex784Props = useStore((state)=>state["Showcase"]["Flex784"]);
+const Flex784IoProps = useIoStore((state)=>state["Showcase"]["Flex784"]);
+const Flex784Cb = useFlex784Cb()
+const Flex779Props = useStore((state)=>state["Showcase"]["Flex779"]);
+const Flex779IoProps = useIoStore((state)=>state["Showcase"]["Flex779"]);
+const Flex779Cb = useFlex779Cb()
+const Flex770Props = useStore((state)=>state["Showcase"]["Flex770"]);
+const Flex770IoProps = useIoStore((state)=>state["Showcase"]["Flex770"]);
+const Flex770Cb = useFlex770Cb()
+const Flex771Props = useStore((state)=>state["Showcase"]["Flex771"]);
+const Flex771IoProps = useIoStore((state)=>state["Showcase"]["Flex771"]);
+const Flex771Cb = useFlex771Cb()
+const Flex780Props = useStore((state)=>state["Showcase"]["Flex780"]);
+const Flex780IoProps = useIoStore((state)=>state["Showcase"]["Flex780"]);
+const Flex780Cb = useFlex780Cb()
+const Flex772Props = useStore((state)=>state["Showcase"]["Flex772"]);
+const Flex772IoProps = useIoStore((state)=>state["Showcase"]["Flex772"]);
+const Flex772Cb = useFlex772Cb()
+const Flex773Props = useStore((state)=>state["Showcase"]["Flex773"]);
+const Flex773IoProps = useIoStore((state)=>state["Showcase"]["Flex773"]);
+const Flex773Cb = useFlex773Cb()
+const Flex781Props = useStore((state)=>state["Showcase"]["Flex781"]);
+const Flex781IoProps = useIoStore((state)=>state["Showcase"]["Flex781"]);
+const Flex781Cb = useFlex781Cb()
+const Flex774Props = useStore((state)=>state["Showcase"]["Flex774"]);
+const Flex774IoProps = useIoStore((state)=>state["Showcase"]["Flex774"]);
+const Flex774Cb = useFlex774Cb()
+const Flex775Props = useStore((state)=>state["Showcase"]["Flex775"]);
+const Flex775IoProps = useIoStore((state)=>state["Showcase"]["Flex775"]);
+const Flex775Cb = useFlex775Cb()
+const Flex782Props = useStore((state)=>state["Showcase"]["Flex782"]);
+const Flex782IoProps = useIoStore((state)=>state["Showcase"]["Flex782"]);
+const Flex782Cb = useFlex782Cb()
+const Flex776Props = useStore((state)=>state["Showcase"]["Flex776"]);
+const Flex776IoProps = useIoStore((state)=>state["Showcase"]["Flex776"]);
+const Flex776Cb = useFlex776Cb()
+const Flex777Props = useStore((state)=>state["Showcase"]["Flex777"]);
+const Flex777IoProps = useIoStore((state)=>state["Showcase"]["Flex777"]);
+const Flex777Cb = useFlex777Cb()
+const Flex785Props = useStore((state)=>state["Showcase"]["Flex785"]);
+const Flex785IoProps = useIoStore((state)=>state["Showcase"]["Flex785"]);
+const Flex785Cb = useFlex785Cb()
+const Flex783Props = useStore((state)=>state["Showcase"]["Flex783"]);
+const Flex783IoProps = useIoStore((state)=>state["Showcase"]["Flex783"]);
+const Flex783Cb = useFlex783Cb()
+const Flex778Props = useStore((state)=>state["Showcase"]["Flex778"]);
+const Flex778IoProps = useIoStore((state)=>state["Showcase"]["Flex778"]);
+const Flex778Cb = useFlex778Cb()
+const Flex769Props = useStore((state)=>state["Showcase"]["Flex769"]);
+const Flex769IoProps = useIoStore((state)=>state["Showcase"]["Flex769"]);
+const Flex769Cb = useFlex769Cb()
+const Flex766Props = useStore((state)=>state["Showcase"]["Flex766"]);
+const Flex766IoProps = useIoStore((state)=>state["Showcase"]["Flex766"]);
+const Flex766Cb = useFlex766Cb()
+const Flex767Props = useStore((state)=>state["Showcase"]["Flex767"]);
+const Flex767IoProps = useIoStore((state)=>state["Showcase"]["Flex767"]);
+const Flex767Cb = useFlex767Cb()
+const Tag_Flex_1Props = useStore((state)=>state["Showcase"]["Tag_Flex_1"]);
+const Tag_Flex_1IoProps = useIoStore((state)=>state["Showcase"]["Tag_Flex_1"]);
+const Tag_Flex_1Cb = useTag_Flex_1Cb()
+const Tag_Flex_2Props = useStore((state)=>state["Showcase"]["Tag_Flex_2"]);
+const Tag_Flex_2IoProps = useIoStore((state)=>state["Showcase"]["Tag_Flex_2"]);
+const Tag_Flex_2Cb = useTag_Flex_2Cb()
+const Tag_Flex_3Props = useStore((state)=>state["Showcase"]["Tag_Flex_3"]);
+const Tag_Flex_3IoProps = useIoStore((state)=>state["Showcase"]["Tag_Flex_3"]);
+const Tag_Flex_3Cb = useTag_Flex_3Cb()
+const Flex768Props = useStore((state)=>state["Showcase"]["Flex768"]);
+const Flex768IoProps = useIoStore((state)=>state["Showcase"]["Flex768"]);
+const Flex768Cb = useFlex768Cb()
+const Flex764Props = useStore((state)=>state["Showcase"]["Flex764"]);
+const Flex764IoProps = useIoStore((state)=>state["Showcase"]["Flex764"]);
+const Flex764Cb = useFlex764Cb()
+const Flex765Props = useStore((state)=>state["Showcase"]["Flex765"]);
+const Flex765IoProps = useIoStore((state)=>state["Showcase"]["Flex765"]);
+const Flex765Cb = useFlex765Cb()
+const Flex463Props = useStore((state)=>state["Showcase"]["Flex463"]);
+const Flex463IoProps = useIoStore((state)=>state["Showcase"]["Flex463"]);
+const Flex463Cb = useFlex463Cb()
+const Flex466Props = useStore((state)=>state["Showcase"]["Flex466"]);
+const Flex466IoProps = useIoStore((state)=>state["Showcase"]["Flex466"]);
+const Flex466Cb = useFlex466Cb()
+const Flex467Props = useStore((state)=>state["Showcase"]["Flex467"]);
+const Flex467IoProps = useIoStore((state)=>state["Showcase"]["Flex467"]);
+const Flex467Cb = useFlex467Cb()
+const Filter1Props = useStore((state)=>state["Showcase"]["Filter1"]);
+const Filter1IoProps = useIoStore((state)=>state["Showcase"]["Filter1"]);
+const Filter1Cb = useFilter1Cb()
+const Filter2Props = useStore((state)=>state["Showcase"]["Filter2"]);
+const Filter2IoProps = useIoStore((state)=>state["Showcase"]["Filter2"]);
+const Filter2Cb = useFilter2Cb()
+const Filter3Props = useStore((state)=>state["Showcase"]["Filter3"]);
+const Filter3IoProps = useIoStore((state)=>state["Showcase"]["Filter3"]);
+const Filter3Cb = useFilter3Cb()
+const Filter4Props = useStore((state)=>state["Showcase"]["Filter4"]);
+const Filter4IoProps = useIoStore((state)=>state["Showcase"]["Filter4"]);
+const Filter4Cb = useFilter4Cb()
+const Filter5Props = useStore((state)=>state["Showcase"]["Filter5"]);
+const Filter5IoProps = useIoStore((state)=>state["Showcase"]["Filter5"]);
+const Filter5Cb = useFilter5Cb()
+const Filter6Props = useStore((state)=>state["Showcase"]["Filter6"]);
+const Filter6IoProps = useIoStore((state)=>state["Showcase"]["Filter6"]);
+const Filter6Cb = useFilter6Cb()
+const Filter7Props = useStore((state)=>state["Showcase"]["Filter7"]);
+const Filter7IoProps = useIoStore((state)=>state["Showcase"]["Filter7"]);
+const Filter7Cb = useFilter7Cb()
+const Filter8Props = useStore((state)=>state["Showcase"]["Filter8"]);
+const Filter8IoProps = useIoStore((state)=>state["Showcase"]["Filter8"]);
+const Filter8Cb = useFilter8Cb()
+const Filter9Props = useStore((state)=>state["Showcase"]["Filter9"]);
+const Filter9IoProps = useIoStore((state)=>state["Showcase"]["Filter9"]);
+const Filter9Cb = useFilter9Cb()
+const Flex468Props = useStore((state)=>state["Showcase"]["Flex468"]);
+const Flex468IoProps = useIoStore((state)=>state["Showcase"]["Flex468"]);
+const Flex468Cb = useFlex468Cb()
+const Flex469Props = useStore((state)=>state["Showcase"]["Flex469"]);
+const Flex469IoProps = useIoStore((state)=>state["Showcase"]["Flex469"]);
+const Flex469Cb = useFlex469Cb()
+const Card_1Props = useStore((state)=>state["Showcase"]["Card_1"]);
+const Card_1IoProps = useIoStore((state)=>state["Showcase"]["Card_1"]);
+const Card_1Cb = useCard_1Cb()
+const Flex481Props = useStore((state)=>state["Showcase"]["Flex481"]);
+const Flex481IoProps = useIoStore((state)=>state["Showcase"]["Flex481"]);
+const Flex481Cb = useFlex481Cb()
+const Flex482Props = useStore((state)=>state["Showcase"]["Flex482"]);
+const Flex482IoProps = useIoStore((state)=>state["Showcase"]["Flex482"]);
+const Flex482Cb = useFlex482Cb()
+const Flex483Props = useStore((state)=>state["Showcase"]["Flex483"]);
+const Flex483IoProps = useIoStore((state)=>state["Showcase"]["Flex483"]);
+const Flex483Cb = useFlex483Cb()
+const Card_Tag_1_aProps = useStore((state)=>state["Showcase"]["Card_Tag_1_a"]);
+const Card_Tag_1_aIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_1_a"]);
+const Card_Tag_1_aCb = useCard_Tag_1_aCb()
+const Card_Tag_1_bProps = useStore((state)=>state["Showcase"]["Card_Tag_1_b"]);
+const Card_Tag_1_bIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_1_b"]);
+const Card_Tag_1_bCb = useCard_Tag_1_bCb()
+const Card_Tag_1_cProps = useStore((state)=>state["Showcase"]["Card_Tag_1_c"]);
+const Card_Tag_1_cIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_1_c"]);
+const Card_Tag_1_cCb = useCard_Tag_1_cCb()
+const Flex484Props = useStore((state)=>state["Showcase"]["Flex484"]);
+const Flex484IoProps = useIoStore((state)=>state["Showcase"]["Flex484"]);
+const Flex484Cb = useFlex484Cb()
+const Flex485Props = useStore((state)=>state["Showcase"]["Flex485"]);
+const Flex485IoProps = useIoStore((state)=>state["Showcase"]["Flex485"]);
+const Flex485Cb = useFlex485Cb()
+const Flex486Props = useStore((state)=>state["Showcase"]["Flex486"]);
+const Flex486IoProps = useIoStore((state)=>state["Showcase"]["Flex486"]);
+const Flex486Cb = useFlex486Cb()
+const Card_2Props = useStore((state)=>state["Showcase"]["Card_2"]);
+const Card_2IoProps = useIoStore((state)=>state["Showcase"]["Card_2"]);
+const Card_2Cb = useCard_2Cb()
+const Flex528Props = useStore((state)=>state["Showcase"]["Flex528"]);
+const Flex528IoProps = useIoStore((state)=>state["Showcase"]["Flex528"]);
+const Flex528Cb = useFlex528Cb()
+const Flex525Props = useStore((state)=>state["Showcase"]["Flex525"]);
+const Flex525IoProps = useIoStore((state)=>state["Showcase"]["Flex525"]);
+const Flex525Cb = useFlex525Cb()
+const Flex523Props = useStore((state)=>state["Showcase"]["Flex523"]);
+const Flex523IoProps = useIoStore((state)=>state["Showcase"]["Flex523"]);
+const Flex523Cb = useFlex523Cb()
+const Flex524Props = useStore((state)=>state["Showcase"]["Flex524"]);
+const Flex524IoProps = useIoStore((state)=>state["Showcase"]["Flex524"]);
+const Flex524Cb = useFlex524Cb()
+const Flex527Props = useStore((state)=>state["Showcase"]["Flex527"]);
+const Flex527IoProps = useIoStore((state)=>state["Showcase"]["Flex527"]);
+const Flex527Cb = useFlex527Cb()
+const Flex657Props = useStore((state)=>state["Showcase"]["Flex657"]);
+const Flex657IoProps = useIoStore((state)=>state["Showcase"]["Flex657"]);
+const Flex657Cb = useFlex657Cb()
+const Card_Tag_2_cProps = useStore((state)=>state["Showcase"]["Card_Tag_2_c"]);
+const Card_Tag_2_cIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_2_c"]);
+const Card_Tag_2_cCb = useCard_Tag_2_cCb()
+const Card_Tag_2_bProps = useStore((state)=>state["Showcase"]["Card_Tag_2_b"]);
+const Card_Tag_2_bIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_2_b"]);
+const Card_Tag_2_bCb = useCard_Tag_2_bCb()
+const Card_Tag_2_aProps = useStore((state)=>state["Showcase"]["Card_Tag_2_a"]);
+const Card_Tag_2_aIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_2_a"]);
+const Card_Tag_2_aCb = useCard_Tag_2_aCb()
+const Card_3Props = useStore((state)=>state["Showcase"]["Card_3"]);
+const Card_3IoProps = useIoStore((state)=>state["Showcase"]["Card_3"]);
+const Card_3Cb = useCard_3Cb()
+const Flex535Props = useStore((state)=>state["Showcase"]["Flex535"]);
+const Flex535IoProps = useIoStore((state)=>state["Showcase"]["Flex535"]);
+const Flex535Cb = useFlex535Cb()
+const Flex532Props = useStore((state)=>state["Showcase"]["Flex532"]);
+const Flex532IoProps = useIoStore((state)=>state["Showcase"]["Flex532"]);
+const Flex532Cb = useFlex532Cb()
+const Flex534Props = useStore((state)=>state["Showcase"]["Flex534"]);
+const Flex534IoProps = useIoStore((state)=>state["Showcase"]["Flex534"]);
+const Flex534Cb = useFlex534Cb()
+const Flex530Props = useStore((state)=>state["Showcase"]["Flex530"]);
+const Flex530IoProps = useIoStore((state)=>state["Showcase"]["Flex530"]);
+const Flex530Cb = useFlex530Cb()
+const Flex531Props = useStore((state)=>state["Showcase"]["Flex531"]);
+const Flex531IoProps = useIoStore((state)=>state["Showcase"]["Flex531"]);
+const Flex531Cb = useFlex531Cb()
+const Flex661Props = useStore((state)=>state["Showcase"]["Flex661"]);
+const Flex661IoProps = useIoStore((state)=>state["Showcase"]["Flex661"]);
+const Flex661Cb = useFlex661Cb()
+const Card_Tag_3_cProps = useStore((state)=>state["Showcase"]["Card_Tag_3_c"]);
+const Card_Tag_3_cIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_3_c"]);
+const Card_Tag_3_cCb = useCard_Tag_3_cCb()
+const Card_Tag_3_bProps = useStore((state)=>state["Showcase"]["Card_Tag_3_b"]);
+const Card_Tag_3_bIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_3_b"]);
+const Card_Tag_3_bCb = useCard_Tag_3_bCb()
+const Card_Tag_3_aProps = useStore((state)=>state["Showcase"]["Card_Tag_3_a"]);
+const Card_Tag_3_aIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_3_a"]);
+const Card_Tag_3_aCb = useCard_Tag_3_aCb()
+const Flex646Props = useStore((state)=>state["Showcase"]["Flex646"]);
+const Flex646IoProps = useIoStore((state)=>state["Showcase"]["Flex646"]);
+const Flex646Cb = useFlex646Cb()
+const Card_6Props = useStore((state)=>state["Showcase"]["Card_6"]);
+const Card_6IoProps = useIoStore((state)=>state["Showcase"]["Card_6"]);
+const Card_6Cb = useCard_6Cb()
+const Flex640Props = useStore((state)=>state["Showcase"]["Flex640"]);
+const Flex640IoProps = useIoStore((state)=>state["Showcase"]["Flex640"]);
+const Flex640Cb = useFlex640Cb()
+const Flex632Props = useStore((state)=>state["Showcase"]["Flex632"]);
+const Flex632IoProps = useIoStore((state)=>state["Showcase"]["Flex632"]);
+const Flex632Cb = useFlex632Cb()
+const Flex625Props = useStore((state)=>state["Showcase"]["Flex625"]);
+const Flex625IoProps = useIoStore((state)=>state["Showcase"]["Flex625"]);
+const Flex625Cb = useFlex625Cb()
+const Flex626Props = useStore((state)=>state["Showcase"]["Flex626"]);
+const Flex626IoProps = useIoStore((state)=>state["Showcase"]["Flex626"]);
+const Flex626Cb = useFlex626Cb()
+const Flex633Props = useStore((state)=>state["Showcase"]["Flex633"]);
+const Flex633IoProps = useIoStore((state)=>state["Showcase"]["Flex633"]);
+const Flex633Cb = useFlex633Cb()
+const Flex673Props = useStore((state)=>state["Showcase"]["Flex673"]);
+const Flex673IoProps = useIoStore((state)=>state["Showcase"]["Flex673"]);
+const Flex673Cb = useFlex673Cb()
+const Card_Tag_6_cProps = useStore((state)=>state["Showcase"]["Card_Tag_6_c"]);
+const Card_Tag_6_cIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_6_c"]);
+const Card_Tag_6_cCb = useCard_Tag_6_cCb()
+const Card_Tag_6_bProps = useStore((state)=>state["Showcase"]["Card_Tag_6_b"]);
+const Card_Tag_6_bIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_6_b"]);
+const Card_Tag_6_bCb = useCard_Tag_6_bCb()
+const Card_Tag_6_aProps = useStore((state)=>state["Showcase"]["Card_Tag_6_a"]);
+const Card_Tag_6_aIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_6_a"]);
+const Card_Tag_6_aCb = useCard_Tag_6_aCb()
+const Card_5Props = useStore((state)=>state["Showcase"]["Card_5"]);
+const Card_5IoProps = useIoStore((state)=>state["Showcase"]["Card_5"]);
+const Card_5Cb = useCard_5Cb()
+const Flex641Props = useStore((state)=>state["Showcase"]["Flex641"]);
+const Flex641IoProps = useIoStore((state)=>state["Showcase"]["Flex641"]);
+const Flex641Cb = useFlex641Cb()
+const Flex635Props = useStore((state)=>state["Showcase"]["Flex635"]);
+const Flex635IoProps = useIoStore((state)=>state["Showcase"]["Flex635"]);
+const Flex635Cb = useFlex635Cb()
+const Flex636Props = useStore((state)=>state["Showcase"]["Flex636"]);
+const Flex636IoProps = useIoStore((state)=>state["Showcase"]["Flex636"]);
+const Flex636Cb = useFlex636Cb()
+const Flex627Props = useStore((state)=>state["Showcase"]["Flex627"]);
+const Flex627IoProps = useIoStore((state)=>state["Showcase"]["Flex627"]);
+const Flex627Cb = useFlex627Cb()
+const Flex628Props = useStore((state)=>state["Showcase"]["Flex628"]);
+const Flex628IoProps = useIoStore((state)=>state["Showcase"]["Flex628"]);
+const Flex628Cb = useFlex628Cb()
+const Flex669Props = useStore((state)=>state["Showcase"]["Flex669"]);
+const Flex669IoProps = useIoStore((state)=>state["Showcase"]["Flex669"]);
+const Flex669Cb = useFlex669Cb()
+const Card_Tag_5_cProps = useStore((state)=>state["Showcase"]["Card_Tag_5_c"]);
+const Card_Tag_5_cIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_5_c"]);
+const Card_Tag_5_cCb = useCard_Tag_5_cCb()
+const Card_Tag_5_bProps = useStore((state)=>state["Showcase"]["Card_Tag_5_b"]);
+const Card_Tag_5_bIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_5_b"]);
+const Card_Tag_5_bCb = useCard_Tag_5_bCb()
+const Card_Tag_5_aProps = useStore((state)=>state["Showcase"]["Card_Tag_5_a"]);
+const Card_Tag_5_aIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_5_a"]);
+const Card_Tag_5_aCb = useCard_Tag_5_aCb()
+const Card_4Props = useStore((state)=>state["Showcase"]["Card_4"]);
+const Card_4IoProps = useIoStore((state)=>state["Showcase"]["Card_4"]);
+const Card_4Cb = useCard_4Cb()
+const Flex642Props = useStore((state)=>state["Showcase"]["Flex642"]);
+const Flex642IoProps = useIoStore((state)=>state["Showcase"]["Flex642"]);
+const Flex642Cb = useFlex642Cb()
+const Flex637Props = useStore((state)=>state["Showcase"]["Flex637"]);
+const Flex637IoProps = useIoStore((state)=>state["Showcase"]["Flex637"]);
+const Flex637Cb = useFlex637Cb()
+const Flex629Props = useStore((state)=>state["Showcase"]["Flex629"]);
+const Flex629IoProps = useIoStore((state)=>state["Showcase"]["Flex629"]);
+const Flex629Cb = useFlex629Cb()
+const Flex630Props = useStore((state)=>state["Showcase"]["Flex630"]);
+const Flex630IoProps = useIoStore((state)=>state["Showcase"]["Flex630"]);
+const Flex630Cb = useFlex630Cb()
+const Flex639Props = useStore((state)=>state["Showcase"]["Flex639"]);
+const Flex639IoProps = useIoStore((state)=>state["Showcase"]["Flex639"]);
+const Flex639Cb = useFlex639Cb()
+const Flex665Props = useStore((state)=>state["Showcase"]["Flex665"]);
+const Flex665IoProps = useIoStore((state)=>state["Showcase"]["Flex665"]);
+const Flex665Cb = useFlex665Cb()
+const Card_Tag_4_cProps = useStore((state)=>state["Showcase"]["Card_Tag_4_c"]);
+const Card_Tag_4_cIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_4_c"]);
+const Card_Tag_4_cCb = useCard_Tag_4_cCb()
+const Card_Tag_4_bProps = useStore((state)=>state["Showcase"]["Card_Tag_4_b"]);
+const Card_Tag_4_bIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_4_b"]);
+const Card_Tag_4_bCb = useCard_Tag_4_bCb()
+const Card_Tag_4_aProps = useStore((state)=>state["Showcase"]["Card_Tag_4_a"]);
+const Card_Tag_4_aIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_4_a"]);
+const Card_Tag_4_aCb = useCard_Tag_4_aCb()
+const Flex674Props = useStore((state)=>state["Showcase"]["Flex674"]);
+const Flex674IoProps = useIoStore((state)=>state["Showcase"]["Flex674"]);
+const Flex674Cb = useFlex674Cb()
+const Flex675Props = useStore((state)=>state["Showcase"]["Flex675"]);
+const Flex675IoProps = useIoStore((state)=>state["Showcase"]["Flex675"]);
+const Flex675Cb = useFlex675Cb()
+const Flex706Props = useStore((state)=>state["Showcase"]["Flex706"]);
+const Flex706IoProps = useIoStore((state)=>state["Showcase"]["Flex706"]);
+const Flex706Cb = useFlex706Cb()
+const Flex624Props = useStore((state)=>state["Showcase"]["Flex624"]);
+const Flex624IoProps = useIoStore((state)=>state["Showcase"]["Flex624"]);
+const Flex624Cb = useFlex624Cb()
+const Flex621Props = useStore((state)=>state["Showcase"]["Flex621"]);
+const Flex621IoProps = useIoStore((state)=>state["Showcase"]["Flex621"]);
+const Flex621Cb = useFlex621Cb()
+const Flex620Props = useStore((state)=>state["Showcase"]["Flex620"]);
+const Flex620IoProps = useIoStore((state)=>state["Showcase"]["Flex620"]);
+const Flex620Cb = useFlex620Cb()
+const Menu7Props = useStore((state)=>state["Showcase"]["Menu7"]);
+const Menu7IoProps = useIoStore((state)=>state["Showcase"]["Menu7"]);
+const Menu7Cb = useMenu7Cb()
+const Flex618Props = useStore((state)=>state["Showcase"]["Flex618"]);
+const Flex618IoProps = useIoStore((state)=>state["Showcase"]["Flex618"]);
+const Flex618Cb = useFlex618Cb()
+const Flex619Props = useStore((state)=>state["Showcase"]["Flex619"]);
+const Flex619IoProps = useIoStore((state)=>state["Showcase"]["Flex619"]);
+const Flex619Cb = useFlex619Cb()
+const Flex623Props = useStore((state)=>state["Showcase"]["Flex623"]);
+const Flex623IoProps = useIoStore((state)=>state["Showcase"]["Flex623"]);
+const Flex623Cb = useFlex623Cb()
+const Flex647Props = useStore((state)=>state["Showcase"]["Flex647"]);
+const Flex647IoProps = useIoStore((state)=>state["Showcase"]["Flex647"]);
+const Flex647Cb = useFlex647Cb()
+const Flex705Props = useStore((state)=>state["Showcase"]["Flex705"]);
+const Flex705IoProps = useIoStore((state)=>state["Showcase"]["Flex705"]);
+const Flex705Cb = useFlex705Cb()
+const Flex702Props = useStore((state)=>state["Showcase"]["Flex702"]);
+const Flex702IoProps = useIoStore((state)=>state["Showcase"]["Flex702"]);
+const Flex702Cb = useFlex702Cb()
+const Flex703Props = useStore((state)=>state["Showcase"]["Flex703"]);
+const Flex703IoProps = useIoStore((state)=>state["Showcase"]["Flex703"]);
+const Flex703Cb = useFlex703Cb()
+const Flex699Props = useStore((state)=>state["Showcase"]["Flex699"]);
+const Flex699IoProps = useIoStore((state)=>state["Showcase"]["Flex699"]);
+const Flex699Cb = useFlex699Cb()
+const Flex692Props = useStore((state)=>state["Showcase"]["Flex692"]);
+const Flex692IoProps = useIoStore((state)=>state["Showcase"]["Flex692"]);
+const Flex692Cb = useFlex692Cb()
+const Flex704Props = useStore((state)=>state["Showcase"]["Flex704"]);
+const Flex704IoProps = useIoStore((state)=>state["Showcase"]["Flex704"]);
+const Flex704Cb = useFlex704Cb()
+const Flex700Props = useStore((state)=>state["Showcase"]["Flex700"]);
+const Flex700IoProps = useIoStore((state)=>state["Showcase"]["Flex700"]);
+const Flex700Cb = useFlex700Cb()
+const Flex693Props = useStore((state)=>state["Showcase"]["Flex693"]);
+const Flex693IoProps = useIoStore((state)=>state["Showcase"]["Flex693"]);
+const Flex693Cb = useFlex693Cb()
+const Flex687Props = useStore((state)=>state["Showcase"]["Flex687"]);
+const Flex687IoProps = useIoStore((state)=>state["Showcase"]["Flex687"]);
+const Flex687Cb = useFlex687Cb()
+const Flex686Props = useStore((state)=>state["Showcase"]["Flex686"]);
+const Flex686IoProps = useIoStore((state)=>state["Showcase"]["Flex686"]);
+const Flex686Cb = useFlex686Cb()
+const Flex685Props = useStore((state)=>state["Showcase"]["Flex685"]);
+const Flex685IoProps = useIoStore((state)=>state["Showcase"]["Flex685"]);
+const Flex685Cb = useFlex685Cb()
+const Flex694Props = useStore((state)=>state["Showcase"]["Flex694"]);
+const Flex694IoProps = useIoStore((state)=>state["Showcase"]["Flex694"]);
+const Flex694Cb = useFlex694Cb()
+const Flex701Props = useStore((state)=>state["Showcase"]["Flex701"]);
+const Flex701IoProps = useIoStore((state)=>state["Showcase"]["Flex701"]);
+const Flex701Cb = useFlex701Cb()
+const Flex695Props = useStore((state)=>state["Showcase"]["Flex695"]);
+const Flex695IoProps = useIoStore((state)=>state["Showcase"]["Flex695"]);
+const Flex695Cb = useFlex695Cb()
+const Flex688Props = useStore((state)=>state["Showcase"]["Flex688"]);
+const Flex688IoProps = useIoStore((state)=>state["Showcase"]["Flex688"]);
+const Flex688Cb = useFlex688Cb()
+const Flex696Props = useStore((state)=>state["Showcase"]["Flex696"]);
+const Flex696IoProps = useIoStore((state)=>state["Showcase"]["Flex696"]);
+const Flex696Cb = useFlex696Cb()
+const Flex689Props = useStore((state)=>state["Showcase"]["Flex689"]);
+const Flex689IoProps = useIoStore((state)=>state["Showcase"]["Flex689"]);
+const Flex689Cb = useFlex689Cb()
+const Flex697Props = useStore((state)=>state["Showcase"]["Flex697"]);
+const Flex697IoProps = useIoStore((state)=>state["Showcase"]["Flex697"]);
+const Flex697Cb = useFlex697Cb()
+const Flex690Props = useStore((state)=>state["Showcase"]["Flex690"]);
+const Flex690IoProps = useIoStore((state)=>state["Showcase"]["Flex690"]);
+const Flex690Cb = useFlex690Cb()
+const Flex698Props = useStore((state)=>state["Showcase"]["Flex698"]);
+const Flex698IoProps = useIoStore((state)=>state["Showcase"]["Flex698"]);
+const Flex698Cb = useFlex698Cb()
+const Flex691Props = useStore((state)=>state["Showcase"]["Flex691"]);
+const Flex691IoProps = useIoStore((state)=>state["Showcase"]["Flex691"]);
+const Flex691Cb = useFlex691Cb()
+const TextBox361Props = useStore((state)=>state["Showcase"]["TextBox361"]);
+const TextBox361IoProps = useIoStore((state)=>state["Showcase"]["TextBox361"]);
+const TextBox361Cb = useTextBox361Cb()
+const TextBox362Props = useStore((state)=>state["Showcase"]["TextBox362"]);
+const TextBox362IoProps = useIoStore((state)=>state["Showcase"]["TextBox362"]);
+const TextBox362Cb = useTextBox362Cb()
+const Button116Props = useStore((state)=>state["Showcase"]["Button116"]);
+const Button116IoProps = useIoStore((state)=>state["Showcase"]["Button116"]);
+const Button116Cb = useButton116Cb()
+const Button235Props = useStore((state)=>state["Showcase"]["Button235"]);
+const Button235IoProps = useIoStore((state)=>state["Showcase"]["Button235"]);
+const Button235Cb = useButton235Cb()
+const TextBox499Props = useStore((state)=>state["Showcase"]["TextBox499"]);
+const TextBox499IoProps = useIoStore((state)=>state["Showcase"]["TextBox499"]);
+const TextBox499Cb = useTextBox499Cb()
+const Input19Props = useStore((state)=>state["Showcase"]["Input19"]);
+const Input19IoProps = useIoStore((state)=>state["Showcase"]["Input19"]);
+const Input19Cb = useInput19Cb()
+const Input20Props = useStore((state)=>state["Showcase"]["Input20"]);
+const Input20IoProps = useIoStore((state)=>state["Showcase"]["Input20"]);
+const Input20Cb = useInput20Cb()
+const TextBox500Props = useStore((state)=>state["Showcase"]["TextBox500"]);
+const TextBox500IoProps = useIoStore((state)=>state["Showcase"]["TextBox500"]);
+const TextBox500Cb = useTextBox500Cb()
+const TextBox501Props = useStore((state)=>state["Showcase"]["TextBox501"]);
+const TextBox501IoProps = useIoStore((state)=>state["Showcase"]["TextBox501"]);
+const TextBox501Cb = useTextBox501Cb()
+const Input21Props = useStore((state)=>state["Showcase"]["Input21"]);
+const Input21IoProps = useIoStore((state)=>state["Showcase"]["Input21"]);
+const Input21Cb = useInput21Cb()
+const Input22Props = useStore((state)=>state["Showcase"]["Input22"]);
+const Input22IoProps = useIoStore((state)=>state["Showcase"]["Input22"]);
+const Input22Cb = useInput22Cb()
+const TextBox502Props = useStore((state)=>state["Showcase"]["TextBox502"]);
+const TextBox502IoProps = useIoStore((state)=>state["Showcase"]["TextBox502"]);
+const TextBox502Cb = useTextBox502Cb()
+const TextBox503Props = useStore((state)=>state["Showcase"]["TextBox503"]);
+const TextBox503IoProps = useIoStore((state)=>state["Showcase"]["TextBox503"]);
+const TextBox503Cb = useTextBox503Cb()
+const Input23Props = useStore((state)=>state["Showcase"]["Input23"]);
+const Input23IoProps = useIoStore((state)=>state["Showcase"]["Input23"]);
+const Input23Cb = useInput23Cb()
+const TextBox504Props = useStore((state)=>state["Showcase"]["TextBox504"]);
+const TextBox504IoProps = useIoStore((state)=>state["Showcase"]["TextBox504"]);
+const TextBox504Cb = useTextBox504Cb()
+const Input24Props = useStore((state)=>state["Showcase"]["Input24"]);
+const Input24IoProps = useIoStore((state)=>state["Showcase"]["Input24"]);
+const Input24Cb = useInput24Cb()
+const TextBox505Props = useStore((state)=>state["Showcase"]["TextBox505"]);
+const TextBox505IoProps = useIoStore((state)=>state["Showcase"]["TextBox505"]);
+const TextBox505Cb = useTextBox505Cb()
+const Upload3Props = useStore((state)=>state["Showcase"]["Upload3"]);
+const Upload3IoProps = useIoStore((state)=>state["Showcase"]["Upload3"]);
+const Upload3Cb = useUpload3Cb()
+const TextBox506Props = useStore((state)=>state["Showcase"]["TextBox506"]);
+const TextBox506IoProps = useIoStore((state)=>state["Showcase"]["TextBox506"]);
+const TextBox506Cb = useTextBox506Cb()
+const Upload4Props = useStore((state)=>state["Showcase"]["Upload4"]);
+const Upload4IoProps = useIoStore((state)=>state["Showcase"]["Upload4"]);
+const Upload4Cb = useUpload4Cb()
+const TextBox507Props = useStore((state)=>state["Showcase"]["TextBox507"]);
+const TextBox507IoProps = useIoStore((state)=>state["Showcase"]["TextBox507"]);
+const TextBox507Cb = useTextBox507Cb()
+const Image319Props = useStore((state)=>state["Showcase"]["Image319"]);
+const Image319IoProps = useIoStore((state)=>state["Showcase"]["Image319"]);
+const Image319Cb = useImage319Cb()
+const Image318Props = useStore((state)=>state["Showcase"]["Image318"]);
+const Image318IoProps = useIoStore((state)=>state["Showcase"]["Image318"]);
+const Image318Cb = useImage318Cb()
+const TextBox497Props = useStore((state)=>state["Showcase"]["TextBox497"]);
+const TextBox497IoProps = useIoStore((state)=>state["Showcase"]["TextBox497"]);
+const TextBox497Cb = useTextBox497Cb()
+const TextBox498Props = useStore((state)=>state["Showcase"]["TextBox498"]);
+const TextBox498IoProps = useIoStore((state)=>state["Showcase"]["TextBox498"]);
+const TextBox498Cb = useTextBox498Cb()
+const Tag_1Props = useStore((state)=>state["Showcase"]["Tag_1"]);
+const Tag_1IoProps = useIoStore((state)=>state["Showcase"]["Tag_1"]);
+const Tag_1Cb = useTag_1Cb()
+const Tag_2Props = useStore((state)=>state["Showcase"]["Tag_2"]);
+const Tag_2IoProps = useIoStore((state)=>state["Showcase"]["Tag_2"]);
+const Tag_2Cb = useTag_2Cb()
+const Tag_3Props = useStore((state)=>state["Showcase"]["Tag_3"]);
+const Tag_3IoProps = useIoStore((state)=>state["Showcase"]["Tag_3"]);
+const Tag_3Cb = useTag_3Cb()
+const Image315Props = useStore((state)=>state["Showcase"]["Image315"]);
+const Image315IoProps = useIoStore((state)=>state["Showcase"]["Image315"]);
+const Image315Cb = useImage315Cb()
+const Image316Props = useStore((state)=>state["Showcase"]["Image316"]);
+const Image316IoProps = useIoStore((state)=>state["Showcase"]["Image316"]);
+const Image316Cb = useImage316Cb()
+const Image317Props = useStore((state)=>state["Showcase"]["Image317"]);
+const Image317IoProps = useIoStore((state)=>state["Showcase"]["Image317"]);
+const Image317Cb = useImage317Cb()
+const TextBox496Props = useStore((state)=>state["Showcase"]["TextBox496"]);
+const TextBox496IoProps = useIoStore((state)=>state["Showcase"]["TextBox496"]);
+const TextBox496Cb = useTextBox496Cb()
+const TextBox363Props = useStore((state)=>state["Showcase"]["TextBox363"]);
+const TextBox363IoProps = useIoStore((state)=>state["Showcase"]["TextBox363"]);
+const TextBox363Cb = useTextBox363Cb()
+const TextBox364Props = useStore((state)=>state["Showcase"]["TextBox364"]);
+const TextBox364IoProps = useIoStore((state)=>state["Showcase"]["TextBox364"]);
+const TextBox364Cb = useTextBox364Cb()
+const Filter_Btn_1Props = useStore((state)=>state["Showcase"]["Filter_Btn_1"]);
+const Filter_Btn_1IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_1"]);
+const Filter_Btn_1Cb = useFilter_Btn_1Cb()
+const Filter_Btn_2Props = useStore((state)=>state["Showcase"]["Filter_Btn_2"]);
+const Filter_Btn_2IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_2"]);
+const Filter_Btn_2Cb = useFilter_Btn_2Cb()
+const Filter_Btn_3Props = useStore((state)=>state["Showcase"]["Filter_Btn_3"]);
+const Filter_Btn_3IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_3"]);
+const Filter_Btn_3Cb = useFilter_Btn_3Cb()
+const Filter_Btn_4Props = useStore((state)=>state["Showcase"]["Filter_Btn_4"]);
+const Filter_Btn_4IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_4"]);
+const Filter_Btn_4Cb = useFilter_Btn_4Cb()
+const Filter_Btn_5Props = useStore((state)=>state["Showcase"]["Filter_Btn_5"]);
+const Filter_Btn_5IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_5"]);
+const Filter_Btn_5Cb = useFilter_Btn_5Cb()
+const Filter_Btn_6Props = useStore((state)=>state["Showcase"]["Filter_Btn_6"]);
+const Filter_Btn_6IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_6"]);
+const Filter_Btn_6Cb = useFilter_Btn_6Cb()
+const Filter_Btn_7Props = useStore((state)=>state["Showcase"]["Filter_Btn_7"]);
+const Filter_Btn_7IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_7"]);
+const Filter_Btn_7Cb = useFilter_Btn_7Cb()
+const Filter_Btn_8Props = useStore((state)=>state["Showcase"]["Filter_Btn_8"]);
+const Filter_Btn_8IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_8"]);
+const Filter_Btn_8Cb = useFilter_Btn_8Cb()
+const Filter_Btn_9Props = useStore((state)=>state["Showcase"]["Filter_Btn_9"]);
+const Filter_Btn_9IoProps = useIoStore((state)=>state["Showcase"]["Filter_Btn_9"]);
+const Filter_Btn_9Cb = useFilter_Btn_9Cb()
+const Card_Image_1Props = useStore((state)=>state["Showcase"]["Card_Image_1"]);
+const Card_Image_1IoProps = useIoStore((state)=>state["Showcase"]["Card_Image_1"]);
+const Card_Image_1Cb = useCard_Image_1Cb()
+const Card_Title_1Props = useStore((state)=>state["Showcase"]["Card_Title_1"]);
+const Card_Title_1IoProps = useIoStore((state)=>state["Showcase"]["Card_Title_1"]);
+const Card_Title_1Cb = useCard_Title_1Cb()
+const Card_Text_1Props = useStore((state)=>state["Showcase"]["Card_Text_1"]);
+const Card_Text_1IoProps = useIoStore((state)=>state["Showcase"]["Card_Text_1"]);
+const Card_Text_1Cb = useCard_Text_1Cb()
+const Card_Tag_1_a_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_1_a_Text"]);
+const Card_Tag_1_a_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_1_a_Text"]);
+const Card_Tag_1_a_TextCb = useCard_Tag_1_a_TextCb()
+const Card_Tag_1_b_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_1_b_Text"]);
+const Card_Tag_1_b_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_1_b_Text"]);
+const Card_Tag_1_b_TextCb = useCard_Tag_1_b_TextCb()
+const Card_Tag_1_c_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_1_c_Text"]);
+const Card_Tag_1_c_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_1_c_Text"]);
+const Card_Tag_1_c_TextCb = useCard_Tag_1_c_TextCb()
+const Card_Github_1Props = useStore((state)=>state["Showcase"]["Card_Github_1"]);
+const Card_Github_1IoProps = useIoStore((state)=>state["Showcase"]["Card_Github_1"]);
+const Card_Github_1Cb = useCard_Github_1Cb()
+const Card_Deploy_1Props = useStore((state)=>state["Showcase"]["Card_Deploy_1"]);
+const Card_Deploy_1IoProps = useIoStore((state)=>state["Showcase"]["Card_Deploy_1"]);
+const Card_Deploy_1Cb = useCard_Deploy_1Cb()
+const Card_Creator_Image_1Props = useStore((state)=>state["Showcase"]["Card_Creator_Image_1"]);
+const Card_Creator_Image_1IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Image_1"]);
+const Card_Creator_Image_1Cb = useCard_Creator_Image_1Cb()
+const Card_Creator_Name_1Props = useStore((state)=>state["Showcase"]["Card_Creator_Name_1"]);
+const Card_Creator_Name_1IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Name_1"]);
+const Card_Creator_Name_1Cb = useCard_Creator_Name_1Cb()
+const Card_Image_2Props = useStore((state)=>state["Showcase"]["Card_Image_2"]);
+const Card_Image_2IoProps = useIoStore((state)=>state["Showcase"]["Card_Image_2"]);
+const Card_Image_2Cb = useCard_Image_2Cb()
+const Card_Creator_Name_2Props = useStore((state)=>state["Showcase"]["Card_Creator_Name_2"]);
+const Card_Creator_Name_2IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Name_2"]);
+const Card_Creator_Name_2Cb = useCard_Creator_Name_2Cb()
+const Card_Creator_Image_2Props = useStore((state)=>state["Showcase"]["Card_Creator_Image_2"]);
+const Card_Creator_Image_2IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Image_2"]);
+const Card_Creator_Image_2Cb = useCard_Creator_Image_2Cb()
+const Card_Deploy_2Props = useStore((state)=>state["Showcase"]["Card_Deploy_2"]);
+const Card_Deploy_2IoProps = useIoStore((state)=>state["Showcase"]["Card_Deploy_2"]);
+const Card_Deploy_2Cb = useCard_Deploy_2Cb()
+const Card_Github_2Props = useStore((state)=>state["Showcase"]["Card_Github_2"]);
+const Card_Github_2IoProps = useIoStore((state)=>state["Showcase"]["Card_Github_2"]);
+const Card_Github_2Cb = useCard_Github_2Cb()
+const Card_Text_2Props = useStore((state)=>state["Showcase"]["Card_Text_2"]);
+const Card_Text_2IoProps = useIoStore((state)=>state["Showcase"]["Card_Text_2"]);
+const Card_Text_2Cb = useCard_Text_2Cb()
+const Card_Title_2Props = useStore((state)=>state["Showcase"]["Card_Title_2"]);
+const Card_Title_2IoProps = useIoStore((state)=>state["Showcase"]["Card_Title_2"]);
+const Card_Title_2Cb = useCard_Title_2Cb()
+const Card_Tag_2_c_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_2_c_Text"]);
+const Card_Tag_2_c_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_2_c_Text"]);
+const Card_Tag_2_c_TextCb = useCard_Tag_2_c_TextCb()
+const Card_Tag_2_b_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_2_b_Text"]);
+const Card_Tag_2_b_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_2_b_Text"]);
+const Card_Tag_2_b_TextCb = useCard_Tag_2_b_TextCb()
+const Card_Tag_2_a_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_2_a_Text"]);
+const Card_Tag_2_a_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_2_a_Text"]);
+const Card_Tag_2_a_TextCb = useCard_Tag_2_a_TextCb()
+const Card_Image_3Props = useStore((state)=>state["Showcase"]["Card_Image_3"]);
+const Card_Image_3IoProps = useIoStore((state)=>state["Showcase"]["Card_Image_3"]);
+const Card_Image_3Cb = useCard_Image_3Cb()
+const Card_Title_3Props = useStore((state)=>state["Showcase"]["Card_Title_3"]);
+const Card_Title_3IoProps = useIoStore((state)=>state["Showcase"]["Card_Title_3"]);
+const Card_Title_3Cb = useCard_Title_3Cb()
+const Card_Text_3Props = useStore((state)=>state["Showcase"]["Card_Text_3"]);
+const Card_Text_3IoProps = useIoStore((state)=>state["Showcase"]["Card_Text_3"]);
+const Card_Text_3Cb = useCard_Text_3Cb()
+const Card_Github_3Props = useStore((state)=>state["Showcase"]["Card_Github_3"]);
+const Card_Github_3IoProps = useIoStore((state)=>state["Showcase"]["Card_Github_3"]);
+const Card_Github_3Cb = useCard_Github_3Cb()
+const Card_Deploy_3Props = useStore((state)=>state["Showcase"]["Card_Deploy_3"]);
+const Card_Deploy_3IoProps = useIoStore((state)=>state["Showcase"]["Card_Deploy_3"]);
+const Card_Deploy_3Cb = useCard_Deploy_3Cb()
+const Card_Creator_Image_3Props = useStore((state)=>state["Showcase"]["Card_Creator_Image_3"]);
+const Card_Creator_Image_3IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Image_3"]);
+const Card_Creator_Image_3Cb = useCard_Creator_Image_3Cb()
+const Card_Creator_Name_3Props = useStore((state)=>state["Showcase"]["Card_Creator_Name_3"]);
+const Card_Creator_Name_3IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Name_3"]);
+const Card_Creator_Name_3Cb = useCard_Creator_Name_3Cb()
+const Card_Tag_3_c_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_3_c_Text"]);
+const Card_Tag_3_c_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_3_c_Text"]);
+const Card_Tag_3_c_TextCb = useCard_Tag_3_c_TextCb()
+const Card_Tag_3_b_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_3_b_Text"]);
+const Card_Tag_3_b_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_3_b_Text"]);
+const Card_Tag_3_b_TextCb = useCard_Tag_3_b_TextCb()
+const Card_Tag_3_a_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_3_a_Text"]);
+const Card_Tag_3_a_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_3_a_Text"]);
+const Card_Tag_3_a_TextCb = useCard_Tag_3_a_TextCb()
+const Card_Image_6Props = useStore((state)=>state["Showcase"]["Card_Image_6"]);
+const Card_Image_6IoProps = useIoStore((state)=>state["Showcase"]["Card_Image_6"]);
+const Card_Image_6Cb = useCard_Image_6Cb()
+const Card_Creator_Name_6Props = useStore((state)=>state["Showcase"]["Card_Creator_Name_6"]);
+const Card_Creator_Name_6IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Name_6"]);
+const Card_Creator_Name_6Cb = useCard_Creator_Name_6Cb()
+const Card_Creator_Image_6Props = useStore((state)=>state["Showcase"]["Card_Creator_Image_6"]);
+const Card_Creator_Image_6IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Image_6"]);
+const Card_Creator_Image_6Cb = useCard_Creator_Image_6Cb()
+const Card_Deploy_6Props = useStore((state)=>state["Showcase"]["Card_Deploy_6"]);
+const Card_Deploy_6IoProps = useIoStore((state)=>state["Showcase"]["Card_Deploy_6"]);
+const Card_Deploy_6Cb = useCard_Deploy_6Cb()
+const Card_Github_6Props = useStore((state)=>state["Showcase"]["Card_Github_6"]);
+const Card_Github_6IoProps = useIoStore((state)=>state["Showcase"]["Card_Github_6"]);
+const Card_Github_6Cb = useCard_Github_6Cb()
+const Card_Text_6Props = useStore((state)=>state["Showcase"]["Card_Text_6"]);
+const Card_Text_6IoProps = useIoStore((state)=>state["Showcase"]["Card_Text_6"]);
+const Card_Text_6Cb = useCard_Text_6Cb()
+const Card_Title_6Props = useStore((state)=>state["Showcase"]["Card_Title_6"]);
+const Card_Title_6IoProps = useIoStore((state)=>state["Showcase"]["Card_Title_6"]);
+const Card_Title_6Cb = useCard_Title_6Cb()
+const Card_Tag_6_c_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_6_c_Text"]);
+const Card_Tag_6_c_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_6_c_Text"]);
+const Card_Tag_6_c_TextCb = useCard_Tag_6_c_TextCb()
+const Card_Tag_6_b_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_6_b_Text"]);
+const Card_Tag_6_b_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_6_b_Text"]);
+const Card_Tag_6_b_TextCb = useCard_Tag_6_b_TextCb()
+const Card_Tag_6_a_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_6_a_Text"]);
+const Card_Tag_6_a_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_6_a_Text"]);
+const Card_Tag_6_a_TextCb = useCard_Tag_6_a_TextCb()
+const Card_Image_5Props = useStore((state)=>state["Showcase"]["Card_Image_5"]);
+const Card_Image_5IoProps = useIoStore((state)=>state["Showcase"]["Card_Image_5"]);
+const Card_Image_5Cb = useCard_Image_5Cb()
+const Card_Title_5Props = useStore((state)=>state["Showcase"]["Card_Title_5"]);
+const Card_Title_5IoProps = useIoStore((state)=>state["Showcase"]["Card_Title_5"]);
+const Card_Title_5Cb = useCard_Title_5Cb()
+const Card_Text_5Props = useStore((state)=>state["Showcase"]["Card_Text_5"]);
+const Card_Text_5IoProps = useIoStore((state)=>state["Showcase"]["Card_Text_5"]);
+const Card_Text_5Cb = useCard_Text_5Cb()
+const Card_Github_5Props = useStore((state)=>state["Showcase"]["Card_Github_5"]);
+const Card_Github_5IoProps = useIoStore((state)=>state["Showcase"]["Card_Github_5"]);
+const Card_Github_5Cb = useCard_Github_5Cb()
+const Card_Deploy_5Props = useStore((state)=>state["Showcase"]["Card_Deploy_5"]);
+const Card_Deploy_5IoProps = useIoStore((state)=>state["Showcase"]["Card_Deploy_5"]);
+const Card_Deploy_5Cb = useCard_Deploy_5Cb()
+const Card_Creator_Image_5Props = useStore((state)=>state["Showcase"]["Card_Creator_Image_5"]);
+const Card_Creator_Image_5IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Image_5"]);
+const Card_Creator_Image_5Cb = useCard_Creator_Image_5Cb()
+const Card_Creator_Name_5Props = useStore((state)=>state["Showcase"]["Card_Creator_Name_5"]);
+const Card_Creator_Name_5IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Name_5"]);
+const Card_Creator_Name_5Cb = useCard_Creator_Name_5Cb()
+const Card_Tag_5_c_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_5_c_Text"]);
+const Card_Tag_5_c_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_5_c_Text"]);
+const Card_Tag_5_c_TextCb = useCard_Tag_5_c_TextCb()
+const Card_Tag_5_b_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_5_b_Text"]);
+const Card_Tag_5_b_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_5_b_Text"]);
+const Card_Tag_5_b_TextCb = useCard_Tag_5_b_TextCb()
+const Card_Tag_5_a_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_5_a_Text"]);
+const Card_Tag_5_a_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_5_a_Text"]);
+const Card_Tag_5_a_TextCb = useCard_Tag_5_a_TextCb()
+const Card_Image_4Props = useStore((state)=>state["Showcase"]["Card_Image_4"]);
+const Card_Image_4IoProps = useIoStore((state)=>state["Showcase"]["Card_Image_4"]);
+const Card_Image_4Cb = useCard_Image_4Cb()
+const Card_Creator_Name_4Props = useStore((state)=>state["Showcase"]["Card_Creator_Name_4"]);
+const Card_Creator_Name_4IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Name_4"]);
+const Card_Creator_Name_4Cb = useCard_Creator_Name_4Cb()
+const Card_Creator_Image_4Props = useStore((state)=>state["Showcase"]["Card_Creator_Image_4"]);
+const Card_Creator_Image_4IoProps = useIoStore((state)=>state["Showcase"]["Card_Creator_Image_4"]);
+const Card_Creator_Image_4Cb = useCard_Creator_Image_4Cb()
+const Card_Deploy_4Props = useStore((state)=>state["Showcase"]["Card_Deploy_4"]);
+const Card_Deploy_4IoProps = useIoStore((state)=>state["Showcase"]["Card_Deploy_4"]);
+const Card_Deploy_4Cb = useCard_Deploy_4Cb()
+const Card_Github_4Props = useStore((state)=>state["Showcase"]["Card_Github_4"]);
+const Card_Github_4IoProps = useIoStore((state)=>state["Showcase"]["Card_Github_4"]);
+const Card_Github_4Cb = useCard_Github_4Cb()
+const Card_Text_4Props = useStore((state)=>state["Showcase"]["Card_Text_4"]);
+const Card_Text_4IoProps = useIoStore((state)=>state["Showcase"]["Card_Text_4"]);
+const Card_Text_4Cb = useCard_Text_4Cb()
+const Card_Title_4Props = useStore((state)=>state["Showcase"]["Card_Title_4"]);
+const Card_Title_4IoProps = useIoStore((state)=>state["Showcase"]["Card_Title_4"]);
+const Card_Title_4Cb = useCard_Title_4Cb()
+const Card_Tag_4_c_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_4_c_Text"]);
+const Card_Tag_4_c_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_4_c_Text"]);
+const Card_Tag_4_c_TextCb = useCard_Tag_4_c_TextCb()
+const Card_Tag_4_b_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_4_b_Text"]);
+const Card_Tag_4_b_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_4_b_Text"]);
+const Card_Tag_4_b_TextCb = useCard_Tag_4_b_TextCb()
+const Card_Tag_4_a_TextProps = useStore((state)=>state["Showcase"]["Card_Tag_4_a_Text"]);
+const Card_Tag_4_a_TextIoProps = useIoStore((state)=>state["Showcase"]["Card_Tag_4_a_Text"]);
+const Card_Tag_4_a_TextCb = useCard_Tag_4_a_TextCb()
+const Image303Props = useStore((state)=>state["Showcase"]["Image303"]);
+const Image303IoProps = useIoStore((state)=>state["Showcase"]["Image303"]);
+const Image303Cb = useImage303Cb()
+const Image304Props = useStore((state)=>state["Showcase"]["Image304"]);
+const Image304IoProps = useIoStore((state)=>state["Showcase"]["Image304"]);
+const Image304Cb = useImage304Cb()
+const TextBox474Props = useStore((state)=>state["Showcase"]["TextBox474"]);
+const TextBox474IoProps = useIoStore((state)=>state["Showcase"]["TextBox474"]);
+const TextBox474Cb = useTextBox474Cb()
+const TextBox453Props = useStore((state)=>state["Showcase"]["TextBox453"]);
+const TextBox453IoProps = useIoStore((state)=>state["Showcase"]["TextBox453"]);
+const TextBox453Cb = useTextBox453Cb()
+const Image278Props = useStore((state)=>state["Showcase"]["Image278"]);
+const Image278IoProps = useIoStore((state)=>state["Showcase"]["Image278"]);
+const Image278Cb = useImage278Cb()
+const TextBox430Props = useStore((state)=>state["Showcase"]["TextBox430"]);
+const TextBox430IoProps = useIoStore((state)=>state["Showcase"]["TextBox430"]);
+const TextBox430Cb = useTextBox430Cb()
+const TextBox431Props = useStore((state)=>state["Showcase"]["TextBox431"]);
+const TextBox431IoProps = useIoStore((state)=>state["Showcase"]["TextBox431"]);
+const TextBox431Cb = useTextBox431Cb()
+const Button200Props = useStore((state)=>state["Showcase"]["Button200"]);
+const Button200IoProps = useIoStore((state)=>state["Showcase"]["Button200"]);
+const Button200Cb = useButton200Cb()
+const TextBox438Props = useStore((state)=>state["Showcase"]["TextBox438"]);
+const TextBox438IoProps = useIoStore((state)=>state["Showcase"]["TextBox438"]);
+const TextBox438Cb = useTextBox438Cb()
+const Image279Props = useStore((state)=>state["Showcase"]["Image279"]);
+const Image279IoProps = useIoStore((state)=>state["Showcase"]["Image279"]);
+const Image279Cb = useImage279Cb()
+const TextBox448Props = useStore((state)=>state["Showcase"]["TextBox448"]);
+const TextBox448IoProps = useIoStore((state)=>state["Showcase"]["TextBox448"]);
+const TextBox448Cb = useTextBox448Cb()
+const TextBox449Props = useStore((state)=>state["Showcase"]["TextBox449"]);
+const TextBox449IoProps = useIoStore((state)=>state["Showcase"]["TextBox449"]);
+const TextBox449Cb = useTextBox449Cb()
+const TextBox450Props = useStore((state)=>state["Showcase"]["TextBox450"]);
+const TextBox450IoProps = useIoStore((state)=>state["Showcase"]["TextBox450"]);
+const TextBox450Cb = useTextBox450Cb()
+const TextBox451Props = useStore((state)=>state["Showcase"]["TextBox451"]);
+const TextBox451IoProps = useIoStore((state)=>state["Showcase"]["TextBox451"]);
+const TextBox451Cb = useTextBox451Cb()
+const Image300Props = useStore((state)=>state["Showcase"]["Image300"]);
+const Image300IoProps = useIoStore((state)=>state["Showcase"]["Image300"]);
+const Image300Cb = useImage300Cb()
+const TextBox472Props = useStore((state)=>state["Showcase"]["TextBox472"]);
+const TextBox472IoProps = useIoStore((state)=>state["Showcase"]["TextBox472"]);
+const TextBox472Cb = useTextBox472Cb()
+const TextBox466Props = useStore((state)=>state["Showcase"]["TextBox466"]);
+const TextBox466IoProps = useIoStore((state)=>state["Showcase"]["TextBox466"]);
+const TextBox466Cb = useTextBox466Cb()
+const TextBox467Props = useStore((state)=>state["Showcase"]["TextBox467"]);
+const TextBox467IoProps = useIoStore((state)=>state["Showcase"]["TextBox467"]);
+const TextBox467Cb = useTextBox467Cb()
+const TextBox456Props = useStore((state)=>state["Showcase"]["TextBox456"]);
+const TextBox456IoProps = useIoStore((state)=>state["Showcase"]["TextBox456"]);
+const TextBox456Cb = useTextBox456Cb()
+const Image295Props = useStore((state)=>state["Showcase"]["Image295"]);
+const Image295IoProps = useIoStore((state)=>state["Showcase"]["Image295"]);
+const Image295Cb = useImage295Cb()
+const TextBox455Props = useStore((state)=>state["Showcase"]["TextBox455"]);
+const TextBox455IoProps = useIoStore((state)=>state["Showcase"]["TextBox455"]);
+const TextBox455Cb = useTextBox455Cb()
+const Image294Props = useStore((state)=>state["Showcase"]["Image294"]);
+const Image294IoProps = useIoStore((state)=>state["Showcase"]["Image294"]);
+const Image294Cb = useImage294Cb()
+const Image296Props = useStore((state)=>state["Showcase"]["Image296"]);
+const Image296IoProps = useIoStore((state)=>state["Showcase"]["Image296"]);
+const Image296Cb = useImage296Cb()
+const Image297Props = useStore((state)=>state["Showcase"]["Image297"]);
+const Image297IoProps = useIoStore((state)=>state["Showcase"]["Image297"]);
+const Image297Cb = useImage297Cb()
+const Image298Props = useStore((state)=>state["Showcase"]["Image298"]);
+const Image298IoProps = useIoStore((state)=>state["Showcase"]["Image298"]);
+const Image298Cb = useImage298Cb()
+const Image299Props = useStore((state)=>state["Showcase"]["Image299"]);
+const Image299IoProps = useIoStore((state)=>state["Showcase"]["Image299"]);
+const Image299Cb = useImage299Cb()
+const TextBox468Props = useStore((state)=>state["Showcase"]["TextBox468"]);
+const TextBox468IoProps = useIoStore((state)=>state["Showcase"]["TextBox468"]);
+const TextBox468Cb = useTextBox468Cb()
+const TextBox457Props = useStore((state)=>state["Showcase"]["TextBox457"]);
+const TextBox457IoProps = useIoStore((state)=>state["Showcase"]["TextBox457"]);
+const TextBox457Cb = useTextBox457Cb()
+const TextBox469Props = useStore((state)=>state["Showcase"]["TextBox469"]);
+const TextBox469IoProps = useIoStore((state)=>state["Showcase"]["TextBox469"]);
+const TextBox469Cb = useTextBox469Cb()
+const TextBox458Props = useStore((state)=>state["Showcase"]["TextBox458"]);
+const TextBox458IoProps = useIoStore((state)=>state["Showcase"]["TextBox458"]);
+const TextBox458Cb = useTextBox458Cb()
+const TextBox459Props = useStore((state)=>state["Showcase"]["TextBox459"]);
+const TextBox459IoProps = useIoStore((state)=>state["Showcase"]["TextBox459"]);
+const TextBox459Cb = useTextBox459Cb()
+const TextBox460Props = useStore((state)=>state["Showcase"]["TextBox460"]);
+const TextBox460IoProps = useIoStore((state)=>state["Showcase"]["TextBox460"]);
+const TextBox460Cb = useTextBox460Cb()
+const TextBox470Props = useStore((state)=>state["Showcase"]["TextBox470"]);
+const TextBox470IoProps = useIoStore((state)=>state["Showcase"]["TextBox470"]);
+const TextBox470Cb = useTextBox470Cb()
+const TextBox461Props = useStore((state)=>state["Showcase"]["TextBox461"]);
+const TextBox461IoProps = useIoStore((state)=>state["Showcase"]["TextBox461"]);
+const TextBox461Cb = useTextBox461Cb()
+const TextBox462Props = useStore((state)=>state["Showcase"]["TextBox462"]);
+const TextBox462IoProps = useIoStore((state)=>state["Showcase"]["TextBox462"]);
+const TextBox462Cb = useTextBox462Cb()
+const TextBox463Props = useStore((state)=>state["Showcase"]["TextBox463"]);
+const TextBox463IoProps = useIoStore((state)=>state["Showcase"]["TextBox463"]);
+const TextBox463Cb = useTextBox463Cb()
+const TextBox471Props = useStore((state)=>state["Showcase"]["TextBox471"]);
+const TextBox471IoProps = useIoStore((state)=>state["Showcase"]["TextBox471"]);
+const TextBox471Cb = useTextBox471Cb()
+const TextBox464Props = useStore((state)=>state["Showcase"]["TextBox464"]);
+const TextBox464IoProps = useIoStore((state)=>state["Showcase"]["TextBox464"]);
+const TextBox464Cb = useTextBox464Cb()
+const TextBox465Props = useStore((state)=>state["Showcase"]["TextBox465"]);
+const TextBox465IoProps = useIoStore((state)=>state["Showcase"]["TextBox465"]);
+const TextBox465Cb = useTextBox465Cb()
+
+  return (<>
+  <Flex2 className="p-Showcase Flex624 bpt" {...Flex624Props} {...Flex624Cb} {...Flex624IoProps}>
+<Flex2 className="p-Showcase Flex623 bpt" {...Flex623Props} {...Flex623Cb} {...Flex623IoProps}>
+<Image2 className="p-Showcase Image279 bpt" {...Image279Props} {...Image279Cb} {...Image279IoProps}/>
+<TextBox2 className="p-Showcase TextBox438 bpt" {...TextBox438Props} {...TextBox438Cb} {...TextBox438IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex647 bpt" {...Flex647Props} {...Flex647Cb} {...Flex647IoProps}>
+<TextBox2 className="p-Showcase TextBox451 bpt" {...TextBox451Props} {...TextBox451Cb} {...TextBox451IoProps}/>
+<TextBox2 className="p-Showcase TextBox450 bpt" {...TextBox450Props} {...TextBox450Cb} {...TextBox450IoProps}/>
+<TextBox2 className="p-Showcase TextBox448 bpt" {...TextBox448Props} {...TextBox448Cb} {...TextBox448IoProps}/>
+<TextBox2 className="p-Showcase TextBox449 bpt" {...TextBox449Props} {...TextBox449Cb} {...TextBox449IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex621 bpt" {...Flex621Props} {...Flex621Cb} {...Flex621IoProps}>
+<Image2 className="p-Showcase Image278 bpt" {...Image278Props} {...Image278Cb} {...Image278IoProps}/>
+<Flex2 className="p-Showcase Flex620 bpt" {...Flex620Props} {...Flex620Cb} {...Flex620IoProps}>
+<Flex2 className="p-Showcase Flex619 bpt" {...Flex619Props} {...Flex619Cb} {...Flex619IoProps}>
+<Button2 className="p-Showcase Button200 bpt" {...Button200Props} {...Button200Cb} {...Button200IoProps}/>
+</Flex2>
+<Menu2 className="p-Showcase Menu7 bpt" {...Menu7Props} {...Menu7Cb} {...Menu7IoProps}>
+<Flex2 className="p-Showcase Flex618 bpt" {...Flex618Props} {...Flex618Cb} {...Flex618IoProps}>
+<TextBox2 className="p-Showcase TextBox430 bpt" {...TextBox430Props} {...TextBox430Cb} {...TextBox430IoProps}/>
+<TextBox2 className="p-Showcase TextBox431 bpt" {...TextBox431Props} {...TextBox431Cb} {...TextBox431IoProps}/>
+</Flex2>
+</Menu2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex462 bpt" {...Flex462Props} {...Flex462Cb} {...Flex462IoProps}>
+<Overlay1 className="p-Showcase Overlay3 bpt" {...Overlay3Props} {...Overlay3Cb} {...Overlay3IoProps}>
+<Flex2 className="p-Showcase Flex786 bpt" {...Flex786Props} {...Flex786Cb} {...Flex786IoProps}>
+<Flex2 className="p-Showcase Flex784 bpt" {...Flex784Props} {...Flex784Cb} {...Flex784IoProps}>
+<Flex2 className="p-Showcase Flex779 bpt" {...Flex779Props} {...Flex779Cb} {...Flex779IoProps}>
+<Flex2 className="p-Showcase Flex770 bpt" {...Flex770Props} {...Flex770Cb} {...Flex770IoProps}>
+<TextBox2 className="p-Showcase TextBox499 bpt" {...TextBox499Props} {...TextBox499Cb} {...TextBox499IoProps}/>
+<Input2 className="p-Showcase Input19 bpt" {...Input19Props} {...Input19Cb} {...Input19IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex771 bpt" {...Flex771Props} {...Flex771Cb} {...Flex771IoProps}>
+<TextBox2 className="p-Showcase TextBox500 bpt" {...TextBox500Props} {...TextBox500Cb} {...TextBox500IoProps}/>
+<Input2 className="p-Showcase Input20 bpt" {...Input20Props} {...Input20Cb} {...Input20IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex780 bpt" {...Flex780Props} {...Flex780Cb} {...Flex780IoProps}>
+<Flex2 className="p-Showcase Flex772 bpt" {...Flex772Props} {...Flex772Cb} {...Flex772IoProps}>
+<TextBox2 className="p-Showcase TextBox501 bpt" {...TextBox501Props} {...TextBox501Cb} {...TextBox501IoProps}/>
+<Input2 className="p-Showcase Input21 bpt" {...Input21Props} {...Input21Cb} {...Input21IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex773 bpt" {...Flex773Props} {...Flex773Cb} {...Flex773IoProps}>
+<TextBox2 className="p-Showcase TextBox502 bpt" {...TextBox502Props} {...TextBox502Cb} {...TextBox502IoProps}/>
+<Input2 className="p-Showcase Input22 bpt" {...Input22Props} {...Input22Cb} {...Input22IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex781 bpt" {...Flex781Props} {...Flex781Cb} {...Flex781IoProps}>
+<Flex2 className="p-Showcase Flex774 bpt" {...Flex774Props} {...Flex774Cb} {...Flex774IoProps}>
+<TextBox2 className="p-Showcase TextBox503 bpt" {...TextBox503Props} {...TextBox503Cb} {...TextBox503IoProps}/>
+<Input2 className="p-Showcase Input23 bpt" {...Input23Props} {...Input23Cb} {...Input23IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex775 bpt" {...Flex775Props} {...Flex775Cb} {...Flex775IoProps}>
+<TextBox2 className="p-Showcase TextBox505 bpt" {...TextBox505Props} {...TextBox505Cb} {...TextBox505IoProps}/>
+<Input2 className="p-Showcase Input24 bpt" {...Input24Props} {...Input24Cb} {...Input24IoProps}/>
+<TextBox2 className="p-Showcase TextBox504 bpt" {...TextBox504Props} {...TextBox504Cb} {...TextBox504IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex782 bpt" {...Flex782Props} {...Flex782Cb} {...Flex782IoProps}>
+<Flex2 className="p-Showcase Flex776 bpt" {...Flex776Props} {...Flex776Cb} {...Flex776IoProps}>
+<TextBox2 className="p-Showcase TextBox506 bpt" {...TextBox506Props} {...TextBox506Cb} {...TextBox506IoProps}/>
+<Upload1 className="p-Showcase Upload3 bpt" {...Upload3Props} {...Upload3Cb} {...Upload3IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex777 bpt" {...Flex777Props} {...Flex777Cb} {...Flex777IoProps}>
+<TextBox2 className="p-Showcase TextBox507 bpt" {...TextBox507Props} {...TextBox507Cb} {...TextBox507IoProps}/>
+<Upload1 className="p-Showcase Upload4 bpt" {...Upload4Props} {...Upload4Cb} {...Upload4IoProps}/>
+</Flex2>
+</Flex2>
+<Button2 className="p-Showcase Button235 bpt" {...Button235Props} {...Button235Cb} {...Button235IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex785 bpt" {...Flex785Props} {...Flex785Cb} {...Flex785IoProps}>
+<Flex2 className="p-Showcase Flex783 bpt" {...Flex783Props} {...Flex783Cb} {...Flex783IoProps}>
+<Image2 className="p-Showcase Image319 bpt" {...Image319Props} {...Image319Cb} {...Image319IoProps}/>
+<Flex2 className="p-Showcase Flex778 bpt" {...Flex778Props} {...Flex778Cb} {...Flex778IoProps}>
+<Image2 className="p-Showcase Image318 bpt" {...Image318Props} {...Image318Cb} {...Image318IoProps}/>
+<Flex2 className="p-Showcase Flex769 bpt" {...Flex769Props} {...Flex769Cb} {...Flex769IoProps}>
+<Flex2 className="p-Showcase Flex766 bpt" {...Flex766Props} {...Flex766Cb} {...Flex766IoProps}>
+<TextBox2 className="p-Showcase TextBox497 bpt" {...TextBox497Props} {...TextBox497Cb} {...TextBox497IoProps}/>
+<TextBox2 className="p-Showcase TextBox498 bpt" {...TextBox498Props} {...TextBox498Cb} {...TextBox498IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex767 bpt" {...Flex767Props} {...Flex767Cb} {...Flex767IoProps}>
+<Flex2 className="p-Showcase Tag_Flex_1 bpt" {...Tag_Flex_1Props} {...Tag_Flex_1Cb} {...Tag_Flex_1IoProps}>
+<Button2 className="p-Showcase Tag_1 bpt" {...Tag_1Props} {...Tag_1Cb} {...Tag_1IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Tag_Flex_2 bpt" {...Tag_Flex_2Props} {...Tag_Flex_2Cb} {...Tag_Flex_2IoProps}>
+<Button2 className="p-Showcase Tag_2 bpt" {...Tag_2Props} {...Tag_2Cb} {...Tag_2IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Tag_Flex_3 bpt" {...Tag_Flex_3Props} {...Tag_Flex_3Cb} {...Tag_Flex_3IoProps}>
+<Button2 className="p-Showcase Tag_3 bpt" {...Tag_3Props} {...Tag_3Cb} {...Tag_3IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex768 bpt" {...Flex768Props} {...Flex768Cb} {...Flex768IoProps}>
+<Flex2 className="p-Showcase Flex765 bpt" {...Flex765Props} {...Flex765Cb} {...Flex765IoProps}>
+<Image2 className="p-Showcase Image317 bpt" {...Image317Props} {...Image317Cb} {...Image317IoProps}/>
+<TextBox2 className="p-Showcase TextBox496 bpt" {...TextBox496Props} {...TextBox496Cb} {...TextBox496IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex764 bpt" {...Flex764Props} {...Flex764Cb} {...Flex764IoProps}>
+<Image2 className="p-Showcase Image315 bpt" {...Image315Props} {...Image315Cb} {...Image315IoProps}/>
+<Image2 className="p-Showcase Image316 bpt" {...Image316Props} {...Image316Cb} {...Image316IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+</Overlay1>
+<TextBox2 className="p-Showcase TextBox361 bpt" {...TextBox361Props} {...TextBox361Cb} {...TextBox361IoProps}/>
+<TextBox2 className="p-Showcase TextBox362 bpt" {...TextBox362Props} {...TextBox362Cb} {...TextBox362IoProps}/>
+<Button2 className="p-Showcase Button116 bpt" {...Button116Props} {...Button116Cb} {...Button116IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex463 bpt" {...Flex463Props} {...Flex463Cb} {...Flex463IoProps}>
+<Flex2 className="p-Showcase Flex466 bpt" {...Flex466Props} {...Flex466Cb} {...Flex466IoProps}>
+<TextBox2 className="p-Showcase TextBox363 bpt" {...TextBox363Props} {...TextBox363Cb} {...TextBox363IoProps}/>
+<TextBox2 className="p-Showcase TextBox364 bpt" {...TextBox364Props} {...TextBox364Cb} {...TextBox364IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex467 bpt" {...Flex467Props} {...Flex467Cb} {...Flex467IoProps}>
+<Flex2 className="p-Showcase Filter1 bpt" {...Filter1Props} {...Filter1Cb} {...Filter1IoProps}>
+<Button2 className="p-Showcase Filter_Btn_1 bpt" {...Filter_Btn_1Props} {...Filter_Btn_1Cb} {...Filter_Btn_1IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter2 bpt" {...Filter2Props} {...Filter2Cb} {...Filter2IoProps}>
+<Button2 className="p-Showcase Filter_Btn_2 bpt" {...Filter_Btn_2Props} {...Filter_Btn_2Cb} {...Filter_Btn_2IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter3 bpt" {...Filter3Props} {...Filter3Cb} {...Filter3IoProps}>
+<Button2 className="p-Showcase Filter_Btn_3 bpt" {...Filter_Btn_3Props} {...Filter_Btn_3Cb} {...Filter_Btn_3IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter4 bpt" {...Filter4Props} {...Filter4Cb} {...Filter4IoProps}>
+<Button2 className="p-Showcase Filter_Btn_4 bpt" {...Filter_Btn_4Props} {...Filter_Btn_4Cb} {...Filter_Btn_4IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter5 bpt" {...Filter5Props} {...Filter5Cb} {...Filter5IoProps}>
+<Button2 className="p-Showcase Filter_Btn_5 bpt" {...Filter_Btn_5Props} {...Filter_Btn_5Cb} {...Filter_Btn_5IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter6 bpt" {...Filter6Props} {...Filter6Cb} {...Filter6IoProps}>
+<Button2 className="p-Showcase Filter_Btn_6 bpt" {...Filter_Btn_6Props} {...Filter_Btn_6Cb} {...Filter_Btn_6IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter7 bpt" {...Filter7Props} {...Filter7Cb} {...Filter7IoProps}>
+<Button2 className="p-Showcase Filter_Btn_7 bpt" {...Filter_Btn_7Props} {...Filter_Btn_7Cb} {...Filter_Btn_7IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter8 bpt" {...Filter8Props} {...Filter8Cb} {...Filter8IoProps}>
+<Button2 className="p-Showcase Filter_Btn_8 bpt" {...Filter_Btn_8Props} {...Filter_Btn_8Cb} {...Filter_Btn_8IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Filter9 bpt" {...Filter9Props} {...Filter9Cb} {...Filter9IoProps}>
+<Button2 className="p-Showcase Filter_Btn_9 bpt" {...Filter_Btn_9Props} {...Filter_Btn_9Cb} {...Filter_Btn_9IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex468 bpt" {...Flex468Props} {...Flex468Cb} {...Flex468IoProps}>
+<Flex2 className="p-Showcase Flex469 bpt" {...Flex469Props} {...Flex469Cb} {...Flex469IoProps}>
+<Flex2 className="p-Showcase Card_1 bpt" {...Card_1Props} {...Card_1Cb} {...Card_1IoProps}>
+<Image2 className="p-Showcase Card_Image_1 bpt" {...Card_Image_1Props} {...Card_Image_1Cb} {...Card_Image_1IoProps}/>
+<Flex2 className="p-Showcase Flex481 bpt" {...Flex481Props} {...Flex481Cb} {...Flex481IoProps}>
+<Flex2 className="p-Showcase Flex482 bpt" {...Flex482Props} {...Flex482Cb} {...Flex482IoProps}>
+<TextBox2 className="p-Showcase Card_Title_1 bpt" {...Card_Title_1Props} {...Card_Title_1Cb} {...Card_Title_1IoProps}/>
+<TextBox2 className="p-Showcase Card_Text_1 bpt" {...Card_Text_1Props} {...Card_Text_1Cb} {...Card_Text_1IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex483 bpt" {...Flex483Props} {...Flex483Cb} {...Flex483IoProps}>
+<Flex2 className="p-Showcase Card_Tag_1_a bpt" {...Card_Tag_1_aProps} {...Card_Tag_1_aCb} {...Card_Tag_1_aIoProps}>
+<Button2 className="p-Showcase Card_Tag_1_a_Text bpt" {...Card_Tag_1_a_TextProps} {...Card_Tag_1_a_TextCb} {...Card_Tag_1_a_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_1_b bpt" {...Card_Tag_1_bProps} {...Card_Tag_1_bCb} {...Card_Tag_1_bIoProps}>
+<Button2 className="p-Showcase Card_Tag_1_b_Text bpt" {...Card_Tag_1_b_TextProps} {...Card_Tag_1_b_TextCb} {...Card_Tag_1_b_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_1_c bpt" {...Card_Tag_1_cProps} {...Card_Tag_1_cCb} {...Card_Tag_1_cIoProps}>
+<Button2 className="p-Showcase Card_Tag_1_c_Text bpt" {...Card_Tag_1_c_TextProps} {...Card_Tag_1_c_TextCb} {...Card_Tag_1_c_TextIoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex484 bpt" {...Flex484Props} {...Flex484Cb} {...Flex484IoProps}>
+<Flex2 className="p-Showcase Flex486 bpt" {...Flex486Props} {...Flex486Cb} {...Flex486IoProps}>
+<Image2 className="p-Showcase Card_Creator_Image_1 bpt" {...Card_Creator_Image_1Props} {...Card_Creator_Image_1Cb} {...Card_Creator_Image_1IoProps}/>
+<TextBox2 className="p-Showcase Card_Creator_Name_1 bpt" {...Card_Creator_Name_1Props} {...Card_Creator_Name_1Cb} {...Card_Creator_Name_1IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex485 bpt" {...Flex485Props} {...Flex485Cb} {...Flex485IoProps}>
+<Image2 className="p-Showcase Card_Github_1 bpt" {...Card_Github_1Props} {...Card_Github_1Cb} {...Card_Github_1IoProps}/>
+<Image2 className="p-Showcase Card_Deploy_1 bpt" {...Card_Deploy_1Props} {...Card_Deploy_1Cb} {...Card_Deploy_1IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Card_2 bpt" {...Card_2Props} {...Card_2Cb} {...Card_2IoProps}>
+<Image2 className="p-Showcase Card_Image_2 bpt" {...Card_Image_2Props} {...Card_Image_2Cb} {...Card_Image_2IoProps}/>
+<Flex2 className="p-Showcase Flex528 bpt" {...Flex528Props} {...Flex528Cb} {...Flex528IoProps}>
+<Flex2 className="p-Showcase Flex527 bpt" {...Flex527Props} {...Flex527Cb} {...Flex527IoProps}>
+<TextBox2 className="p-Showcase Card_Title_2 bpt" {...Card_Title_2Props} {...Card_Title_2Cb} {...Card_Title_2IoProps}/>
+<TextBox2 className="p-Showcase Card_Text_2 bpt" {...Card_Text_2Props} {...Card_Text_2Cb} {...Card_Text_2IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex657 bpt" {...Flex657Props} {...Flex657Cb} {...Flex657IoProps}>
+<Flex2 className="p-Showcase Card_Tag_2_a bpt" {...Card_Tag_2_aProps} {...Card_Tag_2_aCb} {...Card_Tag_2_aIoProps}>
+<Button2 className="p-Showcase Card_Tag_2_a_Text bpt" {...Card_Tag_2_a_TextProps} {...Card_Tag_2_a_TextCb} {...Card_Tag_2_a_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_2_b bpt" {...Card_Tag_2_bProps} {...Card_Tag_2_bCb} {...Card_Tag_2_bIoProps}>
+<Button2 className="p-Showcase Card_Tag_2_b_Text bpt" {...Card_Tag_2_b_TextProps} {...Card_Tag_2_b_TextCb} {...Card_Tag_2_b_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_2_c bpt" {...Card_Tag_2_cProps} {...Card_Tag_2_cCb} {...Card_Tag_2_cIoProps}>
+<Button2 className="p-Showcase Card_Tag_2_c_Text bpt" {...Card_Tag_2_c_TextProps} {...Card_Tag_2_c_TextCb} {...Card_Tag_2_c_TextIoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex525 bpt" {...Flex525Props} {...Flex525Cb} {...Flex525IoProps}>
+<Flex2 className="p-Showcase Flex523 bpt" {...Flex523Props} {...Flex523Cb} {...Flex523IoProps}>
+<Image2 className="p-Showcase Card_Creator_Image_2 bpt" {...Card_Creator_Image_2Props} {...Card_Creator_Image_2Cb} {...Card_Creator_Image_2IoProps}/>
+<TextBox2 className="p-Showcase Card_Creator_Name_2 bpt" {...Card_Creator_Name_2Props} {...Card_Creator_Name_2Cb} {...Card_Creator_Name_2IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex524 bpt" {...Flex524Props} {...Flex524Cb} {...Flex524IoProps}>
+<Image2 className="p-Showcase Card_Github_2 bpt" {...Card_Github_2Props} {...Card_Github_2Cb} {...Card_Github_2IoProps}/>
+<Image2 className="p-Showcase Card_Deploy_2 bpt" {...Card_Deploy_2Props} {...Card_Deploy_2Cb} {...Card_Deploy_2IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Card_3 bpt" {...Card_3Props} {...Card_3Cb} {...Card_3IoProps}>
+<Image2 className="p-Showcase Card_Image_3 bpt" {...Card_Image_3Props} {...Card_Image_3Cb} {...Card_Image_3IoProps}/>
+<Flex2 className="p-Showcase Flex535 bpt" {...Flex535Props} {...Flex535Cb} {...Flex535IoProps}>
+<Flex2 className="p-Showcase Flex532 bpt" {...Flex532Props} {...Flex532Cb} {...Flex532IoProps}>
+<TextBox2 className="p-Showcase Card_Title_3 bpt" {...Card_Title_3Props} {...Card_Title_3Cb} {...Card_Title_3IoProps}/>
+<TextBox2 className="p-Showcase Card_Text_3 bpt" {...Card_Text_3Props} {...Card_Text_3Cb} {...Card_Text_3IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex661 bpt" {...Flex661Props} {...Flex661Cb} {...Flex661IoProps}>
+<Flex2 className="p-Showcase Card_Tag_3_a bpt" {...Card_Tag_3_aProps} {...Card_Tag_3_aCb} {...Card_Tag_3_aIoProps}>
+<Button2 className="p-Showcase Card_Tag_3_a_Text bpt" {...Card_Tag_3_a_TextProps} {...Card_Tag_3_a_TextCb} {...Card_Tag_3_a_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_3_b bpt" {...Card_Tag_3_bProps} {...Card_Tag_3_bCb} {...Card_Tag_3_bIoProps}>
+<Button2 className="p-Showcase Card_Tag_3_b_Text bpt" {...Card_Tag_3_b_TextProps} {...Card_Tag_3_b_TextCb} {...Card_Tag_3_b_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_3_c bpt" {...Card_Tag_3_cProps} {...Card_Tag_3_cCb} {...Card_Tag_3_cIoProps}>
+<Button2 className="p-Showcase Card_Tag_3_c_Text bpt" {...Card_Tag_3_c_TextProps} {...Card_Tag_3_c_TextCb} {...Card_Tag_3_c_TextIoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex534 bpt" {...Flex534Props} {...Flex534Cb} {...Flex534IoProps}>
+<Flex2 className="p-Showcase Flex531 bpt" {...Flex531Props} {...Flex531Cb} {...Flex531IoProps}>
+<Image2 className="p-Showcase Card_Creator_Image_3 bpt" {...Card_Creator_Image_3Props} {...Card_Creator_Image_3Cb} {...Card_Creator_Image_3IoProps}/>
+<TextBox2 className="p-Showcase Card_Creator_Name_3 bpt" {...Card_Creator_Name_3Props} {...Card_Creator_Name_3Cb} {...Card_Creator_Name_3IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex530 bpt" {...Flex530Props} {...Flex530Cb} {...Flex530IoProps}>
+<Image2 className="p-Showcase Card_Github_3 bpt" {...Card_Github_3Props} {...Card_Github_3Cb} {...Card_Github_3IoProps}/>
+<Image2 className="p-Showcase Card_Deploy_3 bpt" {...Card_Deploy_3Props} {...Card_Deploy_3Cb} {...Card_Deploy_3IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex646 bpt" {...Flex646Props} {...Flex646Cb} {...Flex646IoProps}>
+<Flex2 className="p-Showcase Card_4 bpt" {...Card_4Props} {...Card_4Cb} {...Card_4IoProps}>
+<Image2 className="p-Showcase Card_Image_4 bpt" {...Card_Image_4Props} {...Card_Image_4Cb} {...Card_Image_4IoProps}/>
+<Flex2 className="p-Showcase Flex642 bpt" {...Flex642Props} {...Flex642Cb} {...Flex642IoProps}>
+<Flex2 className="p-Showcase Flex639 bpt" {...Flex639Props} {...Flex639Cb} {...Flex639IoProps}>
+<TextBox2 className="p-Showcase Card_Title_4 bpt" {...Card_Title_4Props} {...Card_Title_4Cb} {...Card_Title_4IoProps}/>
+<TextBox2 className="p-Showcase Card_Text_4 bpt" {...Card_Text_4Props} {...Card_Text_4Cb} {...Card_Text_4IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex665 bpt" {...Flex665Props} {...Flex665Cb} {...Flex665IoProps}>
+<Flex2 className="p-Showcase Card_Tag_4_a bpt" {...Card_Tag_4_aProps} {...Card_Tag_4_aCb} {...Card_Tag_4_aIoProps}>
+<Button2 className="p-Showcase Card_Tag_4_a_Text bpt" {...Card_Tag_4_a_TextProps} {...Card_Tag_4_a_TextCb} {...Card_Tag_4_a_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_4_b bpt" {...Card_Tag_4_bProps} {...Card_Tag_4_bCb} {...Card_Tag_4_bIoProps}>
+<Button2 className="p-Showcase Card_Tag_4_b_Text bpt" {...Card_Tag_4_b_TextProps} {...Card_Tag_4_b_TextCb} {...Card_Tag_4_b_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_4_c bpt" {...Card_Tag_4_cProps} {...Card_Tag_4_cCb} {...Card_Tag_4_cIoProps}>
+<Button2 className="p-Showcase Card_Tag_4_c_Text bpt" {...Card_Tag_4_c_TextProps} {...Card_Tag_4_c_TextCb} {...Card_Tag_4_c_TextIoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex637 bpt" {...Flex637Props} {...Flex637Cb} {...Flex637IoProps}>
+<Flex2 className="p-Showcase Flex629 bpt" {...Flex629Props} {...Flex629Cb} {...Flex629IoProps}>
+<Image2 className="p-Showcase Card_Creator_Image_4 bpt" {...Card_Creator_Image_4Props} {...Card_Creator_Image_4Cb} {...Card_Creator_Image_4IoProps}/>
+<TextBox2 className="p-Showcase Card_Creator_Name_4 bpt" {...Card_Creator_Name_4Props} {...Card_Creator_Name_4Cb} {...Card_Creator_Name_4IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex630 bpt" {...Flex630Props} {...Flex630Cb} {...Flex630IoProps}>
+<Image2 className="p-Showcase Card_Github_4 bpt" {...Card_Github_4Props} {...Card_Github_4Cb} {...Card_Github_4IoProps}/>
+<Image2 className="p-Showcase Card_Deploy_4 bpt" {...Card_Deploy_4Props} {...Card_Deploy_4Cb} {...Card_Deploy_4IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Card_5 bpt" {...Card_5Props} {...Card_5Cb} {...Card_5IoProps}>
+<Image2 className="p-Showcase Card_Image_5 bpt" {...Card_Image_5Props} {...Card_Image_5Cb} {...Card_Image_5IoProps}/>
+<Flex2 className="p-Showcase Flex641 bpt" {...Flex641Props} {...Flex641Cb} {...Flex641IoProps}>
+<Flex2 className="p-Showcase Flex635 bpt" {...Flex635Props} {...Flex635Cb} {...Flex635IoProps}>
+<TextBox2 className="p-Showcase Card_Title_5 bpt" {...Card_Title_5Props} {...Card_Title_5Cb} {...Card_Title_5IoProps}/>
+<TextBox2 className="p-Showcase Card_Text_5 bpt" {...Card_Text_5Props} {...Card_Text_5Cb} {...Card_Text_5IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex669 bpt" {...Flex669Props} {...Flex669Cb} {...Flex669IoProps}>
+<Flex2 className="p-Showcase Card_Tag_5_a bpt" {...Card_Tag_5_aProps} {...Card_Tag_5_aCb} {...Card_Tag_5_aIoProps}>
+<Button2 className="p-Showcase Card_Tag_5_a_Text bpt" {...Card_Tag_5_a_TextProps} {...Card_Tag_5_a_TextCb} {...Card_Tag_5_a_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_5_b bpt" {...Card_Tag_5_bProps} {...Card_Tag_5_bCb} {...Card_Tag_5_bIoProps}>
+<Button2 className="p-Showcase Card_Tag_5_b_Text bpt" {...Card_Tag_5_b_TextProps} {...Card_Tag_5_b_TextCb} {...Card_Tag_5_b_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_5_c bpt" {...Card_Tag_5_cProps} {...Card_Tag_5_cCb} {...Card_Tag_5_cIoProps}>
+<Button2 className="p-Showcase Card_Tag_5_c_Text bpt" {...Card_Tag_5_c_TextProps} {...Card_Tag_5_c_TextCb} {...Card_Tag_5_c_TextIoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex636 bpt" {...Flex636Props} {...Flex636Cb} {...Flex636IoProps}>
+<Flex2 className="p-Showcase Flex628 bpt" {...Flex628Props} {...Flex628Cb} {...Flex628IoProps}>
+<Image2 className="p-Showcase Card_Creator_Image_5 bpt" {...Card_Creator_Image_5Props} {...Card_Creator_Image_5Cb} {...Card_Creator_Image_5IoProps}/>
+<TextBox2 className="p-Showcase Card_Creator_Name_5 bpt" {...Card_Creator_Name_5Props} {...Card_Creator_Name_5Cb} {...Card_Creator_Name_5IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex627 bpt" {...Flex627Props} {...Flex627Cb} {...Flex627IoProps}>
+<Image2 className="p-Showcase Card_Github_5 bpt" {...Card_Github_5Props} {...Card_Github_5Cb} {...Card_Github_5IoProps}/>
+<Image2 className="p-Showcase Card_Deploy_5 bpt" {...Card_Deploy_5Props} {...Card_Deploy_5Cb} {...Card_Deploy_5IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Card_6 bpt" {...Card_6Props} {...Card_6Cb} {...Card_6IoProps}>
+<Image2 className="p-Showcase Card_Image_6 bpt" {...Card_Image_6Props} {...Card_Image_6Cb} {...Card_Image_6IoProps}/>
+<Flex2 className="p-Showcase Flex640 bpt" {...Flex640Props} {...Flex640Cb} {...Flex640IoProps}>
+<Flex2 className="p-Showcase Flex633 bpt" {...Flex633Props} {...Flex633Cb} {...Flex633IoProps}>
+<TextBox2 className="p-Showcase Card_Title_6 bpt" {...Card_Title_6Props} {...Card_Title_6Cb} {...Card_Title_6IoProps}/>
+<TextBox2 className="p-Showcase Card_Text_6 bpt" {...Card_Text_6Props} {...Card_Text_6Cb} {...Card_Text_6IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex673 bpt" {...Flex673Props} {...Flex673Cb} {...Flex673IoProps}>
+<Flex2 className="p-Showcase Card_Tag_6_a bpt" {...Card_Tag_6_aProps} {...Card_Tag_6_aCb} {...Card_Tag_6_aIoProps}>
+<Button2 className="p-Showcase Card_Tag_6_a_Text bpt" {...Card_Tag_6_a_TextProps} {...Card_Tag_6_a_TextCb} {...Card_Tag_6_a_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_6_b bpt" {...Card_Tag_6_bProps} {...Card_Tag_6_bCb} {...Card_Tag_6_bIoProps}>
+<Button2 className="p-Showcase Card_Tag_6_b_Text bpt" {...Card_Tag_6_b_TextProps} {...Card_Tag_6_b_TextCb} {...Card_Tag_6_b_TextIoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Card_Tag_6_c bpt" {...Card_Tag_6_cProps} {...Card_Tag_6_cCb} {...Card_Tag_6_cIoProps}>
+<Button2 className="p-Showcase Card_Tag_6_c_Text bpt" {...Card_Tag_6_c_TextProps} {...Card_Tag_6_c_TextCb} {...Card_Tag_6_c_TextIoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex632 bpt" {...Flex632Props} {...Flex632Cb} {...Flex632IoProps}>
+<Flex2 className="p-Showcase Flex625 bpt" {...Flex625Props} {...Flex625Cb} {...Flex625IoProps}>
+<Image2 className="p-Showcase Card_Creator_Image_6 bpt" {...Card_Creator_Image_6Props} {...Card_Creator_Image_6Cb} {...Card_Creator_Image_6IoProps}/>
+<TextBox2 className="p-Showcase Card_Creator_Name_6 bpt" {...Card_Creator_Name_6Props} {...Card_Creator_Name_6Cb} {...Card_Creator_Name_6IoProps}/>
+</Flex2>
+<Flex2 className="p-Showcase Flex626 bpt" {...Flex626Props} {...Flex626Cb} {...Flex626IoProps}>
+<Image2 className="p-Showcase Card_Github_6 bpt" {...Card_Github_6Props} {...Card_Github_6Cb} {...Card_Github_6IoProps}/>
+<Image2 className="p-Showcase Card_Deploy_6 bpt" {...Card_Deploy_6Props} {...Card_Deploy_6Cb} {...Card_Deploy_6IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex674 bpt" {...Flex674Props} {...Flex674Cb} {...Flex674IoProps}>
+<Flex2 className="p-Showcase Flex675 bpt" {...Flex675Props} {...Flex675Cb} {...Flex675IoProps}>
+<Image2 className="p-Showcase Image303 bpt" {...Image303Props} {...Image303Cb} {...Image303IoProps}/>
+<Flex2 className="p-Showcase Flex706 bpt" {...Flex706Props} {...Flex706Cb} {...Flex706IoProps}>
+<TextBox2 className="p-Showcase TextBox453 bpt" {...TextBox453Props} {...TextBox453Cb} {...TextBox453IoProps}/>
+</Flex2>
+<TextBox2 className="p-Showcase TextBox474 bpt" {...TextBox474Props} {...TextBox474Cb} {...TextBox474IoProps}/>
+<Image2 className="p-Showcase Image304 bpt" {...Image304Props} {...Image304Cb} {...Image304IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex705 bpt" {...Flex705Props} {...Flex705Cb} {...Flex705IoProps}>
+<Flex2 className="p-Showcase Flex704 bpt" {...Flex704Props} {...Flex704Cb} {...Flex704IoProps}>
+<Flex2 className="p-Showcase Flex700 bpt" {...Flex700Props} {...Flex700Cb} {...Flex700IoProps}>
+<Flex2 className="p-Showcase Flex693 bpt" {...Flex693Props} {...Flex693Cb} {...Flex693IoProps}>
+<Flex2 className="p-Showcase Flex687 bpt" {...Flex687Props} {...Flex687Cb} {...Flex687IoProps}>
+<Flex2 className="p-Showcase Flex686 bpt" {...Flex686Props} {...Flex686Cb} {...Flex686IoProps}>
+<Flex2 className="p-Showcase Flex685 bpt" {...Flex685Props} {...Flex685Cb} {...Flex685IoProps}>
+<Image2 className="p-Showcase Image294 bpt" {...Image294Props} {...Image294Cb} {...Image294IoProps}/>
+<TextBox2 className="p-Showcase TextBox455 bpt" {...TextBox455Props} {...TextBox455Cb} {...TextBox455IoProps}/>
+</Flex2>
+<Image2 className="p-Showcase Image295 bpt" {...Image295Props} {...Image295Cb} {...Image295IoProps}/>
+</Flex2>
+<TextBox2 className="p-Showcase TextBox456 bpt" {...TextBox456Props} {...TextBox456Cb} {...TextBox456IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex694 bpt" {...Flex694Props} {...Flex694Cb} {...Flex694IoProps}>
+<Image2 className="p-Showcase Image299 bpt" {...Image299Props} {...Image299Cb} {...Image299IoProps}/>
+<Image2 className="p-Showcase Image298 bpt" {...Image298Props} {...Image298Cb} {...Image298IoProps}/>
+<Image2 className="p-Showcase Image297 bpt" {...Image297Props} {...Image297Cb} {...Image297IoProps}/>
+<Image2 className="p-Showcase Image296 bpt" {...Image296Props} {...Image296Cb} {...Image296IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex701 bpt" {...Flex701Props} {...Flex701Cb} {...Flex701IoProps}>
+<Flex2 className="p-Showcase Flex697 bpt" {...Flex697Props} {...Flex697Cb} {...Flex697IoProps}>
+<TextBox2 className="p-Showcase TextBox470 bpt" {...TextBox470Props} {...TextBox470Cb} {...TextBox470IoProps}/>
+<Flex2 className="p-Showcase Flex690 bpt" {...Flex690Props} {...Flex690Cb} {...Flex690IoProps}>
+<TextBox2 className="p-Showcase TextBox463 bpt" {...TextBox463Props} {...TextBox463Cb} {...TextBox463IoProps}/>
+<TextBox2 className="p-Showcase TextBox462 bpt" {...TextBox462Props} {...TextBox462Cb} {...TextBox462IoProps}/>
+<TextBox2 className="p-Showcase TextBox461 bpt" {...TextBox461Props} {...TextBox461Cb} {...TextBox461IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex696 bpt" {...Flex696Props} {...Flex696Cb} {...Flex696IoProps}>
+<TextBox2 className="p-Showcase TextBox469 bpt" {...TextBox469Props} {...TextBox469Cb} {...TextBox469IoProps}/>
+<Flex2 className="p-Showcase Flex689 bpt" {...Flex689Props} {...Flex689Cb} {...Flex689IoProps}>
+<TextBox2 className="p-Showcase TextBox458 bpt" {...TextBox458Props} {...TextBox458Cb} {...TextBox458IoProps}/>
+<TextBox2 className="p-Showcase TextBox460 bpt" {...TextBox460Props} {...TextBox460Cb} {...TextBox460IoProps}/>
+<TextBox2 className="p-Showcase TextBox459 bpt" {...TextBox459Props} {...TextBox459Cb} {...TextBox459IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex698 bpt" {...Flex698Props} {...Flex698Cb} {...Flex698IoProps}>
+<TextBox2 className="p-Showcase TextBox471 bpt" {...TextBox471Props} {...TextBox471Cb} {...TextBox471IoProps}/>
+<Flex2 className="p-Showcase Flex691 bpt" {...Flex691Props} {...Flex691Cb} {...Flex691IoProps}>
+<TextBox2 className="p-Showcase TextBox464 bpt" {...TextBox464Props} {...TextBox464Cb} {...TextBox464IoProps}/>
+<TextBox2 className="p-Showcase TextBox465 bpt" {...TextBox465Props} {...TextBox465Cb} {...TextBox465IoProps}/>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex695 bpt" {...Flex695Props} {...Flex695Cb} {...Flex695IoProps}>
+<TextBox2 className="p-Showcase TextBox468 bpt" {...TextBox468Props} {...TextBox468Cb} {...TextBox468IoProps}/>
+<Flex2 className="p-Showcase Flex688 bpt" {...Flex688Props} {...Flex688Cb} {...Flex688IoProps}>
+<TextBox2 className="p-Showcase TextBox457 bpt" {...TextBox457Props} {...TextBox457Cb} {...TextBox457IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex703 bpt" {...Flex703Props} {...Flex703Cb} {...Flex703IoProps}>
+<Flex2 className="p-Showcase Flex699 bpt" {...Flex699Props} {...Flex699Cb} {...Flex699IoProps}>
+<TextBox2 className="p-Showcase TextBox472 bpt" {...TextBox472Props} {...TextBox472Cb} {...TextBox472IoProps}/>
+<Flex2 className="p-Showcase Flex692 bpt" {...Flex692Props} {...Flex692Cb} {...Flex692IoProps}>
+<TextBox2 className="p-Showcase TextBox467 bpt" {...TextBox467Props} {...TextBox467Cb} {...TextBox467IoProps}/>
+<TextBox2 className="p-Showcase TextBox466 bpt" {...TextBox466Props} {...TextBox466Cb} {...TextBox466IoProps}/>
+</Flex2>
+</Flex2>
+</Flex2>
+<Flex2 className="p-Showcase Flex702 bpt" {...Flex702Props} {...Flex702Cb} {...Flex702IoProps}>
+<Image2 className="p-Showcase Image300 bpt" {...Image300Props} {...Image300Cb} {...Image300IoProps}/>
+</Flex2>
+</Flex2>
+  </>);
+}
diff --git a/atri_app/app/src/pages/Trial.jsx b/atri_app/app/src/pages/Trial.jsx
new file mode 100644
index 0000000..2d82272
--- /dev/null
+++ b/atri_app/app/src/pages/Trial.jsx
@@ -0,0 +1,829 @@
+import { useLayoutEffect, useEffect } from "react";
+import useStore, { updateStoreStateFromController } from "../hooks/useStore";
+import useIoStore from "../hooks/useIoStore";
+import { useNavigate, useLocation } from "react-router-dom";
+import { subscribeInternalNavigation } from "../utils/navigate";
+import {fetchPageProps} from "../utils/fetchPageProps"
+import { Flex as Flex1 } from "@atrilabs/react-component-manifests/src/manifests/Flex/Flex.tsx";
+import { Menu as Menu1 } from "@atrilabs/react-component-manifests/src/manifests/Menu/Menu.tsx";
+import { Overlay } from "@atrilabs/react-component-manifests/src/manifests/Overlay/Overlay.tsx";
+import { Image as Image1 } from "@atrilabs/react-component-manifests/src/manifests/Image/Image.tsx";
+import { TextBox as TextBox1 } from "@atrilabs/react-component-manifests/src/manifests/TextBox/TextBox.tsx";
+import { Button as Button1 } from "@atrilabs/react-component-manifests/src/manifests/Button/Button.tsx";
+import { Upload } from "@atrilabs/react-component-manifests/src/manifests/Upload/Upload.tsx";
+import { Input as Input1 } from "@atrilabs/react-component-manifests/src/manifests/Input/Input.tsx";
+import { useFlex115Cb, useFlex113Cb, useFlex106Cb, useFlex99Cb, useFlex100Cb, useFlex107Cb, useFlex101Cb, useFlex102Cb, useFlex108Cb, useFlex114Cb, useFlex109Cb, useFlex103Cb, useFlex110Cb, useMenu2Cb, useFlex98Cb, useFlex104Cb, useFlex111Cb, useFlex105Cb, useFlex112Cb, useOverlay2Cb, useFlex712Cb, useFlex710Cb, useFlex722Cb, useFlex760Cb, useFlex759Cb, useFlex756Cb, useFlex751Cb, useFlex752Cb, useFlex757Cb, useFlex753Cb, useFlex754Cb, useFlex755Cb, useFlex758Cb, useFlex711Cb, useFlex738Cb, useFlex736Cb, useFlex737Cb, useFlex741Cb, useFlex739Cb, useFlex740Cb, useFlex744Cb, useFlex742Cb, useFlex743Cb, useFlex747Cb, useFlex745Cb, useFlex746Cb, useFlex136Cb, useFlex133Cb, useFlex129Cb, useFlex121Cb, useFlex134Cb, useFlex130Cb, useFlex122Cb, useFlex135Cb, useFlex131Cb, useFlex123Cb, useFlex124Cb, useFlex116Cb, useFlex132Cb, useFlex125Cb, useFlex117Cb, useFlex126Cb, useFlex118Cb, useFlex127Cb, useFlex119Cb, useFlex128Cb, useFlex120Cb, useFlex152Cb, useFlex150Cb, useFlex147Cb, useFlex143Cb, useFlex139Cb, useFlex144Cb, useFlex140Cb, useFlex148Cb, useFlex145Cb, useFlex141Cb, useFlex137Cb, useFlex146Cb, useFlex142Cb, useFlex138Cb, useFlex151Cb, useFlex149Cb, useImage29Cb, useImage26Cb, useTextBox107Cb, useTextBox108Cb, useTextBox109Cb, useTextBox110Cb, useTextBox111Cb, useTextBox112Cb, useTextBox113Cb, useTextBox116Cb, useTextBox117Cb, useTextBox114Cb, useTextBox115Cb, useTextBox103Cb, useTextBox104Cb, useTextBox105Cb, useTextBox106Cb, useButton7Cb, useImage27Cb, useTextBox118Cb, useImage28Cb, useImage314Cb, useImage313Cb, useTextBox493Cb, useImage310Cb, useImage311Cb, useImage312Cb, useButton229Cb, useButton230Cb, useButton231Cb, useTextBox494Cb, useTextBox495Cb, useButton228Cb, useTextBox482Cb, useUpload2Cb, useTextBox483Cb, useUpload1Cb, useTextBox484Cb, useInput11Cb, useTextBox492Cb, useInput12Cb, useTextBox485Cb, useTextBox486Cb, useInput13Cb, useInput14Cb, useTextBox487Cb, useTextBox488Cb, useInput15Cb, useInput16Cb, useTextBox489Cb, useButton8Cb, useTextBox138Cb, useTextBox129Cb, useTextBox130Cb, useTextBox139Cb, useTextBox131Cb, useTextBox132Cb, useImage31Cb, useImage32Cb, useImage33Cb, useImage34Cb, useImage35Cb, useTextBox133Cb, useImage30Cb, useTextBox119Cb, useTextBox134Cb, useTextBox120Cb, useTextBox135Cb, useTextBox121Cb, useTextBox122Cb, useTextBox123Cb, useTextBox136Cb, useTextBox124Cb, useTextBox125Cb, useTextBox126Cb, useTextBox137Cb, useTextBox127Cb, useTextBox128Cb, useTextBox151Cb, useTextBox145Cb, useTextBox146Cb, useTextBox147Cb, useTextBox152Cb, useTextBox148Cb, useTextBox149Cb, useTextBox140Cb, useTextBox141Cb, useTextBox150Cb, useTextBox142Cb, useTextBox143Cb, useTextBox144Cb, useTextBox154Cb, useImage36Cb, useTextBox153Cb } from "../page-cbs/trial";
+import "../page-css/trial.css";
+import "../custom/trial";
+
+export default function Trial() {
+  const navigate = useNavigate();
+  useEffect(() => {
+    const unsub = subscribeInternalNavigation((url) => {
+      navigate(url);
+    });
+    return unsub;
+  }, [navigate]);
+
+  const location = useLocation();
+  useLayoutEffect(()=>{
+    fetchPageProps(location.pathname, location.search).then((res)=>{
+      updateStoreStateFromController(res.pageName, res.pageState)
+    })
+  }, [location])
+
+  const Flex115Props = useStore((state)=>state["trial"]["Flex115"]);
+const Flex115IoProps = useIoStore((state)=>state["trial"]["Flex115"]);
+const Flex115Cb = useFlex115Cb()
+const Flex113Props = useStore((state)=>state["trial"]["Flex113"]);
+const Flex113IoProps = useIoStore((state)=>state["trial"]["Flex113"]);
+const Flex113Cb = useFlex113Cb()
+const Flex106Props = useStore((state)=>state["trial"]["Flex106"]);
+const Flex106IoProps = useIoStore((state)=>state["trial"]["Flex106"]);
+const Flex106Cb = useFlex106Cb()
+const Flex99Props = useStore((state)=>state["trial"]["Flex99"]);
+const Flex99IoProps = useIoStore((state)=>state["trial"]["Flex99"]);
+const Flex99Cb = useFlex99Cb()
+const Flex100Props = useStore((state)=>state["trial"]["Flex100"]);
+const Flex100IoProps = useIoStore((state)=>state["trial"]["Flex100"]);
+const Flex100Cb = useFlex100Cb()
+const Flex107Props = useStore((state)=>state["trial"]["Flex107"]);
+const Flex107IoProps = useIoStore((state)=>state["trial"]["Flex107"]);
+const Flex107Cb = useFlex107Cb()
+const Flex101Props = useStore((state)=>state["trial"]["Flex101"]);
+const Flex101IoProps = useIoStore((state)=>state["trial"]["Flex101"]);
+const Flex101Cb = useFlex101Cb()
+const Flex102Props = useStore((state)=>state["trial"]["Flex102"]);
+const Flex102IoProps = useIoStore((state)=>state["trial"]["Flex102"]);
+const Flex102Cb = useFlex102Cb()
+const Flex108Props = useStore((state)=>state["trial"]["Flex108"]);
+const Flex108IoProps = useIoStore((state)=>state["trial"]["Flex108"]);
+const Flex108Cb = useFlex108Cb()
+const Flex114Props = useStore((state)=>state["trial"]["Flex114"]);
+const Flex114IoProps = useIoStore((state)=>state["trial"]["Flex114"]);
+const Flex114Cb = useFlex114Cb()
+const Flex109Props = useStore((state)=>state["trial"]["Flex109"]);
+const Flex109IoProps = useIoStore((state)=>state["trial"]["Flex109"]);
+const Flex109Cb = useFlex109Cb()
+const Flex103Props = useStore((state)=>state["trial"]["Flex103"]);
+const Flex103IoProps = useIoStore((state)=>state["trial"]["Flex103"]);
+const Flex103Cb = useFlex103Cb()
+const Flex110Props = useStore((state)=>state["trial"]["Flex110"]);
+const Flex110IoProps = useIoStore((state)=>state["trial"]["Flex110"]);
+const Flex110Cb = useFlex110Cb()
+const Menu2Props = useStore((state)=>state["trial"]["Menu2"]);
+const Menu2IoProps = useIoStore((state)=>state["trial"]["Menu2"]);
+const Menu2Cb = useMenu2Cb()
+const Flex98Props = useStore((state)=>state["trial"]["Flex98"]);
+const Flex98IoProps = useIoStore((state)=>state["trial"]["Flex98"]);
+const Flex98Cb = useFlex98Cb()
+const Flex104Props = useStore((state)=>state["trial"]["Flex104"]);
+const Flex104IoProps = useIoStore((state)=>state["trial"]["Flex104"]);
+const Flex104Cb = useFlex104Cb()
+const Flex111Props = useStore((state)=>state["trial"]["Flex111"]);
+const Flex111IoProps = useIoStore((state)=>state["trial"]["Flex111"]);
+const Flex111Cb = useFlex111Cb()
+const Flex105Props = useStore((state)=>state["trial"]["Flex105"]);
+const Flex105IoProps = useIoStore((state)=>state["trial"]["Flex105"]);
+const Flex105Cb = useFlex105Cb()
+const Flex112Props = useStore((state)=>state["trial"]["Flex112"]);
+const Flex112IoProps = useIoStore((state)=>state["trial"]["Flex112"]);
+const Flex112Cb = useFlex112Cb()
+const Overlay2Props = useStore((state)=>state["trial"]["Overlay2"]);
+const Overlay2IoProps = useIoStore((state)=>state["trial"]["Overlay2"]);
+const Overlay2Cb = useOverlay2Cb()
+const Flex712Props = useStore((state)=>state["trial"]["Flex712"]);
+const Flex712IoProps = useIoStore((state)=>state["trial"]["Flex712"]);
+const Flex712Cb = useFlex712Cb()
+const Flex710Props = useStore((state)=>state["trial"]["Flex710"]);
+const Flex710IoProps = useIoStore((state)=>state["trial"]["Flex710"]);
+const Flex710Cb = useFlex710Cb()
+const Flex722Props = useStore((state)=>state["trial"]["Flex722"]);
+const Flex722IoProps = useIoStore((state)=>state["trial"]["Flex722"]);
+const Flex722Cb = useFlex722Cb()
+const Flex760Props = useStore((state)=>state["trial"]["Flex760"]);
+const Flex760IoProps = useIoStore((state)=>state["trial"]["Flex760"]);
+const Flex760Cb = useFlex760Cb()
+const Flex759Props = useStore((state)=>state["trial"]["Flex759"]);
+const Flex759IoProps = useIoStore((state)=>state["trial"]["Flex759"]);
+const Flex759Cb = useFlex759Cb()
+const Flex756Props = useStore((state)=>state["trial"]["Flex756"]);
+const Flex756IoProps = useIoStore((state)=>state["trial"]["Flex756"]);
+const Flex756Cb = useFlex756Cb()
+const Flex751Props = useStore((state)=>state["trial"]["Flex751"]);
+const Flex751IoProps = useIoStore((state)=>state["trial"]["Flex751"]);
+const Flex751Cb = useFlex751Cb()
+const Flex752Props = useStore((state)=>state["trial"]["Flex752"]);
+const Flex752IoProps = useIoStore((state)=>state["trial"]["Flex752"]);
+const Flex752Cb = useFlex752Cb()
+const Flex757Props = useStore((state)=>state["trial"]["Flex757"]);
+const Flex757IoProps = useIoStore((state)=>state["trial"]["Flex757"]);
+const Flex757Cb = useFlex757Cb()
+const Flex753Props = useStore((state)=>state["trial"]["Flex753"]);
+const Flex753IoProps = useIoStore((state)=>state["trial"]["Flex753"]);
+const Flex753Cb = useFlex753Cb()
+const Flex754Props = useStore((state)=>state["trial"]["Flex754"]);
+const Flex754IoProps = useIoStore((state)=>state["trial"]["Flex754"]);
+const Flex754Cb = useFlex754Cb()
+const Flex755Props = useStore((state)=>state["trial"]["Flex755"]);
+const Flex755IoProps = useIoStore((state)=>state["trial"]["Flex755"]);
+const Flex755Cb = useFlex755Cb()
+const Flex758Props = useStore((state)=>state["trial"]["Flex758"]);
+const Flex758IoProps = useIoStore((state)=>state["trial"]["Flex758"]);
+const Flex758Cb = useFlex758Cb()
+const Flex711Props = useStore((state)=>state["trial"]["Flex711"]);
+const Flex711IoProps = useIoStore((state)=>state["trial"]["Flex711"]);
+const Flex711Cb = useFlex711Cb()
+const Flex738Props = useStore((state)=>state["trial"]["Flex738"]);
+const Flex738IoProps = useIoStore((state)=>state["trial"]["Flex738"]);
+const Flex738Cb = useFlex738Cb()
+const Flex736Props = useStore((state)=>state["trial"]["Flex736"]);
+const Flex736IoProps = useIoStore((state)=>state["trial"]["Flex736"]);
+const Flex736Cb = useFlex736Cb()
+const Flex737Props = useStore((state)=>state["trial"]["Flex737"]);
+const Flex737IoProps = useIoStore((state)=>state["trial"]["Flex737"]);
+const Flex737Cb = useFlex737Cb()
+const Flex741Props = useStore((state)=>state["trial"]["Flex741"]);
+const Flex741IoProps = useIoStore((state)=>state["trial"]["Flex741"]);
+const Flex741Cb = useFlex741Cb()
+const Flex739Props = useStore((state)=>state["trial"]["Flex739"]);
+const Flex739IoProps = useIoStore((state)=>state["trial"]["Flex739"]);
+const Flex739Cb = useFlex739Cb()
+const Flex740Props = useStore((state)=>state["trial"]["Flex740"]);
+const Flex740IoProps = useIoStore((state)=>state["trial"]["Flex740"]);
+const Flex740Cb = useFlex740Cb()
+const Flex744Props = useStore((state)=>state["trial"]["Flex744"]);
+const Flex744IoProps = useIoStore((state)=>state["trial"]["Flex744"]);
+const Flex744Cb = useFlex744Cb()
+const Flex742Props = useStore((state)=>state["trial"]["Flex742"]);
+const Flex742IoProps = useIoStore((state)=>state["trial"]["Flex742"]);
+const Flex742Cb = useFlex742Cb()
+const Flex743Props = useStore((state)=>state["trial"]["Flex743"]);
+const Flex743IoProps = useIoStore((state)=>state["trial"]["Flex743"]);
+const Flex743Cb = useFlex743Cb()
+const Flex747Props = useStore((state)=>state["trial"]["Flex747"]);
+const Flex747IoProps = useIoStore((state)=>state["trial"]["Flex747"]);
+const Flex747Cb = useFlex747Cb()
+const Flex745Props = useStore((state)=>state["trial"]["Flex745"]);
+const Flex745IoProps = useIoStore((state)=>state["trial"]["Flex745"]);
+const Flex745Cb = useFlex745Cb()
+const Flex746Props = useStore((state)=>state["trial"]["Flex746"]);
+const Flex746IoProps = useIoStore((state)=>state["trial"]["Flex746"]);
+const Flex746Cb = useFlex746Cb()
+const Flex136Props = useStore((state)=>state["trial"]["Flex136"]);
+const Flex136IoProps = useIoStore((state)=>state["trial"]["Flex136"]);
+const Flex136Cb = useFlex136Cb()
+const Flex133Props = useStore((state)=>state["trial"]["Flex133"]);
+const Flex133IoProps = useIoStore((state)=>state["trial"]["Flex133"]);
+const Flex133Cb = useFlex133Cb()
+const Flex129Props = useStore((state)=>state["trial"]["Flex129"]);
+const Flex129IoProps = useIoStore((state)=>state["trial"]["Flex129"]);
+const Flex129Cb = useFlex129Cb()
+const Flex121Props = useStore((state)=>state["trial"]["Flex121"]);
+const Flex121IoProps = useIoStore((state)=>state["trial"]["Flex121"]);
+const Flex121Cb = useFlex121Cb()
+const Flex134Props = useStore((state)=>state["trial"]["Flex134"]);
+const Flex134IoProps = useIoStore((state)=>state["trial"]["Flex134"]);
+const Flex134Cb = useFlex134Cb()
+const Flex130Props = useStore((state)=>state["trial"]["Flex130"]);
+const Flex130IoProps = useIoStore((state)=>state["trial"]["Flex130"]);
+const Flex130Cb = useFlex130Cb()
+const Flex122Props = useStore((state)=>state["trial"]["Flex122"]);
+const Flex122IoProps = useIoStore((state)=>state["trial"]["Flex122"]);
+const Flex122Cb = useFlex122Cb()
+const Flex135Props = useStore((state)=>state["trial"]["Flex135"]);
+const Flex135IoProps = useIoStore((state)=>state["trial"]["Flex135"]);
+const Flex135Cb = useFlex135Cb()
+const Flex131Props = useStore((state)=>state["trial"]["Flex131"]);
+const Flex131IoProps = useIoStore((state)=>state["trial"]["Flex131"]);
+const Flex131Cb = useFlex131Cb()
+const Flex123Props = useStore((state)=>state["trial"]["Flex123"]);
+const Flex123IoProps = useIoStore((state)=>state["trial"]["Flex123"]);
+const Flex123Cb = useFlex123Cb()
+const Flex124Props = useStore((state)=>state["trial"]["Flex124"]);
+const Flex124IoProps = useIoStore((state)=>state["trial"]["Flex124"]);
+const Flex124Cb = useFlex124Cb()
+const Flex116Props = useStore((state)=>state["trial"]["Flex116"]);
+const Flex116IoProps = useIoStore((state)=>state["trial"]["Flex116"]);
+const Flex116Cb = useFlex116Cb()
+const Flex132Props = useStore((state)=>state["trial"]["Flex132"]);
+const Flex132IoProps = useIoStore((state)=>state["trial"]["Flex132"]);
+const Flex132Cb = useFlex132Cb()
+const Flex125Props = useStore((state)=>state["trial"]["Flex125"]);
+const Flex125IoProps = useIoStore((state)=>state["trial"]["Flex125"]);
+const Flex125Cb = useFlex125Cb()
+const Flex117Props = useStore((state)=>state["trial"]["Flex117"]);
+const Flex117IoProps = useIoStore((state)=>state["trial"]["Flex117"]);
+const Flex117Cb = useFlex117Cb()
+const Flex126Props = useStore((state)=>state["trial"]["Flex126"]);
+const Flex126IoProps = useIoStore((state)=>state["trial"]["Flex126"]);
+const Flex126Cb = useFlex126Cb()
+const Flex118Props = useStore((state)=>state["trial"]["Flex118"]);
+const Flex118IoProps = useIoStore((state)=>state["trial"]["Flex118"]);
+const Flex118Cb = useFlex118Cb()
+const Flex127Props = useStore((state)=>state["trial"]["Flex127"]);
+const Flex127IoProps = useIoStore((state)=>state["trial"]["Flex127"]);
+const Flex127Cb = useFlex127Cb()
+const Flex119Props = useStore((state)=>state["trial"]["Flex119"]);
+const Flex119IoProps = useIoStore((state)=>state["trial"]["Flex119"]);
+const Flex119Cb = useFlex119Cb()
+const Flex128Props = useStore((state)=>state["trial"]["Flex128"]);
+const Flex128IoProps = useIoStore((state)=>state["trial"]["Flex128"]);
+const Flex128Cb = useFlex128Cb()
+const Flex120Props = useStore((state)=>state["trial"]["Flex120"]);
+const Flex120IoProps = useIoStore((state)=>state["trial"]["Flex120"]);
+const Flex120Cb = useFlex120Cb()
+const Flex152Props = useStore((state)=>state["trial"]["Flex152"]);
+const Flex152IoProps = useIoStore((state)=>state["trial"]["Flex152"]);
+const Flex152Cb = useFlex152Cb()
+const Flex150Props = useStore((state)=>state["trial"]["Flex150"]);
+const Flex150IoProps = useIoStore((state)=>state["trial"]["Flex150"]);
+const Flex150Cb = useFlex150Cb()
+const Flex147Props = useStore((state)=>state["trial"]["Flex147"]);
+const Flex147IoProps = useIoStore((state)=>state["trial"]["Flex147"]);
+const Flex147Cb = useFlex147Cb()
+const Flex143Props = useStore((state)=>state["trial"]["Flex143"]);
+const Flex143IoProps = useIoStore((state)=>state["trial"]["Flex143"]);
+const Flex143Cb = useFlex143Cb()
+const Flex139Props = useStore((state)=>state["trial"]["Flex139"]);
+const Flex139IoProps = useIoStore((state)=>state["trial"]["Flex139"]);
+const Flex139Cb = useFlex139Cb()
+const Flex144Props = useStore((state)=>state["trial"]["Flex144"]);
+const Flex144IoProps = useIoStore((state)=>state["trial"]["Flex144"]);
+const Flex144Cb = useFlex144Cb()
+const Flex140Props = useStore((state)=>state["trial"]["Flex140"]);
+const Flex140IoProps = useIoStore((state)=>state["trial"]["Flex140"]);
+const Flex140Cb = useFlex140Cb()
+const Flex148Props = useStore((state)=>state["trial"]["Flex148"]);
+const Flex148IoProps = useIoStore((state)=>state["trial"]["Flex148"]);
+const Flex148Cb = useFlex148Cb()
+const Flex145Props = useStore((state)=>state["trial"]["Flex145"]);
+const Flex145IoProps = useIoStore((state)=>state["trial"]["Flex145"]);
+const Flex145Cb = useFlex145Cb()
+const Flex141Props = useStore((state)=>state["trial"]["Flex141"]);
+const Flex141IoProps = useIoStore((state)=>state["trial"]["Flex141"]);
+const Flex141Cb = useFlex141Cb()
+const Flex137Props = useStore((state)=>state["trial"]["Flex137"]);
+const Flex137IoProps = useIoStore((state)=>state["trial"]["Flex137"]);
+const Flex137Cb = useFlex137Cb()
+const Flex146Props = useStore((state)=>state["trial"]["Flex146"]);
+const Flex146IoProps = useIoStore((state)=>state["trial"]["Flex146"]);
+const Flex146Cb = useFlex146Cb()
+const Flex142Props = useStore((state)=>state["trial"]["Flex142"]);
+const Flex142IoProps = useIoStore((state)=>state["trial"]["Flex142"]);
+const Flex142Cb = useFlex142Cb()
+const Flex138Props = useStore((state)=>state["trial"]["Flex138"]);
+const Flex138IoProps = useIoStore((state)=>state["trial"]["Flex138"]);
+const Flex138Cb = useFlex138Cb()
+const Flex151Props = useStore((state)=>state["trial"]["Flex151"]);
+const Flex151IoProps = useIoStore((state)=>state["trial"]["Flex151"]);
+const Flex151Cb = useFlex151Cb()
+const Flex149Props = useStore((state)=>state["trial"]["Flex149"]);
+const Flex149IoProps = useIoStore((state)=>state["trial"]["Flex149"]);
+const Flex149Cb = useFlex149Cb()
+const Image29Props = useStore((state)=>state["trial"]["Image29"]);
+const Image29IoProps = useIoStore((state)=>state["trial"]["Image29"]);
+const Image29Cb = useImage29Cb()
+const Image26Props = useStore((state)=>state["trial"]["Image26"]);
+const Image26IoProps = useIoStore((state)=>state["trial"]["Image26"]);
+const Image26Cb = useImage26Cb()
+const TextBox107Props = useStore((state)=>state["trial"]["TextBox107"]);
+const TextBox107IoProps = useIoStore((state)=>state["trial"]["TextBox107"]);
+const TextBox107Cb = useTextBox107Cb()
+const TextBox108Props = useStore((state)=>state["trial"]["TextBox108"]);
+const TextBox108IoProps = useIoStore((state)=>state["trial"]["TextBox108"]);
+const TextBox108Cb = useTextBox108Cb()
+const TextBox109Props = useStore((state)=>state["trial"]["TextBox109"]);
+const TextBox109IoProps = useIoStore((state)=>state["trial"]["TextBox109"]);
+const TextBox109Cb = useTextBox109Cb()
+const TextBox110Props = useStore((state)=>state["trial"]["TextBox110"]);
+const TextBox110IoProps = useIoStore((state)=>state["trial"]["TextBox110"]);
+const TextBox110Cb = useTextBox110Cb()
+const TextBox111Props = useStore((state)=>state["trial"]["TextBox111"]);
+const TextBox111IoProps = useIoStore((state)=>state["trial"]["TextBox111"]);
+const TextBox111Cb = useTextBox111Cb()
+const TextBox112Props = useStore((state)=>state["trial"]["TextBox112"]);
+const TextBox112IoProps = useIoStore((state)=>state["trial"]["TextBox112"]);
+const TextBox112Cb = useTextBox112Cb()
+const TextBox113Props = useStore((state)=>state["trial"]["TextBox113"]);
+const TextBox113IoProps = useIoStore((state)=>state["trial"]["TextBox113"]);
+const TextBox113Cb = useTextBox113Cb()
+const TextBox116Props = useStore((state)=>state["trial"]["TextBox116"]);
+const TextBox116IoProps = useIoStore((state)=>state["trial"]["TextBox116"]);
+const TextBox116Cb = useTextBox116Cb()
+const TextBox117Props = useStore((state)=>state["trial"]["TextBox117"]);
+const TextBox117IoProps = useIoStore((state)=>state["trial"]["TextBox117"]);
+const TextBox117Cb = useTextBox117Cb()
+const TextBox114Props = useStore((state)=>state["trial"]["TextBox114"]);
+const TextBox114IoProps = useIoStore((state)=>state["trial"]["TextBox114"]);
+const TextBox114Cb = useTextBox114Cb()
+const TextBox115Props = useStore((state)=>state["trial"]["TextBox115"]);
+const TextBox115IoProps = useIoStore((state)=>state["trial"]["TextBox115"]);
+const TextBox115Cb = useTextBox115Cb()
+const TextBox103Props = useStore((state)=>state["trial"]["TextBox103"]);
+const TextBox103IoProps = useIoStore((state)=>state["trial"]["TextBox103"]);
+const TextBox103Cb = useTextBox103Cb()
+const TextBox104Props = useStore((state)=>state["trial"]["TextBox104"]);
+const TextBox104IoProps = useIoStore((state)=>state["trial"]["TextBox104"]);
+const TextBox104Cb = useTextBox104Cb()
+const TextBox105Props = useStore((state)=>state["trial"]["TextBox105"]);
+const TextBox105IoProps = useIoStore((state)=>state["trial"]["TextBox105"]);
+const TextBox105Cb = useTextBox105Cb()
+const TextBox106Props = useStore((state)=>state["trial"]["TextBox106"]);
+const TextBox106IoProps = useIoStore((state)=>state["trial"]["TextBox106"]);
+const TextBox106Cb = useTextBox106Cb()
+const Button7Props = useStore((state)=>state["trial"]["Button7"]);
+const Button7IoProps = useIoStore((state)=>state["trial"]["Button7"]);
+const Button7Cb = useButton7Cb()
+const Image27Props = useStore((state)=>state["trial"]["Image27"]);
+const Image27IoProps = useIoStore((state)=>state["trial"]["Image27"]);
+const Image27Cb = useImage27Cb()
+const TextBox118Props = useStore((state)=>state["trial"]["TextBox118"]);
+const TextBox118IoProps = useIoStore((state)=>state["trial"]["TextBox118"]);
+const TextBox118Cb = useTextBox118Cb()
+const Image28Props = useStore((state)=>state["trial"]["Image28"]);
+const Image28IoProps = useIoStore((state)=>state["trial"]["Image28"]);
+const Image28Cb = useImage28Cb()
+const Image314Props = useStore((state)=>state["trial"]["Image314"]);
+const Image314IoProps = useIoStore((state)=>state["trial"]["Image314"]);
+const Image314Cb = useImage314Cb()
+const Image313Props = useStore((state)=>state["trial"]["Image313"]);
+const Image313IoProps = useIoStore((state)=>state["trial"]["Image313"]);
+const Image313Cb = useImage313Cb()
+const TextBox493Props = useStore((state)=>state["trial"]["TextBox493"]);
+const TextBox493IoProps = useIoStore((state)=>state["trial"]["TextBox493"]);
+const TextBox493Cb = useTextBox493Cb()
+const Image310Props = useStore((state)=>state["trial"]["Image310"]);
+const Image310IoProps = useIoStore((state)=>state["trial"]["Image310"]);
+const Image310Cb = useImage310Cb()
+const Image311Props = useStore((state)=>state["trial"]["Image311"]);
+const Image311IoProps = useIoStore((state)=>state["trial"]["Image311"]);
+const Image311Cb = useImage311Cb()
+const Image312Props = useStore((state)=>state["trial"]["Image312"]);
+const Image312IoProps = useIoStore((state)=>state["trial"]["Image312"]);
+const Image312Cb = useImage312Cb()
+const Button229Props = useStore((state)=>state["trial"]["Button229"]);
+const Button229IoProps = useIoStore((state)=>state["trial"]["Button229"]);
+const Button229Cb = useButton229Cb()
+const Button230Props = useStore((state)=>state["trial"]["Button230"]);
+const Button230IoProps = useIoStore((state)=>state["trial"]["Button230"]);
+const Button230Cb = useButton230Cb()
+const Button231Props = useStore((state)=>state["trial"]["Button231"]);
+const Button231IoProps = useIoStore((state)=>state["trial"]["Button231"]);
+const Button231Cb = useButton231Cb()
+const TextBox494Props = useStore((state)=>state["trial"]["TextBox494"]);
+const TextBox494IoProps = useIoStore((state)=>state["trial"]["TextBox494"]);
+const TextBox494Cb = useTextBox494Cb()
+const TextBox495Props = useStore((state)=>state["trial"]["TextBox495"]);
+const TextBox495IoProps = useIoStore((state)=>state["trial"]["TextBox495"]);
+const TextBox495Cb = useTextBox495Cb()
+const Button228Props = useStore((state)=>state["trial"]["Button228"]);
+const Button228IoProps = useIoStore((state)=>state["trial"]["Button228"]);
+const Button228Cb = useButton228Cb()
+const TextBox482Props = useStore((state)=>state["trial"]["TextBox482"]);
+const TextBox482IoProps = useIoStore((state)=>state["trial"]["TextBox482"]);
+const TextBox482Cb = useTextBox482Cb()
+const Upload2Props = useStore((state)=>state["trial"]["Upload2"]);
+const Upload2IoProps = useIoStore((state)=>state["trial"]["Upload2"]);
+const Upload2Cb = useUpload2Cb()
+const TextBox483Props = useStore((state)=>state["trial"]["TextBox483"]);
+const TextBox483IoProps = useIoStore((state)=>state["trial"]["TextBox483"]);
+const TextBox483Cb = useTextBox483Cb()
+const Upload1Props = useStore((state)=>state["trial"]["Upload1"]);
+const Upload1IoProps = useIoStore((state)=>state["trial"]["Upload1"]);
+const Upload1Cb = useUpload1Cb()
+const TextBox484Props = useStore((state)=>state["trial"]["TextBox484"]);
+const TextBox484IoProps = useIoStore((state)=>state["trial"]["TextBox484"]);
+const TextBox484Cb = useTextBox484Cb()
+const Input11Props = useStore((state)=>state["trial"]["Input11"]);
+const Input11IoProps = useIoStore((state)=>state["trial"]["Input11"]);
+const Input11Cb = useInput11Cb()
+const TextBox492Props = useStore((state)=>state["trial"]["TextBox492"]);
+const TextBox492IoProps = useIoStore((state)=>state["trial"]["TextBox492"]);
+const TextBox492Cb = useTextBox492Cb()
+const Input12Props = useStore((state)=>state["trial"]["Input12"]);
+const Input12IoProps = useIoStore((state)=>state["trial"]["Input12"]);
+const Input12Cb = useInput12Cb()
+const TextBox485Props = useStore((state)=>state["trial"]["TextBox485"]);
+const TextBox485IoProps = useIoStore((state)=>state["trial"]["TextBox485"]);
+const TextBox485Cb = useTextBox485Cb()
+const TextBox486Props = useStore((state)=>state["trial"]["TextBox486"]);
+const TextBox486IoProps = useIoStore((state)=>state["trial"]["TextBox486"]);
+const TextBox486Cb = useTextBox486Cb()
+const Input13Props = useStore((state)=>state["trial"]["Input13"]);
+const Input13IoProps = useIoStore((state)=>state["trial"]["Input13"]);
+const Input13Cb = useInput13Cb()
+const Input14Props = useStore((state)=>state["trial"]["Input14"]);
+const Input14IoProps = useIoStore((state)=>state["trial"]["Input14"]);
+const Input14Cb = useInput14Cb()
+const TextBox487Props = useStore((state)=>state["trial"]["TextBox487"]);
+const TextBox487IoProps = useIoStore((state)=>state["trial"]["TextBox487"]);
+const TextBox487Cb = useTextBox487Cb()
+const TextBox488Props = useStore((state)=>state["trial"]["TextBox488"]);
+const TextBox488IoProps = useIoStore((state)=>state["trial"]["TextBox488"]);
+const TextBox488Cb = useTextBox488Cb()
+const Input15Props = useStore((state)=>state["trial"]["Input15"]);
+const Input15IoProps = useIoStore((state)=>state["trial"]["Input15"]);
+const Input15Cb = useInput15Cb()
+const Input16Props = useStore((state)=>state["trial"]["Input16"]);
+const Input16IoProps = useIoStore((state)=>state["trial"]["Input16"]);
+const Input16Cb = useInput16Cb()
+const TextBox489Props = useStore((state)=>state["trial"]["TextBox489"]);
+const TextBox489IoProps = useIoStore((state)=>state["trial"]["TextBox489"]);
+const TextBox489Cb = useTextBox489Cb()
+const Button8Props = useStore((state)=>state["trial"]["Button8"]);
+const Button8IoProps = useIoStore((state)=>state["trial"]["Button8"]);
+const Button8Cb = useButton8Cb()
+const TextBox138Props = useStore((state)=>state["trial"]["TextBox138"]);
+const TextBox138IoProps = useIoStore((state)=>state["trial"]["TextBox138"]);
+const TextBox138Cb = useTextBox138Cb()
+const TextBox129Props = useStore((state)=>state["trial"]["TextBox129"]);
+const TextBox129IoProps = useIoStore((state)=>state["trial"]["TextBox129"]);
+const TextBox129Cb = useTextBox129Cb()
+const TextBox130Props = useStore((state)=>state["trial"]["TextBox130"]);
+const TextBox130IoProps = useIoStore((state)=>state["trial"]["TextBox130"]);
+const TextBox130Cb = useTextBox130Cb()
+const TextBox139Props = useStore((state)=>state["trial"]["TextBox139"]);
+const TextBox139IoProps = useIoStore((state)=>state["trial"]["TextBox139"]);
+const TextBox139Cb = useTextBox139Cb()
+const TextBox131Props = useStore((state)=>state["trial"]["TextBox131"]);
+const TextBox131IoProps = useIoStore((state)=>state["trial"]["TextBox131"]);
+const TextBox131Cb = useTextBox131Cb()
+const TextBox132Props = useStore((state)=>state["trial"]["TextBox132"]);
+const TextBox132IoProps = useIoStore((state)=>state["trial"]["TextBox132"]);
+const TextBox132Cb = useTextBox132Cb()
+const Image31Props = useStore((state)=>state["trial"]["Image31"]);
+const Image31IoProps = useIoStore((state)=>state["trial"]["Image31"]);
+const Image31Cb = useImage31Cb()
+const Image32Props = useStore((state)=>state["trial"]["Image32"]);
+const Image32IoProps = useIoStore((state)=>state["trial"]["Image32"]);
+const Image32Cb = useImage32Cb()
+const Image33Props = useStore((state)=>state["trial"]["Image33"]);
+const Image33IoProps = useIoStore((state)=>state["trial"]["Image33"]);
+const Image33Cb = useImage33Cb()
+const Image34Props = useStore((state)=>state["trial"]["Image34"]);
+const Image34IoProps = useIoStore((state)=>state["trial"]["Image34"]);
+const Image34Cb = useImage34Cb()
+const Image35Props = useStore((state)=>state["trial"]["Image35"]);
+const Image35IoProps = useIoStore((state)=>state["trial"]["Image35"]);
+const Image35Cb = useImage35Cb()
+const TextBox133Props = useStore((state)=>state["trial"]["TextBox133"]);
+const TextBox133IoProps = useIoStore((state)=>state["trial"]["TextBox133"]);
+const TextBox133Cb = useTextBox133Cb()
+const Image30Props = useStore((state)=>state["trial"]["Image30"]);
+const Image30IoProps = useIoStore((state)=>state["trial"]["Image30"]);
+const Image30Cb = useImage30Cb()
+const TextBox119Props = useStore((state)=>state["trial"]["TextBox119"]);
+const TextBox119IoProps = useIoStore((state)=>state["trial"]["TextBox119"]);
+const TextBox119Cb = useTextBox119Cb()
+const TextBox134Props = useStore((state)=>state["trial"]["TextBox134"]);
+const TextBox134IoProps = useIoStore((state)=>state["trial"]["TextBox134"]);
+const TextBox134Cb = useTextBox134Cb()
+const TextBox120Props = useStore((state)=>state["trial"]["TextBox120"]);
+const TextBox120IoProps = useIoStore((state)=>state["trial"]["TextBox120"]);
+const TextBox120Cb = useTextBox120Cb()
+const TextBox135Props = useStore((state)=>state["trial"]["TextBox135"]);
+const TextBox135IoProps = useIoStore((state)=>state["trial"]["TextBox135"]);
+const TextBox135Cb = useTextBox135Cb()
+const TextBox121Props = useStore((state)=>state["trial"]["TextBox121"]);
+const TextBox121IoProps = useIoStore((state)=>state["trial"]["TextBox121"]);
+const TextBox121Cb = useTextBox121Cb()
+const TextBox122Props = useStore((state)=>state["trial"]["TextBox122"]);
+const TextBox122IoProps = useIoStore((state)=>state["trial"]["TextBox122"]);
+const TextBox122Cb = useTextBox122Cb()
+const TextBox123Props = useStore((state)=>state["trial"]["TextBox123"]);
+const TextBox123IoProps = useIoStore((state)=>state["trial"]["TextBox123"]);
+const TextBox123Cb = useTextBox123Cb()
+const TextBox136Props = useStore((state)=>state["trial"]["TextBox136"]);
+const TextBox136IoProps = useIoStore((state)=>state["trial"]["TextBox136"]);
+const TextBox136Cb = useTextBox136Cb()
+const TextBox124Props = useStore((state)=>state["trial"]["TextBox124"]);
+const TextBox124IoProps = useIoStore((state)=>state["trial"]["TextBox124"]);
+const TextBox124Cb = useTextBox124Cb()
+const TextBox125Props = useStore((state)=>state["trial"]["TextBox125"]);
+const TextBox125IoProps = useIoStore((state)=>state["trial"]["TextBox125"]);
+const TextBox125Cb = useTextBox125Cb()
+const TextBox126Props = useStore((state)=>state["trial"]["TextBox126"]);
+const TextBox126IoProps = useIoStore((state)=>state["trial"]["TextBox126"]);
+const TextBox126Cb = useTextBox126Cb()
+const TextBox137Props = useStore((state)=>state["trial"]["TextBox137"]);
+const TextBox137IoProps = useIoStore((state)=>state["trial"]["TextBox137"]);
+const TextBox137Cb = useTextBox137Cb()
+const TextBox127Props = useStore((state)=>state["trial"]["TextBox127"]);
+const TextBox127IoProps = useIoStore((state)=>state["trial"]["TextBox127"]);
+const TextBox127Cb = useTextBox127Cb()
+const TextBox128Props = useStore((state)=>state["trial"]["TextBox128"]);
+const TextBox128IoProps = useIoStore((state)=>state["trial"]["TextBox128"]);
+const TextBox128Cb = useTextBox128Cb()
+const TextBox151Props = useStore((state)=>state["trial"]["TextBox151"]);
+const TextBox151IoProps = useIoStore((state)=>state["trial"]["TextBox151"]);
+const TextBox151Cb = useTextBox151Cb()
+const TextBox145Props = useStore((state)=>state["trial"]["TextBox145"]);
+const TextBox145IoProps = useIoStore((state)=>state["trial"]["TextBox145"]);
+const TextBox145Cb = useTextBox145Cb()
+const TextBox146Props = useStore((state)=>state["trial"]["TextBox146"]);
+const TextBox146IoProps = useIoStore((state)=>state["trial"]["TextBox146"]);
+const TextBox146Cb = useTextBox146Cb()
+const TextBox147Props = useStore((state)=>state["trial"]["TextBox147"]);
+const TextBox147IoProps = useIoStore((state)=>state["trial"]["TextBox147"]);
+const TextBox147Cb = useTextBox147Cb()
+const TextBox152Props = useStore((state)=>state["trial"]["TextBox152"]);
+const TextBox152IoProps = useIoStore((state)=>state["trial"]["TextBox152"]);
+const TextBox152Cb = useTextBox152Cb()
+const TextBox148Props = useStore((state)=>state["trial"]["TextBox148"]);
+const TextBox148IoProps = useIoStore((state)=>state["trial"]["TextBox148"]);
+const TextBox148Cb = useTextBox148Cb()
+const TextBox149Props = useStore((state)=>state["trial"]["TextBox149"]);
+const TextBox149IoProps = useIoStore((state)=>state["trial"]["TextBox149"]);
+const TextBox149Cb = useTextBox149Cb()
+const TextBox140Props = useStore((state)=>state["trial"]["TextBox140"]);
+const TextBox140IoProps = useIoStore((state)=>state["trial"]["TextBox140"]);
+const TextBox140Cb = useTextBox140Cb()
+const TextBox141Props = useStore((state)=>state["trial"]["TextBox141"]);
+const TextBox141IoProps = useIoStore((state)=>state["trial"]["TextBox141"]);
+const TextBox141Cb = useTextBox141Cb()
+const TextBox150Props = useStore((state)=>state["trial"]["TextBox150"]);
+const TextBox150IoProps = useIoStore((state)=>state["trial"]["TextBox150"]);
+const TextBox150Cb = useTextBox150Cb()
+const TextBox142Props = useStore((state)=>state["trial"]["TextBox142"]);
+const TextBox142IoProps = useIoStore((state)=>state["trial"]["TextBox142"]);
+const TextBox142Cb = useTextBox142Cb()
+const TextBox143Props = useStore((state)=>state["trial"]["TextBox143"]);
+const TextBox143IoProps = useIoStore((state)=>state["trial"]["TextBox143"]);
+const TextBox143Cb = useTextBox143Cb()
+const TextBox144Props = useStore((state)=>state["trial"]["TextBox144"]);
+const TextBox144IoProps = useIoStore((state)=>state["trial"]["TextBox144"]);
+const TextBox144Cb = useTextBox144Cb()
+const TextBox154Props = useStore((state)=>state["trial"]["TextBox154"]);
+const TextBox154IoProps = useIoStore((state)=>state["trial"]["TextBox154"]);
+const TextBox154Cb = useTextBox154Cb()
+const Image36Props = useStore((state)=>state["trial"]["Image36"]);
+const Image36IoProps = useIoStore((state)=>state["trial"]["Image36"]);
+const Image36Cb = useImage36Cb()
+const TextBox153Props = useStore((state)=>state["trial"]["TextBox153"]);
+const TextBox153IoProps = useIoStore((state)=>state["trial"]["TextBox153"]);
+const TextBox153Cb = useTextBox153Cb()
+
+  return (<>
+  <Flex1 className="p-trial Flex115 bpt" {...Flex115Props} {...Flex115Cb} {...Flex115IoProps}>
+<Overlay className="p-trial Overlay2 bpt" {...Overlay2Props} {...Overlay2Cb} {...Overlay2IoProps}>
+<Flex1 className="p-trial Flex712 bpt" {...Flex712Props} {...Flex712Cb} {...Flex712IoProps}>
+<Flex1 className="p-trial Flex711 bpt" {...Flex711Props} {...Flex711Cb} {...Flex711IoProps}>
+<Flex1 className="p-trial Flex747 bpt" {...Flex747Props} {...Flex747Cb} {...Flex747IoProps}>
+<Flex1 className="p-trial Flex746 bpt" {...Flex746Props} {...Flex746Cb} {...Flex746IoProps}>
+<TextBox1 className="p-trial TextBox489 bpt" {...TextBox489Props} {...TextBox489Cb} {...TextBox489IoProps}/>
+<Input1 className="p-trial Input16 bpt" {...Input16Props} {...Input16Cb} {...Input16IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex745 bpt" {...Flex745Props} {...Flex745Cb} {...Flex745IoProps}>
+<TextBox1 className="p-trial TextBox488 bpt" {...TextBox488Props} {...TextBox488Cb} {...TextBox488IoProps}/>
+<Input1 className="p-trial Input15 bpt" {...Input15Props} {...Input15Cb} {...Input15IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex744 bpt" {...Flex744Props} {...Flex744Cb} {...Flex744IoProps}>
+<Flex1 className="p-trial Flex743 bpt" {...Flex743Props} {...Flex743Cb} {...Flex743IoProps}>
+<TextBox1 className="p-trial TextBox487 bpt" {...TextBox487Props} {...TextBox487Cb} {...TextBox487IoProps}/>
+<Input1 className="p-trial Input14 bpt" {...Input14Props} {...Input14Cb} {...Input14IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex742 bpt" {...Flex742Props} {...Flex742Cb} {...Flex742IoProps}>
+<TextBox1 className="p-trial TextBox486 bpt" {...TextBox486Props} {...TextBox486Cb} {...TextBox486IoProps}/>
+<Input1 className="p-trial Input13 bpt" {...Input13Props} {...Input13Cb} {...Input13IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex741 bpt" {...Flex741Props} {...Flex741Cb} {...Flex741IoProps}>
+<Flex1 className="p-trial Flex740 bpt" {...Flex740Props} {...Flex740Cb} {...Flex740IoProps}>
+<TextBox1 className="p-trial TextBox485 bpt" {...TextBox485Props} {...TextBox485Cb} {...TextBox485IoProps}/>
+<Input1 className="p-trial Input12 bpt" {...Input12Props} {...Input12Cb} {...Input12IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex739 bpt" {...Flex739Props} {...Flex739Cb} {...Flex739IoProps}>
+<TextBox1 className="p-trial TextBox484 bpt" {...TextBox484Props} {...TextBox484Cb} {...TextBox484IoProps}/>
+<Input1 className="p-trial Input11 bpt" {...Input11Props} {...Input11Cb} {...Input11IoProps}/>
+<TextBox1 className="p-trial TextBox492 bpt" {...TextBox492Props} {...TextBox492Cb} {...TextBox492IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex738 bpt" {...Flex738Props} {...Flex738Cb} {...Flex738IoProps}>
+<Flex1 className="p-trial Flex737 bpt" {...Flex737Props} {...Flex737Cb} {...Flex737IoProps}>
+<TextBox1 className="p-trial TextBox483 bpt" {...TextBox483Props} {...TextBox483Cb} {...TextBox483IoProps}/>
+<Upload className="p-trial Upload1 bpt" {...Upload1Props} {...Upload1Cb} {...Upload1IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex736 bpt" {...Flex736Props} {...Flex736Cb} {...Flex736IoProps}>
+<TextBox1 className="p-trial TextBox482 bpt" {...TextBox482Props} {...TextBox482Cb} {...TextBox482IoProps}/>
+<Upload className="p-trial Upload2 bpt" {...Upload2Props} {...Upload2Cb} {...Upload2IoProps}/>
+</Flex1>
+</Flex1>
+<Button1 className="p-trial Button228 bpt" {...Button228Props} {...Button228Cb} {...Button228IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex710 bpt" {...Flex710Props} {...Flex710Cb} {...Flex710IoProps}>
+<Flex1 className="p-trial Flex722 bpt" {...Flex722Props} {...Flex722Cb} {...Flex722IoProps}>
+<Image1 className="p-trial Image314 bpt" {...Image314Props} {...Image314Cb} {...Image314IoProps}/>
+<Flex1 className="p-trial Flex760 bpt" {...Flex760Props} {...Flex760Cb} {...Flex760IoProps}>
+<Image1 className="p-trial Image313 bpt" {...Image313Props} {...Image313Cb} {...Image313IoProps}/>
+<Flex1 className="p-trial Flex759 bpt" {...Flex759Props} {...Flex759Cb} {...Flex759IoProps}>
+<Flex1 className="p-trial Flex758 bpt" {...Flex758Props} {...Flex758Cb} {...Flex758IoProps}>
+<TextBox1 className="p-trial TextBox495 bpt" {...TextBox495Props} {...TextBox495Cb} {...TextBox495IoProps}/>
+<TextBox1 className="p-trial TextBox494 bpt" {...TextBox494Props} {...TextBox494Cb} {...TextBox494IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex757 bpt" {...Flex757Props} {...Flex757Cb} {...Flex757IoProps}>
+<Flex1 className="p-trial Flex755 bpt" {...Flex755Props} {...Flex755Cb} {...Flex755IoProps}>
+<Button1 className="p-trial Button231 bpt" {...Button231Props} {...Button231Cb} {...Button231IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex754 bpt" {...Flex754Props} {...Flex754Cb} {...Flex754IoProps}>
+<Button1 className="p-trial Button230 bpt" {...Button230Props} {...Button230Cb} {...Button230IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex753 bpt" {...Flex753Props} {...Flex753Cb} {...Flex753IoProps}>
+<Button1 className="p-trial Button229 bpt" {...Button229Props} {...Button229Cb} {...Button229IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex756 bpt" {...Flex756Props} {...Flex756Cb} {...Flex756IoProps}>
+<Flex1 className="p-trial Flex751 bpt" {...Flex751Props} {...Flex751Cb} {...Flex751IoProps}>
+<Image1 className="p-trial Image310 bpt" {...Image310Props} {...Image310Cb} {...Image310IoProps}/>
+<TextBox1 className="p-trial TextBox493 bpt" {...TextBox493Props} {...TextBox493Cb} {...TextBox493IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex752 bpt" {...Flex752Props} {...Flex752Cb} {...Flex752IoProps}>
+<Image1 className="p-trial Image312 bpt" {...Image312Props} {...Image312Cb} {...Image312IoProps}/>
+<Image1 className="p-trial Image311 bpt" {...Image311Props} {...Image311Cb} {...Image311IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+</Overlay>
+<Flex1 className="p-trial Flex114 bpt" {...Flex114Props} {...Flex114Cb} {...Flex114IoProps}>
+<Flex1 className="p-trial Flex112 bpt" {...Flex112Props} {...Flex112Cb} {...Flex112IoProps}>
+<Image1 className="p-trial Image28 bpt" {...Image28Props} {...Image28Cb} {...Image28IoProps}/>
+<TextBox1 className="p-trial TextBox118 bpt" {...TextBox118Props} {...TextBox118Cb} {...TextBox118IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex111 bpt" {...Flex111Props} {...Flex111Cb} {...Flex111IoProps}>
+<Flex1 className="p-trial Flex105 bpt" {...Flex105Props} {...Flex105Cb} {...Flex105IoProps}>
+<Image1 className="p-trial Image27 bpt" {...Image27Props} {...Image27Cb} {...Image27IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex109 bpt" {...Flex109Props} {...Flex109Cb} {...Flex109IoProps}>
+<Flex1 className="p-trial Flex103 bpt" {...Flex103Props} {...Flex103Cb} {...Flex103IoProps}>
+<TextBox1 className="p-trial TextBox115 bpt" {...TextBox115Props} {...TextBox115Cb} {...TextBox115IoProps}/>
+<TextBox1 className="p-trial TextBox114 bpt" {...TextBox114Props} {...TextBox114Cb} {...TextBox114IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex110 bpt" {...Flex110Props} {...Flex110Cb} {...Flex110IoProps}>
+<Flex1 className="p-trial Flex104 bpt" {...Flex104Props} {...Flex104Cb} {...Flex104IoProps}>
+<Button1 className="p-trial Button7 bpt" {...Button7Props} {...Button7Cb} {...Button7IoProps}/>
+</Flex1>
+<Menu1 className="p-trial Menu2 bpt" {...Menu2Props} {...Menu2Cb} {...Menu2IoProps}>
+<Flex1 className="p-trial Flex98 bpt" {...Flex98Props} {...Flex98Cb} {...Flex98IoProps}>
+<TextBox1 className="p-trial TextBox103 bpt" {...TextBox103Props} {...TextBox103Cb} {...TextBox103IoProps}/>
+<TextBox1 className="p-trial TextBox104 bpt" {...TextBox104Props} {...TextBox104Cb} {...TextBox104IoProps}/>
+<TextBox1 className="p-trial TextBox105 bpt" {...TextBox105Props} {...TextBox105Cb} {...TextBox105IoProps}/>
+<TextBox1 className="p-trial TextBox106 bpt" {...TextBox106Props} {...TextBox106Cb} {...TextBox106IoProps}/>
+</Flex1>
+</Menu1>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex113 bpt" {...Flex113Props} {...Flex113Cb} {...Flex113IoProps}>
+<Flex1 className="p-trial Flex108 bpt" {...Flex108Props} {...Flex108Cb} {...Flex108IoProps}>
+<TextBox1 className="p-trial TextBox117 bpt" {...TextBox117Props} {...TextBox117Cb} {...TextBox117IoProps}/>
+<TextBox1 className="p-trial TextBox116 bpt" {...TextBox116Props} {...TextBox116Cb} {...TextBox116IoProps}/>
+</Flex1>
+<Image1 className="p-trial Image29 bpt" {...Image29Props} {...Image29Cb} {...Image29IoProps}/>
+<Flex1 className="p-trial Flex107 bpt" {...Flex107Props} {...Flex107Cb} {...Flex107IoProps}>
+<Flex1 className="p-trial Flex102 bpt" {...Flex102Props} {...Flex102Cb} {...Flex102IoProps}>
+<TextBox1 className="p-trial TextBox112 bpt" {...TextBox112Props} {...TextBox112Cb} {...TextBox112IoProps}/>
+<TextBox1 className="p-trial TextBox113 bpt" {...TextBox113Props} {...TextBox113Cb} {...TextBox113IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex101 bpt" {...Flex101Props} {...Flex101Cb} {...Flex101IoProps}>
+<TextBox1 className="p-trial TextBox111 bpt" {...TextBox111Props} {...TextBox111Cb} {...TextBox111IoProps}/>
+<TextBox1 className="p-trial TextBox110 bpt" {...TextBox110Props} {...TextBox110Cb} {...TextBox110IoProps}/>
+<TextBox1 className="p-trial TextBox109 bpt" {...TextBox109Props} {...TextBox109Cb} {...TextBox109IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex106 bpt" {...Flex106Props} {...Flex106Cb} {...Flex106IoProps}>
+<Flex1 className="p-trial Flex100 bpt" {...Flex100Props} {...Flex100Cb} {...Flex100IoProps}>
+<TextBox1 className="p-trial TextBox108 bpt" {...TextBox108Props} {...TextBox108Cb} {...TextBox108IoProps}/>
+<TextBox1 className="p-trial TextBox107 bpt" {...TextBox107Props} {...TextBox107Cb} {...TextBox107IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex99 bpt" {...Flex99Props} {...Flex99Cb} {...Flex99IoProps}>
+<Image1 className="p-trial Image26 bpt" {...Image26Props} {...Image26Cb} {...Image26IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex136 bpt" {...Flex136Props} {...Flex136Cb} {...Flex136IoProps}>
+<Flex1 className="p-trial Flex135 bpt" {...Flex135Props} {...Flex135Cb} {...Flex135IoProps}>
+<Flex1 className="p-trial Flex131 bpt" {...Flex131Props} {...Flex131Cb} {...Flex131IoProps}>
+<Flex1 className="p-trial Flex124 bpt" {...Flex124Props} {...Flex124Cb} {...Flex124IoProps}>
+<Flex1 className="p-trial Flex116 bpt" {...Flex116Props} {...Flex116Cb} {...Flex116IoProps}>
+<Image1 className="p-trial Image30 bpt" {...Image30Props} {...Image30Cb} {...Image30IoProps}/>
+<TextBox1 className="p-trial TextBox119 bpt" {...TextBox119Props} {...TextBox119Cb} {...TextBox119IoProps}/>
+</Flex1>
+<TextBox1 className="p-trial TextBox133 bpt" {...TextBox133Props} {...TextBox133Cb} {...TextBox133IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex123 bpt" {...Flex123Props} {...Flex123Cb} {...Flex123IoProps}>
+<Image1 className="p-trial Image35 bpt" {...Image35Props} {...Image35Cb} {...Image35IoProps}/>
+<Image1 className="p-trial Image34 bpt" {...Image34Props} {...Image34Cb} {...Image34IoProps}/>
+<Image1 className="p-trial Image33 bpt" {...Image33Props} {...Image33Cb} {...Image33IoProps}/>
+<Image1 className="p-trial Image32 bpt" {...Image32Props} {...Image32Cb} {...Image32IoProps}/>
+<Image1 className="p-trial Image31 bpt" {...Image31Props} {...Image31Cb} {...Image31IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex132 bpt" {...Flex132Props} {...Flex132Cb} {...Flex132IoProps}>
+<Flex1 className="p-trial Flex127 bpt" {...Flex127Props} {...Flex127Cb} {...Flex127IoProps}>
+<TextBox1 className="p-trial TextBox136 bpt" {...TextBox136Props} {...TextBox136Cb} {...TextBox136IoProps}/>
+<Flex1 className="p-trial Flex119 bpt" {...Flex119Props} {...Flex119Cb} {...Flex119IoProps}>
+<TextBox1 className="p-trial TextBox126 bpt" {...TextBox126Props} {...TextBox126Cb} {...TextBox126IoProps}/>
+<TextBox1 className="p-trial TextBox125 bpt" {...TextBox125Props} {...TextBox125Cb} {...TextBox125IoProps}/>
+<TextBox1 className="p-trial TextBox124 bpt" {...TextBox124Props} {...TextBox124Cb} {...TextBox124IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex128 bpt" {...Flex128Props} {...Flex128Cb} {...Flex128IoProps}>
+<TextBox1 className="p-trial TextBox137 bpt" {...TextBox137Props} {...TextBox137Cb} {...TextBox137IoProps}/>
+<Flex1 className="p-trial Flex120 bpt" {...Flex120Props} {...Flex120Cb} {...Flex120IoProps}>
+<TextBox1 className="p-trial TextBox127 bpt" {...TextBox127Props} {...TextBox127Cb} {...TextBox127IoProps}/>
+<TextBox1 className="p-trial TextBox128 bpt" {...TextBox128Props} {...TextBox128Cb} {...TextBox128IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex125 bpt" {...Flex125Props} {...Flex125Cb} {...Flex125IoProps}>
+<TextBox1 className="p-trial TextBox134 bpt" {...TextBox134Props} {...TextBox134Cb} {...TextBox134IoProps}/>
+<Flex1 className="p-trial Flex117 bpt" {...Flex117Props} {...Flex117Cb} {...Flex117IoProps}>
+<TextBox1 className="p-trial TextBox120 bpt" {...TextBox120Props} {...TextBox120Cb} {...TextBox120IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex126 bpt" {...Flex126Props} {...Flex126Cb} {...Flex126IoProps}>
+<TextBox1 className="p-trial TextBox135 bpt" {...TextBox135Props} {...TextBox135Cb} {...TextBox135IoProps}/>
+<Flex1 className="p-trial Flex118 bpt" {...Flex118Props} {...Flex118Cb} {...Flex118IoProps}>
+<TextBox1 className="p-trial TextBox121 bpt" {...TextBox121Props} {...TextBox121Cb} {...TextBox121IoProps}/>
+<TextBox1 className="p-trial TextBox122 bpt" {...TextBox122Props} {...TextBox122Cb} {...TextBox122IoProps}/>
+<TextBox1 className="p-trial TextBox123 bpt" {...TextBox123Props} {...TextBox123Cb} {...TextBox123IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex134 bpt" {...Flex134Props} {...Flex134Cb} {...Flex134IoProps}>
+<Flex1 className="p-trial Flex130 bpt" {...Flex130Props} {...Flex130Cb} {...Flex130IoProps}>
+<TextBox1 className="p-trial TextBox139 bpt" {...TextBox139Props} {...TextBox139Cb} {...TextBox139IoProps}/>
+<Flex1 className="p-trial Flex122 bpt" {...Flex122Props} {...Flex122Cb} {...Flex122IoProps}>
+<TextBox1 className="p-trial TextBox131 bpt" {...TextBox131Props} {...TextBox131Cb} {...TextBox131IoProps}/>
+<TextBox1 className="p-trial TextBox132 bpt" {...TextBox132Props} {...TextBox132Cb} {...TextBox132IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex133 bpt" {...Flex133Props} {...Flex133Cb} {...Flex133IoProps}>
+<Button1 className="p-trial Button8 bpt" {...Button8Props} {...Button8Cb} {...Button8IoProps}/>
+<Flex1 className="p-trial Flex129 bpt" {...Flex129Props} {...Flex129Cb} {...Flex129IoProps}>
+<TextBox1 className="p-trial TextBox138 bpt" {...TextBox138Props} {...TextBox138Cb} {...TextBox138IoProps}/>
+<Flex1 className="p-trial Flex121 bpt" {...Flex121Props} {...Flex121Cb} {...Flex121IoProps}>
+<TextBox1 className="p-trial TextBox130 bpt" {...TextBox130Props} {...TextBox130Cb} {...TextBox130IoProps}/>
+<TextBox1 className="p-trial TextBox129 bpt" {...TextBox129Props} {...TextBox129Cb} {...TextBox129IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex152 bpt" {...Flex152Props} {...Flex152Cb} {...Flex152IoProps}>
+<Flex1 className="p-trial Flex151 bpt" {...Flex151Props} {...Flex151Cb} {...Flex151IoProps}>
+<Flex1 className="p-trial Flex149 bpt" {...Flex149Props} {...Flex149Cb} {...Flex149IoProps}>
+<Image1 className="p-trial Image36 bpt" {...Image36Props} {...Image36Cb} {...Image36IoProps}/>
+<TextBox1 className="p-trial TextBox153 bpt" {...TextBox153Props} {...TextBox153Cb} {...TextBox153IoProps}/>
+</Flex1>
+<TextBox1 className="p-trial TextBox154 bpt" {...TextBox154Props} {...TextBox154Cb} {...TextBox154IoProps}/>
+</Flex1>
+<Flex1 className="p-trial Flex150 bpt" {...Flex150Props} {...Flex150Cb} {...Flex150IoProps}>
+<Flex1 className="p-trial Flex148 bpt" {...Flex148Props} {...Flex148Cb} {...Flex148IoProps}>
+<Flex1 className="p-trial Flex146 bpt" {...Flex146Props} {...Flex146Cb} {...Flex146IoProps}>
+<Flex1 className="p-trial Flex142 bpt" {...Flex142Props} {...Flex142Cb} {...Flex142IoProps}>
+<TextBox1 className="p-trial TextBox150 bpt" {...TextBox150Props} {...TextBox150Cb} {...TextBox150IoProps}/>
+<Flex1 className="p-trial Flex138 bpt" {...Flex138Props} {...Flex138Cb} {...Flex138IoProps}>
+<TextBox1 className="p-trial TextBox142 bpt" {...TextBox142Props} {...TextBox142Cb} {...TextBox142IoProps}/>
+<TextBox1 className="p-trial TextBox143 bpt" {...TextBox143Props} {...TextBox143Cb} {...TextBox143IoProps}/>
+<TextBox1 className="p-trial TextBox144 bpt" {...TextBox144Props} {...TextBox144Cb} {...TextBox144IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex145 bpt" {...Flex145Props} {...Flex145Cb} {...Flex145IoProps}>
+<Flex1 className="p-trial Flex141 bpt" {...Flex141Props} {...Flex141Cb} {...Flex141IoProps}>
+<TextBox1 className="p-trial TextBox149 bpt" {...TextBox149Props} {...TextBox149Cb} {...TextBox149IoProps}/>
+<Flex1 className="p-trial Flex137 bpt" {...Flex137Props} {...Flex137Cb} {...Flex137IoProps}>
+<TextBox1 className="p-trial TextBox141 bpt" {...TextBox141Props} {...TextBox141Cb} {...TextBox141IoProps}/>
+<TextBox1 className="p-trial TextBox140 bpt" {...TextBox140Props} {...TextBox140Cb} {...TextBox140IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex147 bpt" {...Flex147Props} {...Flex147Cb} {...Flex147IoProps}>
+<Flex1 className="p-trial Flex143 bpt" {...Flex143Props} {...Flex143Cb} {...Flex143IoProps}>
+<TextBox1 className="p-trial TextBox151 bpt" {...TextBox151Props} {...TextBox151Cb} {...TextBox151IoProps}/>
+<Flex1 className="p-trial Flex139 bpt" {...Flex139Props} {...Flex139Cb} {...Flex139IoProps}>
+<TextBox1 className="p-trial TextBox147 bpt" {...TextBox147Props} {...TextBox147Cb} {...TextBox147IoProps}/>
+<TextBox1 className="p-trial TextBox146 bpt" {...TextBox146Props} {...TextBox146Cb} {...TextBox146IoProps}/>
+<TextBox1 className="p-trial TextBox145 bpt" {...TextBox145Props} {...TextBox145Cb} {...TextBox145IoProps}/>
+</Flex1>
+</Flex1>
+<Flex1 className="p-trial Flex144 bpt" {...Flex144Props} {...Flex144Cb} {...Flex144IoProps}>
+<TextBox1 className="p-trial TextBox152 bpt" {...TextBox152Props} {...TextBox152Cb} {...TextBox152IoProps}/>
+<Flex1 className="p-trial Flex140 bpt" {...Flex140Props} {...Flex140Cb} {...Flex140IoProps}>
+<TextBox1 className="p-trial TextBox148 bpt" {...TextBox148Props} {...TextBox148Cb} {...TextBox148IoProps}/>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+</Flex1>
+  </>);
+}
diff --git a/atri_app/app/src/styles.css b/atri_app/app/src/styles.css
new file mode 100644
index 0000000..830576d
--- /dev/null
+++ b/atri_app/app/src/styles.css
@@ -0,0 +1,4 @@
+* {
+  margin: 0;
+  padding: 0;
+}
diff --git a/atri_app/app/src/utils/callbackFactory.ts b/atri_app/app/src/utils/callbackFactory.ts
new file mode 100644
index 0000000..a4184b8
--- /dev/null
+++ b/atri_app/app/src/utils/callbackFactory.ts
@@ -0,0 +1,265 @@
+import useStore, { updateStoreStateFromController } from "../hooks/useStore";
+import useIoStore from "../hooks/useIoStore";
+import { navigateExternally, navigateInternally } from "./navigate";
+import { handleRedirection } from "./handleRedirection";
+import { eventHandlerEndpoint, formEventHandlerEndpoint } from "./endpoints";
+
+export type NavigationCallbackHandler = {
+  type: "internal" | "external";
+  url: string;
+  target?: "_blank" | "_self";
+};
+
+export type CallbackDef = {
+  handlers: (
+    | { sendEventData: boolean }
+    | {
+        sendFile: ({ self: boolean } | { alias: string }) & {
+          props: string[];
+        };
+      }
+    | { navigate: NavigationCallbackHandler }
+  )[];
+  actions: (
+    | { type: "do_nothing" }
+    | { type: "file_input"; selector: string[] }
+    | { type: "controlled"; selector: string[] }
+  )[];
+};
+
+function sendEventDataFn(
+  // alias of component on which event was fired
+  alias: string,
+  // name of the page in which the event was fired
+  pageName: string,
+  // route of the page in which the event was fired
+  pageRoute: string,
+  // name of the callback that fired this event
+  callbackName: string,
+  // data passed in the callback
+  eventData: any
+) {
+  const pageState = useStore.getState()[pageName];
+  return fetch(eventHandlerEndpoint, {
+    method: "POST",
+    headers: {
+      "Content-Type": "application/json",
+    },
+    body: JSON.stringify({
+      alias,
+      pageRoute,
+      callbackName,
+      eventData,
+      pageState,
+    }),
+  })
+    .then((res) => handleRedirection(res))
+    .then((res) => res.json())
+    .then((res) => {
+      if (res && res["pageState"])
+        updateStoreStateFromController(pageName, res["pageState"]);
+    });
+}
+
+function sendEventInFormDataFn(
+  alias: string,
+  pageName: string,
+  pageRoute: string,
+  callbackName: string,
+  eventData: any,
+  // information required to access file from useIoStore
+  filesMetadata: { alias: string; selector: string[] }[]
+) {
+  const pageState = useStore.getState()[pageName];
+  const formdata = new FormData();
+  formdata.set("alias", alias);
+  formdata.set("pageRoute", pageRoute);
+  formdata.set("callbackName", callbackName);
+  formdata.set("eventData", JSON.stringify(eventData));
+  formdata.set("pageState", JSON.stringify(pageState));
+  // append files in the same order as in filesMetadata
+  const selectedFileMetadata: {
+    alias: string;
+    selector: string[];
+    count: number;
+  }[] = [];
+  const selectedFilelists: FileList[] = [];
+  filesMetadata.forEach((fileMetadata) => {
+    const aliasProp = useIoStore.getState()[pageName][fileMetadata.alias];
+    if (aliasProp) {
+      const selector = fileMetadata.selector;
+      let curr = aliasProp;
+      for (let i = 0; i < selector.length; i++) {
+        if (curr[selector[i]]) {
+          if (
+            i === selector.length - 1 &&
+            curr[selector[i]] instanceof FileList
+          ) {
+            selectedFileMetadata.push({
+              ...fileMetadata,
+              count: curr[selector[i]].length,
+            });
+            selectedFilelists.push(curr[selector[i]]);
+          } else {
+            curr = curr[selector[i]];
+          }
+        } else {
+          break;
+        }
+      }
+    }
+  });
+  formdata.set("filesMetadata", JSON.stringify(selectedFileMetadata));
+  // all files will be appended in order [...filelist1, ...filelist2]
+  selectedFilelists.forEach((selectedFilelist) => {
+    for (let fileIndex = 0; fileIndex < selectedFilelist.length; fileIndex++) {
+      const file = selectedFilelist[fileIndex];
+      formdata.append(`files`, file);
+    }
+  });
+  return fetch(formEventHandlerEndpoint, {
+    method: "POST",
+    body: formdata,
+  })
+    .then((res) => handleRedirection(res))
+    .then((res) => res.json())
+    .then((res) => {
+      if (res) {
+        updateStoreStateFromController(pageName, res);
+      }
+    });
+}
+
+function updateAppStore(
+  alias: string,
+  pageName: string,
+  selector: string[],
+  eventData: any
+) {
+  const currentPageState = useStore.getState()[pageName];
+  const newCompState = JSON.parse(JSON.stringify(currentPageState[alias]));
+  let currObj = newCompState;
+  selector.forEach((sel, index) => {
+    if (index === selector.length - 1) {
+      currObj[sel] = eventData;
+    }
+    currObj = currObj[sel];
+  });
+  const newPageState = { ...currentPageState, [alias]: newCompState };
+  useStore.setState({ [pageName]: newPageState });
+}
+
+function updateAppIoStore(
+  alias: string,
+  pageName: string,
+  selector: string[],
+  eventData: any
+) {
+  const currentPageState = useIoStore.getState()[pageName];
+  const newCompState = JSON.parse(JSON.stringify(currentPageState[alias]));
+  // not all components will have an entry in ioStore
+  if (newCompState) {
+    let currObj = newCompState;
+    selector.forEach((sel, index) => {
+      if (index === selector.length - 1) {
+        currObj[sel] = eventData;
+      }
+      currObj = currObj[sel];
+    });
+    const newPageState = { ...currentPageState, [alias]: newCompState };
+    useIoStore.setState({ [pageName]: newPageState });
+    console.log("useIoStore", useIoStore.getState());
+  }
+}
+
+function handleNavigation(handle: CallbackDef["handlers"]["0"]) {
+  if ("navigate" in handle && handle.navigate.type === "internal") {
+    navigateInternally(handle.navigate.url);
+  } else if ("navigate" in handle && handle.navigate.type === "external") {
+    navigateExternally(handle.navigate.url, handle.navigate.target);
+  }
+}
+
+export function callbackFactory(
+  alias: string,
+  pageName: string,
+  pageRoute: string,
+  callbackName: string,
+  callbackDef: CallbackDef
+) {
+  const callbackFn = (eventData: any) => {
+    // actions will be executed first and then handlers will be called
+    const actions = callbackDef.actions;
+    actions.forEach((action) => {
+      if (action.type === "controlled") {
+        updateAppStore(alias, pageName, action.selector, eventData);
+      }
+      if (action.type === "file_input") {
+        updateAppIoStore(alias, pageName, action.selector, eventData);
+      }
+    });
+    const handlers = callbackDef.handlers;
+
+    /**
+     * Either one sendEventData job or multiple sendFiles job can be performed.
+     * Both cannot be performed in a single request.
+     *
+     * A navigate job is always preformed at last. A job that has been run prior
+     * to navigate can be either of sendEventData or sendFiles.
+     */
+    const jobs: {
+      // only one send event data
+      sendEventData?: CallbackDef["handlers"]["0"];
+      // many sendfiles
+      sendFiles?: CallbackDef["handlers"];
+      // only one navigation
+      navigate?: CallbackDef["handlers"]["0"];
+    } = {};
+
+    handlers.forEach((handler) => {
+      if (handler["sendEventData"]) {
+        jobs["sendEventData"] = handler;
+      }
+      if (handler["sendFile"]) {
+        if (jobs["sendFiles"]) {
+          jobs["sendFiles"].push(handler);
+        } else {
+          jobs["sendFiles"] = [handler];
+        }
+      }
+      if ("navigate" in handler) {
+        jobs["navigate"] = handler;
+      }
+    });
+
+    if (jobs["sendFiles"]) {
+      const filesMetadata = jobs["sendFiles"].map((handler) => {
+        const formFieldAlias = handler["sendFile"]["self"]
+          ? alias
+          : handler["sendFile"]["alias"];
+        const formFieldSelector = handler["sendFile"]["props"];
+        return { alias: formFieldAlias, selector: formFieldSelector };
+      });
+      sendEventInFormDataFn(
+        alias,
+        pageName,
+        pageRoute,
+        callbackName,
+        eventData,
+        filesMetadata
+      ).then(() => {
+        if (jobs["navigate"]) handleNavigation(jobs["navigate"]);
+      });
+    } else if (jobs["sendEventData"]) {
+      sendEventDataFn(alias, pageName, pageRoute, callbackName, eventData).then(
+        () => {
+          if (jobs["navigate"]) handleNavigation(jobs["navigate"]);
+        }
+      );
+    } else if (jobs["navigate"]) {
+      handleNavigation(jobs["navigate"]);
+    }
+  };
+
+  return callbackFn;
+}
diff --git a/atri_app/app/src/utils/endpoints.ts b/atri_app/app/src/utils/endpoints.ts
new file mode 100644
index 0000000..aa18272
--- /dev/null
+++ b/atri_app/app/src/utils/endpoints.ts
@@ -0,0 +1,9 @@
+import AppInfo from "../../../atri-app-info.json";
+
+const prefixUrl = AppInfo["prefixUrl"] ?? "";
+
+export const eventHandlerEndpoint = `${prefixUrl}/event-handler`;
+
+export const formEventHandlerEndpoint = `${prefixUrl}/event-in-form-handler`;
+
+export const pageRequestEndpoint = `${prefixUrl}/handle-page-request`;
diff --git a/atri_app/app/src/utils/fetchPageProps.ts b/atri_app/app/src/utils/fetchPageProps.ts
new file mode 100644
index 0000000..d644bcb
--- /dev/null
+++ b/atri_app/app/src/utils/fetchPageProps.ts
@@ -0,0 +1,14 @@
+import { pageRequestEndpoint } from "./endpoints";
+
+export function fetchPageProps(pageRoute: string, query: string) {
+  const payload = JSON.stringify({ pageRoute, query });
+  const options: RequestInit = {
+    method: "POST",
+    body: payload,
+    headers: {
+      "Content-Type": "application/json",
+      "Content-Length": payload.length.toString(),
+    },
+  };
+  return fetch(pageRequestEndpoint, options).then((res) => res.json());
+}
diff --git a/atri_app/app/src/utils/handleRedirection.ts b/atri_app/app/src/utils/handleRedirection.ts
new file mode 100644
index 0000000..54ce5ed
--- /dev/null
+++ b/atri_app/app/src/utils/handleRedirection.ts
@@ -0,0 +1,13 @@
+import { navigateExternally } from "./navigate";
+
+export function handleRedirection(res: Response) {
+  if (res.headers.get("location") || res.headers.get("Location")) {
+    const location = res.headers.get("location") || res.headers.get("Location");
+    if (location) {
+      // TODO: internal navigation if relative url
+      // handle page request will have query parameters attached to it
+      navigateExternally(location, "_self");
+    }
+  }
+  return res;
+}
diff --git a/atri_app/app/src/utils/navigate.ts b/atri_app/app/src/utils/navigate.ts
new file mode 100644
index 0000000..4f5dd10
--- /dev/null
+++ b/atri_app/app/src/utils/navigate.ts
@@ -0,0 +1,35 @@
+const internalNavigationSubscribers: ((url: string) => void)[] = [];
+
+export function subscribeInternalNavigation(cb: (url: string) => void) {
+  internalNavigationSubscribers.push(cb);
+  return () => {
+    const index = internalNavigationSubscribers.findIndex((curr) => {
+      return curr === cb;
+    });
+    if (index >= 0) {
+      internalNavigationSubscribers.splice(index, 1);
+    }
+  };
+}
+
+export function navigateInternally(url: string) {
+  internalNavigationSubscribers.forEach((cb) => cb(url));
+}
+
+/**
+ *
+ * Navigating externally implies page reload in browser, hence,
+ * we don't need to do it from inside react context.
+ */
+export function navigateExternally(url: string, target?: "_blank" | "_self") {
+  if (url.startsWith("/")) {
+    const newUrl = window.location.protocol + "//" + window.location.host + url;
+    window.open(newUrl, target);
+  } else {
+    try {
+      window.open(url, target);
+    } catch (err) {
+      console.log(err);
+    }
+  }
+}
diff --git a/atri_app/atri-app-env.d.ts b/atri_app/atri-app-env.d.ts
new file mode 100644
index 0000000..4aa9f5a
--- /dev/null
+++ b/atri_app/atri-app-env.d.ts
@@ -0,0 +1,79 @@
+/// <reference types="node" />
+/// <reference types="react" />
+/// <reference types="react-dom" />
+
+declare const currentLayer: string;
+
+// types borrowed from create-react-app
+declare namespace NodeJS {
+	interface ProcessEnv {
+		readonly NODE_ENV: "development" | "production" | "test";
+		readonly PUBLIC_URL: string;
+	}
+}
+
+declare module "*.avif" {
+	const src: string;
+	export default src;
+}
+
+declare module "*.bmp" {
+	const src: string;
+	export default src;
+}
+
+declare module "*.gif" {
+	const src: string;
+	export default src;
+}
+
+declare module "*.jpg" {
+	const src: string;
+	export default src;
+}
+
+declare module "*.jpeg" {
+	const src: string;
+	export default src;
+}
+
+declare module "*.png" {
+	const src: string;
+	export default src;
+}
+
+declare module "*.webp" {
+	const src: string;
+	export default src;
+}
+
+declare module "*.svg" {
+	import * as React from "react";
+
+	export const ReactComponent: React.FunctionComponent<
+		React.SVGProps<SVGSVGElement> & { title?: string }
+	>;
+
+	const src: string;
+	export default src;
+}
+
+declare module "*.module.css" {
+	const classes: { readonly [key: string]: string };
+	export default classes;
+}
+
+declare module "*.module.scss" {
+	const classes: { readonly [key: string]: string };
+	export default classes;
+}
+
+declare module "*.module.sass" {
+	const classes: { readonly [key: string]: string };
+	export default classes;
+}
+
+declare module "*?id" {
+	const src: string;
+	export default src;
+}
diff --git a/atri_app/atri-app-info.json b/atri_app/atri-app-info.json
new file mode 100644
index 0000000..958baa4
--- /dev/null
+++ b/atri_app/atri-app-info.json
@@ -0,0 +1,3 @@
+{
+  "prefixUrl": ""
+}
diff --git a/atri_app/atri-build-info.json b/atri_app/atri-build-info.json
new file mode 100644
index 0000000..4881504
--- /dev/null
+++ b/atri_app/atri-build-info.json
@@ -0,0 +1,16 @@
+{
+  "appSrc": "app/src",
+  "appEntry": "app/src/index.jsx",
+  "appHtml": "app/public/index.html",
+  "appOutput": "dist/app",
+  "serverSrc": "app-node/src",
+  "serverEntry": "app-node/src/getAppText.tsx",
+  "serverSideEntry": "app/src/hooks/useStore.js",
+  "serverOutput": "dist/app-node",
+  "manifestDirs": [
+    {
+      "pkg": "@atrilabs/react-component-manifests"
+    }
+  ],
+  "assetUrlPrefix": ""
+}
\ No newline at end of file
diff --git a/atri_app/atri-server-info.json b/atri_app/atri-server-info.json
new file mode 100644
index 0000000..c2ec83e
--- /dev/null
+++ b/atri_app/atri-server-info.json
@@ -0,0 +1,19 @@
+{
+  "port": 4005,
+  "pythonPort": 4007,
+  "publicDir": "dist/app",
+  "pages": {
+    "/": {
+      "name": "Home"
+    },
+    "/trial": {
+      "name": "trial"
+    },
+    "/Showcase": {
+      "name": "Showcase"
+    }
+  },
+  "publicUrlAssetMap": {
+    "/app-assets": "../assets"
+  }
+}
\ No newline at end of file
diff --git a/atri_app/package.json b/atri_app/package.json
new file mode 100644
index 0000000..b214033
--- /dev/null
+++ b/atri_app/package.json
@@ -0,0 +1,30 @@
+{
+  "name": "atri-react-app-template",
+  "version": "0.0.0",
+  "private": "true",
+  "scripts": {
+    "buildApp": "atri-react-app-build-app",
+    "buildAppNode": "atri-react-app-build-server",
+    "buildServer": "cd server && tsc",
+    "build": "yarn run buildApp && yarn run buildAppNode",
+    "devServer": "node dist/server/index.js --dev",
+    "server": "node dist/server/index.js",
+    "dev": "atri-react-app-dev-server"
+  },
+  "dependencies": {
+    "@atrilabs/app-scripts": "^0.0.84",
+    "@atrilabs/core": "^0.0.84",
+    "chokidar": "^3.5.3",
+    "http-proxy-middleware": "^2.0.6",
+    "react": "18.0.0",
+    "react-dom": "18.0.0",
+    "react-router-dom": "^6.3.0",
+    "ws": "^8.8.0",
+    "zustand": "^4.0.0-rc.1",
+    "@atrilabs/react-component-manifests": "^0.0.84"
+  },
+  "devDependencies": {
+    "eslint-config-prettier": "^8.5.0",
+    "eslint-config-react-app": "^7.0.1"
+  }
+}
\ No newline at end of file
diff --git a/atri_app/server/src/forwarder.ts b/atri_app/server/src/forwarder.ts
new file mode 100644
index 0000000..2960271
--- /dev/null
+++ b/atri_app/server/src/forwarder.ts
@@ -0,0 +1,69 @@
+import http from "http";
+import { Request } from "express";
+
+export function forwardGetPageRequest(params: {
+  pageState: any;
+  pageRoute: string;
+  query: string;
+  controllerHostname: string;
+  controllerPort: number;
+  req: Request;
+}) {
+  return new Promise<{ pageState: any; headers: any; statusCode: number }>(
+    (res, rej) => {
+      const {
+        pageState,
+        pageRoute,
+        controllerHostname,
+        controllerPort,
+        req,
+        query,
+      } = params;
+      const payload = JSON.stringify({
+        route: pageRoute,
+        state: pageState,
+        query,
+      });
+      const forward_req = http.request(
+        {
+          hostname: controllerHostname,
+          port: controllerPort,
+          path: "/handle-page-request",
+          method: "POST",
+          headers: {
+            ...req.headers,
+            "Content-Type": "application/json",
+            "Content-Length": payload.length,
+            "Transfer-Encoding": "chunked",
+          },
+        },
+        (forward_res) => {
+          forward_res.setEncoding("utf8");
+          let data = "";
+          forward_res.on("data", (chunk) => {
+            data = data + chunk;
+          });
+          forward_res.on("end", () => {
+            try {
+              const newPageState = JSON.parse(data);
+              res({
+                pageState: newPageState,
+                headers: forward_res.headers,
+                statusCode: forward_res.statusCode || 200,
+              });
+            } catch (err) {
+              console.log("Unexpected Forward Response\n", err);
+              rej(501);
+            }
+          });
+        }
+      );
+      forward_req.on("error", (e) => {
+        console.error(`problem with request: ${e.message}`);
+        rej(501);
+      });
+      forward_req.write(payload);
+      forward_req.end();
+    }
+  );
+}
diff --git a/atri_app/server/src/index.tsx b/atri_app/server/src/index.tsx
new file mode 100644
index 0000000..cf1f925
--- /dev/null
+++ b/atri_app/server/src/index.tsx
@@ -0,0 +1,221 @@
+import {
+  createIfNotExistLocalCache,
+  createWebSocketServer,
+  isDevelopment,
+  getIndexHtmlContent,
+  getPageFromCache,
+  getServerInfo,
+  sendReloadMessage,
+  storePageInCache,
+  findNearestNodeModulesDirectory,
+} from "./utils";
+import express from "express";
+import path from "path";
+import http from "http";
+import { createProxyMiddleware } from "http-proxy-middleware";
+import { watch } from "chokidar";
+import { forwardGetPageRequest } from "./forwarder";
+
+// @ts-ignore
+global.window = undefined;
+
+// constants needed externally
+const serverInfo = getServerInfo(__dirname);
+const nodeModulesPath = findNearestNodeModulesDirectory(__dirname, null);
+const watcher = watch([
+  path.resolve(nodeModulesPath, "..", "atri-server-info.json"),
+]);
+
+watcher.on("change", () => {
+  const { pages } = getServerInfo(__dirname);
+  serverInfo.pages = pages;
+});
+
+const appDistHtml = path.resolve(serverInfo.publicDir, "index.html");
+
+const [controllerHostnameRaw, controllerPortRaw] = (
+  serverInfo.controllerHost || ""
+).split(":");
+const controllerHostname = controllerHostnameRaw || "0.0.0.0";
+const controllerPort = controllerPortRaw
+  ? parseInt(controllerPortRaw)
+  : serverInfo.pythonPort;
+
+createIfNotExistLocalCache();
+
+const app = express();
+const server = http.createServer(app);
+createWebSocketServer(server);
+
+app.use((req, res, next) => {
+  console.log("request received", req.originalUrl, req.path);
+  if (req.method === "GET" && serverInfo.pages[req.path]) {
+    if (!isDevelopment) {
+      const finalTextFromCache = getPageFromCache(req.path);
+      if (finalTextFromCache) {
+        res.send(finalTextFromCache);
+        return;
+      }
+    }
+    // read again App.jsx for dev server
+    const getAppTextPath = path.resolve(
+      __dirname,
+      "..",
+      "app-node",
+      "static",
+      "js",
+      "app.bundle.js"
+    );
+    delete require.cache[getAppTextPath];
+    const getAppText = require(getAppTextPath)["getAppText"]["getAppText"];
+    const appHtmlContent = getIndexHtmlContent(appDistHtml);
+    const finalText = getAppText(req.path, appHtmlContent);
+    res.send(finalText);
+    storePageInCache(req.path, finalText);
+  } else {
+    next();
+  }
+});
+
+app.post("/event-handler", express.json({ limit: "50mb" }), (req, res) => {
+  const pageRoute = req.body["pageRoute"];
+  const pageState = req.body["pageState"];
+  const alias = req.body["alias"];
+  const callbackName = req.body["callbackName"];
+  const eventData = req.body["eventData"];
+  if (
+    typeof pageRoute !== "string" ||
+    typeof pageState !== "object" ||
+    typeof alias !== "string" ||
+    typeof callbackName !== "string"
+  ) {
+    res.status(400).send();
+    return;
+  }
+  // TODO: update pageState if success python call otherwise 501
+  const payload = JSON.stringify({
+    route: pageRoute,
+    state: pageState,
+    alias,
+    callbackName,
+    eventData,
+  });
+  const forward_req = http.request(
+    {
+      hostname: controllerHostname,
+      port: controllerPort,
+      path: "/event",
+      method: "POST",
+      headers: {
+        ...req.headers,
+        "Content-Type": "application/json",
+        "Content-Length": payload.length,
+        "Transfer-Encoding": "chunked",
+      },
+    },
+    (forward_res) => {
+      forward_res.setEncoding("utf8");
+      let data = "";
+      forward_res.on("data", (chunk) => {
+        data = data + chunk;
+      });
+      forward_res.on("end", () => {
+        try {
+          // copy headers
+          Object.keys(forward_res.headers).forEach((key) => {
+            res.setHeader(key, forward_res.headers[key]!);
+          });
+          const newPageState = JSON.parse(data);
+          // copy status code
+          const statusCode = forward_res.statusCode || 200;
+          res.status(statusCode).send({ pageState: newPageState });
+        } catch (err) {
+          console.log("Unexpected Forward Response\n", err);
+          res.status(501).send();
+        }
+      });
+    }
+  );
+  forward_req.on("error", (e) => {
+    console.error(`problem with request: ${e.message}`);
+    res.status(501).send();
+  });
+  forward_req.write(payload);
+  forward_req.end();
+});
+
+app.post(
+  "/handle-page-request",
+  express.json({ limit: "50mb" }),
+  (req, res) => {
+    const pageRoute = req.body["pageRoute"];
+    const query = req.body["query"];
+    const useStorePath = path.resolve(
+      __dirname,
+      "..",
+      "app-node",
+      "static",
+      "js",
+      "serverSide.bundle.js"
+    );
+    delete require.cache[useStorePath];
+    const pageState =
+      require(useStorePath)["getAppText"]["default"]["getState"]()[
+        serverInfo.pages[pageRoute].name
+      ];
+    forwardGetPageRequest({
+      pageRoute: pageRoute,
+      query,
+      pageState: pageState,
+      controllerHostname,
+      controllerPort,
+      req,
+    })
+      .then((val) => {
+        // copy headers
+        Object.keys(val.headers).forEach((key) => {
+          res.setHeader(key, val.headers[key]);
+        });
+        // copy status code
+        res
+          .status(val.statusCode)
+          .send({ ...val, pageName: serverInfo.pages[pageRoute].name });
+      })
+      .catch((err) => {
+        console.log("Forward failed", err);
+        res.status(err).send();
+      });
+  }
+);
+
+app.use(
+  "/event-in-form-handler",
+  createProxyMiddleware({
+    target: `http://${controllerHostname}:${controllerPort}`,
+  })
+);
+
+app.post("/reload-all-dev-sockets", (_req, res) => {
+  console.log("received request to reload all sockets");
+  sendReloadMessage();
+  res.send();
+});
+
+Object.keys(serverInfo.publicUrlAssetMap).forEach((url) => {
+  app.use(url, express.static(serverInfo.publicUrlAssetMap[url]!));
+});
+
+app.use(express.static(serverInfo.publicDir));
+
+server.listen(serverInfo.port, () => {
+  const address = server.address();
+  if (typeof address === "object" && address !== null) {
+    let port = address.port;
+    let ip = address.address;
+    console.log(`[ATRI_SERVER] listening on http://${ip}:${port}`);
+  } else if (typeof address === "string") {
+    console.log(`[ATRI_SERVER] listening on http://${address}`);
+  } else {
+    console.log(`[ATRI_SERVER] cannot listen on ${serverInfo.port}`);
+  }
+});
diff --git a/atri_app/server/src/utils.tsx b/atri_app/server/src/utils.tsx
new file mode 100644
index 0000000..88c6c1a
--- /dev/null
+++ b/atri_app/server/src/utils.tsx
@@ -0,0 +1,115 @@
+import path from "path";
+import fs from "fs";
+import { WebSocketServer, WebSocket } from "ws";
+import { Server } from "http";
+import type { ServerInfo } from "@atrilabs/core";
+
+// create local cache directory if not already created
+const localCache = path.resolve(__dirname, ".cache");
+const pagesCache = path.resolve(localCache, "pages");
+const gitIgnoreLocalCache = path.resolve(localCache, ".gitignore");
+export function createIfNotExistLocalCache() {
+  if (!fs.existsSync(localCache)) {
+    fs.mkdirSync(localCache, { recursive: true });
+  }
+  if (!fs.existsSync(gitIgnoreLocalCache)) {
+    fs.writeFileSync(gitIgnoreLocalCache, "*");
+  }
+}
+
+function getPageDirPath(url: string) {
+  return path.resolve(pagesCache, url.slice(1));
+}
+
+function getPageFilePath(url: string) {
+  return path.resolve(getPageDirPath(url), "index.html");
+}
+
+export function storePageInCache(url: string, html: string) {
+  const pageDirPath = getPageDirPath(url);
+  const pageFilePath = getPageFilePath(url);
+  if (!fs.existsSync(pageDirPath)) {
+    fs.mkdirSync(pageDirPath, { recursive: true });
+  }
+  fs.writeFileSync(pageFilePath, html);
+}
+
+export function getPageFromCache(url: string): string | null {
+  const pageFilePath = getPageFilePath(url);
+  if (!fs.existsSync(pageFilePath)) {
+    return null;
+  }
+  return fs.readFileSync(pageFilePath).toString();
+}
+
+let indexHtmlContent = "";
+export const isDevelopment = process.argv.includes("--dev");
+export function getIndexHtmlContent(appHtml: string) {
+  if (indexHtmlContent === "" || isDevelopment) {
+    if (fs.existsSync(appHtml)) {
+      indexHtmlContent = fs.readFileSync(appHtml).toString();
+    } else {
+      console.log("ERROR: app's index.html file is missing");
+    }
+  }
+  return indexHtmlContent;
+}
+
+export function findNearestNodeModulesDirectory(
+  startDir: string,
+  prevDir: string | null
+): string {
+  if (fs.existsSync(path.resolve(startDir, "node_modules"))) {
+    return path.resolve(startDir, "node_modules");
+  }
+  // We are the root directory
+  if (startDir === prevDir) {
+    throw Error("Could not find node_modules directory");
+  }
+  return findNearestNodeModulesDirectory(
+    path.resolve(startDir, ".."),
+    startDir
+  );
+}
+
+export function getServerInfo(startDir: string): ServerInfo {
+  const nodeModulesPath = findNearestNodeModulesDirectory(startDir, null);
+  const serverInfoPath = path.resolve(
+    nodeModulesPath,
+    "..",
+    "atri-server-info.json"
+  );
+  const serverInfo = JSON.parse(fs.readFileSync(serverInfoPath).toString());
+  return {
+    port: parseInt(process.env["PORT"] || "") || serverInfo["port"],
+    pythonPort: serverInfo["pythonPort"],
+    publicDir: serverInfo["publicDir"],
+    pages: serverInfo["pages"],
+    publicUrlAssetMap: serverInfo["publicUrlAssetMap"],
+    controllerHost: process.env["ATRI_CONTROLLER_HOST"],
+  };
+}
+
+const wsSockets: WebSocket[] = [];
+export function createWebSocketServer(server: Server) {
+  const wsServer = new WebSocketServer({ server });
+  wsServer.on("connection", (ws) => {
+    wsSockets.push(ws);
+    ws.on("close", () => {
+      const index = wsSockets.findIndex((curr) => curr === ws);
+      if (index >= 0) {
+        wsSockets.splice(index, 1);
+      }
+    });
+  });
+}
+
+export function sendReloadMessage() {
+  wsSockets.forEach((ws) => {
+    ws.send("reload", (err) => {
+      if (err) {
+        console.log("failed to send reload message\n", err);
+      }
+    });
+  });
+}
diff --git a/atri_app/server/tsconfig.json b/atri_app/server/tsconfig.json
new file mode 100644
index 0000000..f731f0c
--- /dev/null
+++ b/atri_app/server/tsconfig.json
@@ -0,0 +1,28 @@
+{
+  "compilerOptions": {
+    "outDir": "../dist/server",
+    "rootDir": "src",
+    "skipLibCheck": true,
+    "jsx": "react-jsx",
+    "target": "es5",
+    "module": "commonjs",
+    "noEmit": false,
+    "esModuleInterop": true,
+    "allowJs": true,
+    "strict": true,
+    "noImplicitAny": true,
+    "noImplicitThis": true,
+    "alwaysStrict": true,
+    "noUnusedLocals": true,
+    "noUnusedParameters": true,
+    "noImplicitReturns": true,
+    "noFallthroughCasesInSwitch": true,
+    "noUncheckedIndexedAccess": true,
+    "noImplicitOverride": true,
+    "noPropertyAccessFromIndexSignature": true,
+    "allowSyntheticDefaultImports": true,
+    "moduleResolution": "node"
+  },
+  "include": ["src"],
+  "exclude": ["node_modules"]
+}
diff --git a/controllers/routes/Showcase/atri.py b/controllers/routes/Showcase/atri.py
new file mode 100644
index 0000000..4ddf319
--- /dev/null
+++ b/controllers/routes/Showcase/atri.py
@@ -0,0 +1,8491 @@
+import json
+from typing import List, Any, Optional
+from fastapi import UploadFile
+default_state = json.loads('{"Flex462":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Overlay3":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"closeModalAfter":0,"open":false}},"Flex786":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex784":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex779":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex770":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex771":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex780":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex772":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex773":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex781":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex774":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex775":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex782":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex776":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex777":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex785":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex783":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex778":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex769":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex766":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex767":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Tag_Flex_1":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Tag_Flex_2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Tag_Flex_3":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex768":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex764":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex765":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex463":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex466":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex467":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter1":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter3":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter4":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter5":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter6":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter7":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter8":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Filter9":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex468":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex469":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_1":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex481":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex482":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex483":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_1_a":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_1_b":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_1_c":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex484":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex485":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex486":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex528":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex525":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex523":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex524":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex527":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex657":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_2_c":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_2_b":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_2_a":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_3":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex535":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex532":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex534":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex530":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex531":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex661":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_3_c":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_3_b":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_3_a":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex646":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_6":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex640":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex632":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex625":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex626":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex633":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex673":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_6_c":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_6_b":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_6_a":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_5":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex641":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex635":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex636":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex627":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex628":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex669":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_5_c":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_5_b":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_5_a":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_4":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex642":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex637":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex629":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex630":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex639":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex665":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_4_c":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_4_b":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Card_Tag_4_a":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex674":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex675":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex706":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex624":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex621":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex620":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Menu7":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Flex618":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex619":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex623":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex647":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex705":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex702":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex703":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex699":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex692":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex704":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex700":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex693":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex687":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex686":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex685":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex694":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex701":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex695":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex688":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex696":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex689":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex697":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex690":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex698":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex691":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"TextBox361":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox362":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Button116":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Button235":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"TextBox499":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input19":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Input20":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox500":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox501":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input21":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Input22":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox502":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox503":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input23":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox504":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input24":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox505":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Upload3":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"TextBox506":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Upload4":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"TextBox507":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image319":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image318":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox497":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox498":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Tag_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Tag_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Tag_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Image315":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image316":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image317":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox496":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox363":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox364":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Filter_Btn_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_7":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_8":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Filter_Btn_9":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Image_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Title_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Text_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Tag_1_a_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_1_b_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_1_c_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Github_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Deploy_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Image_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Name_1":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Image_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Name_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Creator_Image_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Deploy_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Github_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Text_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Title_2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Tag_2_c_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_2_b_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_2_a_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Image_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Title_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Text_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Github_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Deploy_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Image_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Name_3":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Tag_3_c_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_3_b_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_3_a_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Image_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Name_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Creator_Image_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Deploy_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Github_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Text_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Title_6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Tag_6_c_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_6_b_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_6_a_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Image_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Title_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Text_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Github_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Deploy_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Image_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Name_5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Tag_5_c_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_5_b_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_5_a_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Image_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Creator_Name_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Creator_Image_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Deploy_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Github_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Card_Text_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Title_4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Card_Tag_4_c_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_4_b_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Card_Tag_4_a_Text":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Image303":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image304":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox474":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox453":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image278":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox430":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox431":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Button200":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"TextBox438":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image279":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox448":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox449":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox450":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox451":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image300":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox472":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox466":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox467":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox456":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image295":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox455":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image294":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image296":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image297":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image298":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image299":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox468":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox457":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox469":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox458":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox459":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox460":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox470":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox461":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox462":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox463":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox471":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox464":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox465":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}}}')
+def get_defined_value(state, def_state, key):
+	return state[key] if key in state else def_state[key]
+class Atri:
+	def __init__(self, state: Any):
+		self.event_data = None
+		self.event_alias = None
+		global default_state
+		self._setter_access_tracker = {}
+		self.Flex462 = state["Flex462"]
+		self.Overlay3 = state["Overlay3"]
+		self.Flex786 = state["Flex786"]
+		self.Flex784 = state["Flex784"]
+		self.Flex779 = state["Flex779"]
+		self.Flex770 = state["Flex770"]
+		self.Flex771 = state["Flex771"]
+		self.Flex780 = state["Flex780"]
+		self.Flex772 = state["Flex772"]
+		self.Flex773 = state["Flex773"]
+		self.Flex781 = state["Flex781"]
+		self.Flex774 = state["Flex774"]
+		self.Flex775 = state["Flex775"]
+		self.Flex782 = state["Flex782"]
+		self.Flex776 = state["Flex776"]
+		self.Flex777 = state["Flex777"]
+		self.Flex785 = state["Flex785"]
+		self.Flex783 = state["Flex783"]
+		self.Flex778 = state["Flex778"]
+		self.Flex769 = state["Flex769"]
+		self.Flex766 = state["Flex766"]
+		self.Flex767 = state["Flex767"]
+		self.Tag_Flex_1 = state["Tag_Flex_1"]
+		self.Tag_Flex_2 = state["Tag_Flex_2"]
+		self.Tag_Flex_3 = state["Tag_Flex_3"]
+		self.Flex768 = state["Flex768"]
+		self.Flex764 = state["Flex764"]
+		self.Flex765 = state["Flex765"]
+		self.Flex463 = state["Flex463"]
+		self.Flex466 = state["Flex466"]
+		self.Flex467 = state["Flex467"]
+		self.Filter1 = state["Filter1"]
+		self.Filter2 = state["Filter2"]
+		self.Filter3 = state["Filter3"]
+		self.Filter4 = state["Filter4"]
+		self.Filter5 = state["Filter5"]
+		self.Filter6 = state["Filter6"]
+		self.Filter7 = state["Filter7"]
+		self.Filter8 = state["Filter8"]
+		self.Filter9 = state["Filter9"]
+		self.Flex468 = state["Flex468"]
+		self.Flex469 = state["Flex469"]
+		self.Card_1 = state["Card_1"]
+		self.Flex481 = state["Flex481"]
+		self.Flex482 = state["Flex482"]
+		self.Flex483 = state["Flex483"]
+		self.Card_Tag_1_a = state["Card_Tag_1_a"]
+		self.Card_Tag_1_b = state["Card_Tag_1_b"]
+		self.Card_Tag_1_c = state["Card_Tag_1_c"]
+		self.Flex484 = state["Flex484"]
+		self.Flex485 = state["Flex485"]
+		self.Flex486 = state["Flex486"]
+		self.Card_2 = state["Card_2"]
+		self.Flex528 = state["Flex528"]
+		self.Flex525 = state["Flex525"]
+		self.Flex523 = state["Flex523"]
+		self.Flex524 = state["Flex524"]
+		self.Flex527 = state["Flex527"]
+		self.Flex657 = state["Flex657"]
+		self.Card_Tag_2_c = state["Card_Tag_2_c"]
+		self.Card_Tag_2_b = state["Card_Tag_2_b"]
+		self.Card_Tag_2_a = state["Card_Tag_2_a"]
+		self.Card_3 = state["Card_3"]
+		self.Flex535 = state["Flex535"]
+		self.Flex532 = state["Flex532"]
+		self.Flex534 = state["Flex534"]
+		self.Flex530 = state["Flex530"]
+		self.Flex531 = state["Flex531"]
+		self.Flex661 = state["Flex661"]
+		self.Card_Tag_3_c = state["Card_Tag_3_c"]
+		self.Card_Tag_3_b = state["Card_Tag_3_b"]
+		self.Card_Tag_3_a = state["Card_Tag_3_a"]
+		self.Flex646 = state["Flex646"]
+		self.Card_6 = state["Card_6"]
+		self.Flex640 = state["Flex640"]
+		self.Flex632 = state["Flex632"]
+		self.Flex625 = state["Flex625"]
+		self.Flex626 = state["Flex626"]
+		self.Flex633 = state["Flex633"]
+		self.Flex673 = state["Flex673"]
+		self.Card_Tag_6_c = state["Card_Tag_6_c"]
+		self.Card_Tag_6_b = state["Card_Tag_6_b"]
+		self.Card_Tag_6_a = state["Card_Tag_6_a"]
+		self.Card_5 = state["Card_5"]
+		self.Flex641 = state["Flex641"]
+		self.Flex635 = state["Flex635"]
+		self.Flex636 = state["Flex636"]
+		self.Flex627 = state["Flex627"]
+		self.Flex628 = state["Flex628"]
+		self.Flex669 = state["Flex669"]
+		self.Card_Tag_5_c = state["Card_Tag_5_c"]
+		self.Card_Tag_5_b = state["Card_Tag_5_b"]
+		self.Card_Tag_5_a = state["Card_Tag_5_a"]
+		self.Card_4 = state["Card_4"]
+		self.Flex642 = state["Flex642"]
+		self.Flex637 = state["Flex637"]
+		self.Flex629 = state["Flex629"]
+		self.Flex630 = state["Flex630"]
+		self.Flex639 = state["Flex639"]
+		self.Flex665 = state["Flex665"]
+		self.Card_Tag_4_c = state["Card_Tag_4_c"]
+		self.Card_Tag_4_b = state["Card_Tag_4_b"]
+		self.Card_Tag_4_a = state["Card_Tag_4_a"]
+		self.Flex674 = state["Flex674"]
+		self.Flex675 = state["Flex675"]
+		self.Flex706 = state["Flex706"]
+		self.Flex624 = state["Flex624"]
+		self.Flex621 = state["Flex621"]
+		self.Flex620 = state["Flex620"]
+		self.Menu7 = state["Menu7"]
+		self.Flex618 = state["Flex618"]
+		self.Flex619 = state["Flex619"]
+		self.Flex623 = state["Flex623"]
+		self.Flex647 = state["Flex647"]
+		self.Flex705 = state["Flex705"]
+		self.Flex702 = state["Flex702"]
+		self.Flex703 = state["Flex703"]
+		self.Flex699 = state["Flex699"]
+		self.Flex692 = state["Flex692"]
+		self.Flex704 = state["Flex704"]
+		self.Flex700 = state["Flex700"]
+		self.Flex693 = state["Flex693"]
+		self.Flex687 = state["Flex687"]
+		self.Flex686 = state["Flex686"]
+		self.Flex685 = state["Flex685"]
+		self.Flex694 = state["Flex694"]
+		self.Flex701 = state["Flex701"]
+		self.Flex695 = state["Flex695"]
+		self.Flex688 = state["Flex688"]
+		self.Flex696 = state["Flex696"]
+		self.Flex689 = state["Flex689"]
+		self.Flex697 = state["Flex697"]
+		self.Flex690 = state["Flex690"]
+		self.Flex698 = state["Flex698"]
+		self.Flex691 = state["Flex691"]
+		self.TextBox361 = state["TextBox361"]
+		self.TextBox362 = state["TextBox362"]
+		self.Button116 = state["Button116"]
+		self.Button235 = state["Button235"]
+		self.TextBox499 = state["TextBox499"]
+		self.Input19 = state["Input19"]
+		self.Input20 = state["Input20"]
+		self.TextBox500 = state["TextBox500"]
+		self.TextBox501 = state["TextBox501"]
+		self.Input21 = state["Input21"]
+		self.Input22 = state["Input22"]
+		self.TextBox502 = state["TextBox502"]
+		self.TextBox503 = state["TextBox503"]
+		self.Input23 = state["Input23"]
+		self.TextBox504 = state["TextBox504"]
+		self.Input24 = state["Input24"]
+		self.TextBox505 = state["TextBox505"]
+		self.Upload3 = state["Upload3"]
+		self.TextBox506 = state["TextBox506"]
+		self.Upload4 = state["Upload4"]
+		self.TextBox507 = state["TextBox507"]
+		self.Image319 = state["Image319"]
+		self.Image318 = state["Image318"]
+		self.TextBox497 = state["TextBox497"]
+		self.TextBox498 = state["TextBox498"]
+		self.Tag_1 = state["Tag_1"]
+		self.Tag_2 = state["Tag_2"]
+		self.Tag_3 = state["Tag_3"]
+		self.Image315 = state["Image315"]
+		self.Image316 = state["Image316"]
+		self.Image317 = state["Image317"]
+		self.TextBox496 = state["TextBox496"]
+		self.TextBox363 = state["TextBox363"]
+		self.TextBox364 = state["TextBox364"]
+		self.Filter_Btn_1 = state["Filter_Btn_1"]
+		self.Filter_Btn_2 = state["Filter_Btn_2"]
+		self.Filter_Btn_3 = state["Filter_Btn_3"]
+		self.Filter_Btn_4 = state["Filter_Btn_4"]
+		self.Filter_Btn_5 = state["Filter_Btn_5"]
+		self.Filter_Btn_6 = state["Filter_Btn_6"]
+		self.Filter_Btn_7 = state["Filter_Btn_7"]
+		self.Filter_Btn_8 = state["Filter_Btn_8"]
+		self.Filter_Btn_9 = state["Filter_Btn_9"]
+		self.Card_Image_1 = state["Card_Image_1"]
+		self.Card_Title_1 = state["Card_Title_1"]
+		self.Card_Text_1 = state["Card_Text_1"]
+		self.Card_Tag_1_a_Text = state["Card_Tag_1_a_Text"]
+		self.Card_Tag_1_b_Text = state["Card_Tag_1_b_Text"]
+		self.Card_Tag_1_c_Text = state["Card_Tag_1_c_Text"]
+		self.Card_Github_1 = state["Card_Github_1"]
+		self.Card_Deploy_1 = state["Card_Deploy_1"]
+		self.Card_Creator_Image_1 = state["Card_Creator_Image_1"]
+		self.Card_Creator_Name_1 = state["Card_Creator_Name_1"]
+		self.Card_Image_2 = state["Card_Image_2"]
+		self.Card_Creator_Name_2 = state["Card_Creator_Name_2"]
+		self.Card_Creator_Image_2 = state["Card_Creator_Image_2"]
+		self.Card_Deploy_2 = state["Card_Deploy_2"]
+		self.Card_Github_2 = state["Card_Github_2"]
+		self.Card_Text_2 = state["Card_Text_2"]
+		self.Card_Title_2 = state["Card_Title_2"]
+		self.Card_Tag_2_c_Text = state["Card_Tag_2_c_Text"]
+		self.Card_Tag_2_b_Text = state["Card_Tag_2_b_Text"]
+		self.Card_Tag_2_a_Text = state["Card_Tag_2_a_Text"]
+		self.Card_Image_3 = state["Card_Image_3"]
+		self.Card_Title_3 = state["Card_Title_3"]
+		self.Card_Text_3 = state["Card_Text_3"]
+		self.Card_Github_3 = state["Card_Github_3"]
+		self.Card_Deploy_3 = state["Card_Deploy_3"]
+		self.Card_Creator_Image_3 = state["Card_Creator_Image_3"]
+		self.Card_Creator_Name_3 = state["Card_Creator_Name_3"]
+		self.Card_Tag_3_c_Text = state["Card_Tag_3_c_Text"]
+		self.Card_Tag_3_b_Text = state["Card_Tag_3_b_Text"]
+		self.Card_Tag_3_a_Text = state["Card_Tag_3_a_Text"]
+		self.Card_Image_6 = state["Card_Image_6"]
+		self.Card_Creator_Name_6 = state["Card_Creator_Name_6"]
+		self.Card_Creator_Image_6 = state["Card_Creator_Image_6"]
+		self.Card_Deploy_6 = state["Card_Deploy_6"]
+		self.Card_Github_6 = state["Card_Github_6"]
+		self.Card_Text_6 = state["Card_Text_6"]
+		self.Card_Title_6 = state["Card_Title_6"]
+		self.Card_Tag_6_c_Text = state["Card_Tag_6_c_Text"]
+		self.Card_Tag_6_b_Text = state["Card_Tag_6_b_Text"]
+		self.Card_Tag_6_a_Text = state["Card_Tag_6_a_Text"]
+		self.Card_Image_5 = state["Card_Image_5"]
+		self.Card_Title_5 = state["Card_Title_5"]
+		self.Card_Text_5 = state["Card_Text_5"]
+		self.Card_Github_5 = state["Card_Github_5"]
+		self.Card_Deploy_5 = state["Card_Deploy_5"]
+		self.Card_Creator_Image_5 = state["Card_Creator_Image_5"]
+		self.Card_Creator_Name_5 = state["Card_Creator_Name_5"]
+		self.Card_Tag_5_c_Text = state["Card_Tag_5_c_Text"]
+		self.Card_Tag_5_b_Text = state["Card_Tag_5_b_Text"]
+		self.Card_Tag_5_a_Text = state["Card_Tag_5_a_Text"]
+		self.Card_Image_4 = state["Card_Image_4"]
+		self.Card_Creator_Name_4 = state["Card_Creator_Name_4"]
+		self.Card_Creator_Image_4 = state["Card_Creator_Image_4"]
+		self.Card_Deploy_4 = state["Card_Deploy_4"]
+		self.Card_Github_4 = state["Card_Github_4"]
+		self.Card_Text_4 = state["Card_Text_4"]
+		self.Card_Title_4 = state["Card_Title_4"]
+		self.Card_Tag_4_c_Text = state["Card_Tag_4_c_Text"]
+		self.Card_Tag_4_b_Text = state["Card_Tag_4_b_Text"]
+		self.Card_Tag_4_a_Text = state["Card_Tag_4_a_Text"]
+		self.Image303 = state["Image303"]
+		self.Image304 = state["Image304"]
+		self.TextBox474 = state["TextBox474"]
+		self.TextBox453 = state["TextBox453"]
+		self.Image278 = state["Image278"]
+		self.TextBox430 = state["TextBox430"]
+		self.TextBox431 = state["TextBox431"]
+		self.Button200 = state["Button200"]
+		self.TextBox438 = state["TextBox438"]
+		self.Image279 = state["Image279"]
+		self.TextBox448 = state["TextBox448"]
+		self.TextBox449 = state["TextBox449"]
+		self.TextBox450 = state["TextBox450"]
+		self.TextBox451 = state["TextBox451"]
+		self.Image300 = state["Image300"]
+		self.TextBox472 = state["TextBox472"]
+		self.TextBox466 = state["TextBox466"]
+		self.TextBox467 = state["TextBox467"]
+		self.TextBox456 = state["TextBox456"]
+		self.Image295 = state["Image295"]
+		self.TextBox455 = state["TextBox455"]
+		self.Image294 = state["Image294"]
+		self.Image296 = state["Image296"]
+		self.Image297 = state["Image297"]
+		self.Image298 = state["Image298"]
+		self.Image299 = state["Image299"]
+		self.TextBox468 = state["TextBox468"]
+		self.TextBox457 = state["TextBox457"]
+		self.TextBox469 = state["TextBox469"]
+		self.TextBox458 = state["TextBox458"]
+		self.TextBox459 = state["TextBox459"]
+		self.TextBox460 = state["TextBox460"]
+		self.TextBox470 = state["TextBox470"]
+		self.TextBox461 = state["TextBox461"]
+		self.TextBox462 = state["TextBox462"]
+		self.TextBox463 = state["TextBox463"]
+		self.TextBox471 = state["TextBox471"]
+		self.TextBox464 = state["TextBox464"]
+		self.TextBox465 = state["TextBox465"]
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	def set_event(self, event):
+		self.event_data = event["event_data"]
+		self.event_alias = event["alias"]
+		callback_name = event["callback_name"]
+		comp = getattr(self, self.event_alias)
+		setattr(comp, callback_name, True)
+	@property
+	def Flex462(self):
+		self._getter_access_tracker["Flex462"] = {}
+		return self._Flex462
+	@Flex462.setter
+	def Flex462(self, new_state):
+		self._setter_access_tracker["Flex462"] = {}
+		global default_state
+		self._Flex462 = Flex(new_state, default_state["Flex462"])
+
+	@property
+	def Overlay3(self):
+		self._getter_access_tracker["Overlay3"] = {}
+		return self._Overlay3
+	@Overlay3.setter
+	def Overlay3(self, new_state):
+		self._setter_access_tracker["Overlay3"] = {}
+		global default_state
+		self._Overlay3 = Overlay(new_state, default_state["Overlay3"])
+
+	@property
+	def Flex786(self):
+		self._getter_access_tracker["Flex786"] = {}
+		return self._Flex786
+	@Flex786.setter
+	def Flex786(self, new_state):
+		self._setter_access_tracker["Flex786"] = {}
+		global default_state
+		self._Flex786 = Flex(new_state, default_state["Flex786"])
+
+	@property
+	def Flex784(self):
+		self._getter_access_tracker["Flex784"] = {}
+		return self._Flex784
+	@Flex784.setter
+	def Flex784(self, new_state):
+		self._setter_access_tracker["Flex784"] = {}
+		global default_state
+		self._Flex784 = Flex(new_state, default_state["Flex784"])
+
+	@property
+	def Flex779(self):
+		self._getter_access_tracker["Flex779"] = {}
+		return self._Flex779
+	@Flex779.setter
+	def Flex779(self, new_state):
+		self._setter_access_tracker["Flex779"] = {}
+		global default_state
+		self._Flex779 = Flex(new_state, default_state["Flex779"])
+
+	@property
+	def Flex770(self):
+		self._getter_access_tracker["Flex770"] = {}
+		return self._Flex770
+	@Flex770.setter
+	def Flex770(self, new_state):
+		self._setter_access_tracker["Flex770"] = {}
+		global default_state
+		self._Flex770 = Flex(new_state, default_state["Flex770"])
+
+	@property
+	def Flex771(self):
+		self._getter_access_tracker["Flex771"] = {}
+		return self._Flex771
+	@Flex771.setter
+	def Flex771(self, new_state):
+		self._setter_access_tracker["Flex771"] = {}
+		global default_state
+		self._Flex771 = Flex(new_state, default_state["Flex771"])
+
+	@property
+	def Flex780(self):
+		self._getter_access_tracker["Flex780"] = {}
+		return self._Flex780
+	@Flex780.setter
+	def Flex780(self, new_state):
+		self._setter_access_tracker["Flex780"] = {}
+		global default_state
+		self._Flex780 = Flex(new_state, default_state["Flex780"])
+
+	@property
+	def Flex772(self):
+		self._getter_access_tracker["Flex772"] = {}
+		return self._Flex772
+	@Flex772.setter
+	def Flex772(self, new_state):
+		self._setter_access_tracker["Flex772"] = {}
+		global default_state
+		self._Flex772 = Flex(new_state, default_state["Flex772"])
+
+	@property
+	def Flex773(self):
+		self._getter_access_tracker["Flex773"] = {}
+		return self._Flex773
+	@Flex773.setter
+	def Flex773(self, new_state):
+		self._setter_access_tracker["Flex773"] = {}
+		global default_state
+		self._Flex773 = Flex(new_state, default_state["Flex773"])
+
+	@property
+	def Flex781(self):
+		self._getter_access_tracker["Flex781"] = {}
+		return self._Flex781
+	@Flex781.setter
+	def Flex781(self, new_state):
+		self._setter_access_tracker["Flex781"] = {}
+		global default_state
+		self._Flex781 = Flex(new_state, default_state["Flex781"])
+
+	@property
+	def Flex774(self):
+		self._getter_access_tracker["Flex774"] = {}
+		return self._Flex774
+	@Flex774.setter
+	def Flex774(self, new_state):
+		self._setter_access_tracker["Flex774"] = {}
+		global default_state
+		self._Flex774 = Flex(new_state, default_state["Flex774"])
+
+	@property
+	def Flex775(self):
+		self._getter_access_tracker["Flex775"] = {}
+		return self._Flex775
+	@Flex775.setter
+	def Flex775(self, new_state):
+		self._setter_access_tracker["Flex775"] = {}
+		global default_state
+		self._Flex775 = Flex(new_state, default_state["Flex775"])
+
+	@property
+	def Flex782(self):
+		self._getter_access_tracker["Flex782"] = {}
+		return self._Flex782
+	@Flex782.setter
+	def Flex782(self, new_state):
+		self._setter_access_tracker["Flex782"] = {}
+		global default_state
+		self._Flex782 = Flex(new_state, default_state["Flex782"])
+
+	@property
+	def Flex776(self):
+		self._getter_access_tracker["Flex776"] = {}
+		return self._Flex776
+	@Flex776.setter
+	def Flex776(self, new_state):
+		self._setter_access_tracker["Flex776"] = {}
+		global default_state
+		self._Flex776 = Flex(new_state, default_state["Flex776"])
+
+	@property
+	def Flex777(self):
+		self._getter_access_tracker["Flex777"] = {}
+		return self._Flex777
+	@Flex777.setter
+	def Flex777(self, new_state):
+		self._setter_access_tracker["Flex777"] = {}
+		global default_state
+		self._Flex777 = Flex(new_state, default_state["Flex777"])
+
+	@property
+	def Flex785(self):
+		self._getter_access_tracker["Flex785"] = {}
+		return self._Flex785
+	@Flex785.setter
+	def Flex785(self, new_state):
+		self._setter_access_tracker["Flex785"] = {}
+		global default_state
+		self._Flex785 = Flex(new_state, default_state["Flex785"])
+
+	@property
+	def Flex783(self):
+		self._getter_access_tracker["Flex783"] = {}
+		return self._Flex783
+	@Flex783.setter
+	def Flex783(self, new_state):
+		self._setter_access_tracker["Flex783"] = {}
+		global default_state
+		self._Flex783 = Flex(new_state, default_state["Flex783"])
+
+	@property
+	def Flex778(self):
+		self._getter_access_tracker["Flex778"] = {}
+		return self._Flex778
+	@Flex778.setter
+	def Flex778(self, new_state):
+		self._setter_access_tracker["Flex778"] = {}
+		global default_state
+		self._Flex778 = Flex(new_state, default_state["Flex778"])
+
+	@property
+	def Flex769(self):
+		self._getter_access_tracker["Flex769"] = {}
+		return self._Flex769
+	@Flex769.setter
+	def Flex769(self, new_state):
+		self._setter_access_tracker["Flex769"] = {}
+		global default_state
+		self._Flex769 = Flex(new_state, default_state["Flex769"])
+
+	@property
+	def Flex766(self):
+		self._getter_access_tracker["Flex766"] = {}
+		return self._Flex766
+	@Flex766.setter
+	def Flex766(self, new_state):
+		self._setter_access_tracker["Flex766"] = {}
+		global default_state
+		self._Flex766 = Flex(new_state, default_state["Flex766"])
+
+	@property
+	def Flex767(self):
+		self._getter_access_tracker["Flex767"] = {}
+		return self._Flex767
+	@Flex767.setter
+	def Flex767(self, new_state):
+		self._setter_access_tracker["Flex767"] = {}
+		global default_state
+		self._Flex767 = Flex(new_state, default_state["Flex767"])
+
+	@property
+	def Tag_Flex_1(self):
+		self._getter_access_tracker["Tag_Flex_1"] = {}
+		return self._Tag_Flex_1
+	@Tag_Flex_1.setter
+	def Tag_Flex_1(self, new_state):
+		self._setter_access_tracker["Tag_Flex_1"] = {}
+		global default_state
+		self._Tag_Flex_1 = Flex(new_state, default_state["Tag_Flex_1"])
+
+	@property
+	def Tag_Flex_2(self):
+		self._getter_access_tracker["Tag_Flex_2"] = {}
+		return self._Tag_Flex_2
+	@Tag_Flex_2.setter
+	def Tag_Flex_2(self, new_state):
+		self._setter_access_tracker["Tag_Flex_2"] = {}
+		global default_state
+		self._Tag_Flex_2 = Flex(new_state, default_state["Tag_Flex_2"])
+
+	@property
+	def Tag_Flex_3(self):
+		self._getter_access_tracker["Tag_Flex_3"] = {}
+		return self._Tag_Flex_3
+	@Tag_Flex_3.setter
+	def Tag_Flex_3(self, new_state):
+		self._setter_access_tracker["Tag_Flex_3"] = {}
+		global default_state
+		self._Tag_Flex_3 = Flex(new_state, default_state["Tag_Flex_3"])
+
+	@property
+	def Flex768(self):
+		self._getter_access_tracker["Flex768"] = {}
+		return self._Flex768
+	@Flex768.setter
+	def Flex768(self, new_state):
+		self._setter_access_tracker["Flex768"] = {}
+		global default_state
+		self._Flex768 = Flex(new_state, default_state["Flex768"])
+
+	@property
+	def Flex764(self):
+		self._getter_access_tracker["Flex764"] = {}
+		return self._Flex764
+	@Flex764.setter
+	def Flex764(self, new_state):
+		self._setter_access_tracker["Flex764"] = {}
+		global default_state
+		self._Flex764 = Flex(new_state, default_state["Flex764"])
+
+	@property
+	def Flex765(self):
+		self._getter_access_tracker["Flex765"] = {}
+		return self._Flex765
+	@Flex765.setter
+	def Flex765(self, new_state):
+		self._setter_access_tracker["Flex765"] = {}
+		global default_state
+		self._Flex765 = Flex(new_state, default_state["Flex765"])
+
+	@property
+	def Flex463(self):
+		self._getter_access_tracker["Flex463"] = {}
+		return self._Flex463
+	@Flex463.setter
+	def Flex463(self, new_state):
+		self._setter_access_tracker["Flex463"] = {}
+		global default_state
+		self._Flex463 = Flex(new_state, default_state["Flex463"])
+
+	@property
+	def Flex466(self):
+		self._getter_access_tracker["Flex466"] = {}
+		return self._Flex466
+	@Flex466.setter
+	def Flex466(self, new_state):
+		self._setter_access_tracker["Flex466"] = {}
+		global default_state
+		self._Flex466 = Flex(new_state, default_state["Flex466"])
+
+	@property
+	def Flex467(self):
+		self._getter_access_tracker["Flex467"] = {}
+		return self._Flex467
+	@Flex467.setter
+	def Flex467(self, new_state):
+		self._setter_access_tracker["Flex467"] = {}
+		global default_state
+		self._Flex467 = Flex(new_state, default_state["Flex467"])
+
+	@property
+	def Filter1(self):
+		self._getter_access_tracker["Filter1"] = {}
+		return self._Filter1
+	@Filter1.setter
+	def Filter1(self, new_state):
+		self._setter_access_tracker["Filter1"] = {}
+		global default_state
+		self._Filter1 = Flex(new_state, default_state["Filter1"])
+
+	@property
+	def Filter2(self):
+		self._getter_access_tracker["Filter2"] = {}
+		return self._Filter2
+	@Filter2.setter
+	def Filter2(self, new_state):
+		self._setter_access_tracker["Filter2"] = {}
+		global default_state
+		self._Filter2 = Flex(new_state, default_state["Filter2"])
+
+	@property
+	def Filter3(self):
+		self._getter_access_tracker["Filter3"] = {}
+		return self._Filter3
+	@Filter3.setter
+	def Filter3(self, new_state):
+		self._setter_access_tracker["Filter3"] = {}
+		global default_state
+		self._Filter3 = Flex(new_state, default_state["Filter3"])
+
+	@property
+	def Filter4(self):
+		self._getter_access_tracker["Filter4"] = {}
+		return self._Filter4
+	@Filter4.setter
+	def Filter4(self, new_state):
+		self._setter_access_tracker["Filter4"] = {}
+		global default_state
+		self._Filter4 = Flex(new_state, default_state["Filter4"])
+
+	@property
+	def Filter5(self):
+		self._getter_access_tracker["Filter5"] = {}
+		return self._Filter5
+	@Filter5.setter
+	def Filter5(self, new_state):
+		self._setter_access_tracker["Filter5"] = {}
+		global default_state
+		self._Filter5 = Flex(new_state, default_state["Filter5"])
+
+	@property
+	def Filter6(self):
+		self._getter_access_tracker["Filter6"] = {}
+		return self._Filter6
+	@Filter6.setter
+	def Filter6(self, new_state):
+		self._setter_access_tracker["Filter6"] = {}
+		global default_state
+		self._Filter6 = Flex(new_state, default_state["Filter6"])
+
+	@property
+	def Filter7(self):
+		self._getter_access_tracker["Filter7"] = {}
+		return self._Filter7
+	@Filter7.setter
+	def Filter7(self, new_state):
+		self._setter_access_tracker["Filter7"] = {}
+		global default_state
+		self._Filter7 = Flex(new_state, default_state["Filter7"])
+
+	@property
+	def Filter8(self):
+		self._getter_access_tracker["Filter8"] = {}
+		return self._Filter8
+	@Filter8.setter
+	def Filter8(self, new_state):
+		self._setter_access_tracker["Filter8"] = {}
+		global default_state
+		self._Filter8 = Flex(new_state, default_state["Filter8"])
+
+	@property
+	def Filter9(self):
+		self._getter_access_tracker["Filter9"] = {}
+		return self._Filter9
+	@Filter9.setter
+	def Filter9(self, new_state):
+		self._setter_access_tracker["Filter9"] = {}
+		global default_state
+		self._Filter9 = Flex(new_state, default_state["Filter9"])
+
+	@property
+	def Flex468(self):
+		self._getter_access_tracker["Flex468"] = {}
+		return self._Flex468
+	@Flex468.setter
+	def Flex468(self, new_state):
+		self._setter_access_tracker["Flex468"] = {}
+		global default_state
+		self._Flex468 = Flex(new_state, default_state["Flex468"])
+
+	@property
+	def Flex469(self):
+		self._getter_access_tracker["Flex469"] = {}
+		return self._Flex469
+	@Flex469.setter
+	def Flex469(self, new_state):
+		self._setter_access_tracker["Flex469"] = {}
+		global default_state
+		self._Flex469 = Flex(new_state, default_state["Flex469"])
+
+	@property
+	def Card_1(self):
+		self._getter_access_tracker["Card_1"] = {}
+		return self._Card_1
+	@Card_1.setter
+	def Card_1(self, new_state):
+		self._setter_access_tracker["Card_1"] = {}
+		global default_state
+		self._Card_1 = Flex(new_state, default_state["Card_1"])
+
+	@property
+	def Flex481(self):
+		self._getter_access_tracker["Flex481"] = {}
+		return self._Flex481
+	@Flex481.setter
+	def Flex481(self, new_state):
+		self._setter_access_tracker["Flex481"] = {}
+		global default_state
+		self._Flex481 = Flex(new_state, default_state["Flex481"])
+
+	@property
+	def Flex482(self):
+		self._getter_access_tracker["Flex482"] = {}
+		return self._Flex482
+	@Flex482.setter
+	def Flex482(self, new_state):
+		self._setter_access_tracker["Flex482"] = {}
+		global default_state
+		self._Flex482 = Flex(new_state, default_state["Flex482"])
+
+	@property
+	def Flex483(self):
+		self._getter_access_tracker["Flex483"] = {}
+		return self._Flex483
+	@Flex483.setter
+	def Flex483(self, new_state):
+		self._setter_access_tracker["Flex483"] = {}
+		global default_state
+		self._Flex483 = Flex(new_state, default_state["Flex483"])
+
+	@property
+	def Card_Tag_1_a(self):
+		self._getter_access_tracker["Card_Tag_1_a"] = {}
+		return self._Card_Tag_1_a
+	@Card_Tag_1_a.setter
+	def Card_Tag_1_a(self, new_state):
+		self._setter_access_tracker["Card_Tag_1_a"] = {}
+		global default_state
+		self._Card_Tag_1_a = Flex(new_state, default_state["Card_Tag_1_a"])
+
+	@property
+	def Card_Tag_1_b(self):
+		self._getter_access_tracker["Card_Tag_1_b"] = {}
+		return self._Card_Tag_1_b
+	@Card_Tag_1_b.setter
+	def Card_Tag_1_b(self, new_state):
+		self._setter_access_tracker["Card_Tag_1_b"] = {}
+		global default_state
+		self._Card_Tag_1_b = Flex(new_state, default_state["Card_Tag_1_b"])
+
+	@property
+	def Card_Tag_1_c(self):
+		self._getter_access_tracker["Card_Tag_1_c"] = {}
+		return self._Card_Tag_1_c
+	@Card_Tag_1_c.setter
+	def Card_Tag_1_c(self, new_state):
+		self._setter_access_tracker["Card_Tag_1_c"] = {}
+		global default_state
+		self._Card_Tag_1_c = Flex(new_state, default_state["Card_Tag_1_c"])
+
+	@property
+	def Flex484(self):
+		self._getter_access_tracker["Flex484"] = {}
+		return self._Flex484
+	@Flex484.setter
+	def Flex484(self, new_state):
+		self._setter_access_tracker["Flex484"] = {}
+		global default_state
+		self._Flex484 = Flex(new_state, default_state["Flex484"])
+
+	@property
+	def Flex485(self):
+		self._getter_access_tracker["Flex485"] = {}
+		return self._Flex485
+	@Flex485.setter
+	def Flex485(self, new_state):
+		self._setter_access_tracker["Flex485"] = {}
+		global default_state
+		self._Flex485 = Flex(new_state, default_state["Flex485"])
+
+	@property
+	def Flex486(self):
+		self._getter_access_tracker["Flex486"] = {}
+		return self._Flex486
+	@Flex486.setter
+	def Flex486(self, new_state):
+		self._setter_access_tracker["Flex486"] = {}
+		global default_state
+		self._Flex486 = Flex(new_state, default_state["Flex486"])
+
+	@property
+	def Card_2(self):
+		self._getter_access_tracker["Card_2"] = {}
+		return self._Card_2
+	@Card_2.setter
+	def Card_2(self, new_state):
+		self._setter_access_tracker["Card_2"] = {}
+		global default_state
+		self._Card_2 = Flex(new_state, default_state["Card_2"])
+
+	@property
+	def Flex528(self):
+		self._getter_access_tracker["Flex528"] = {}
+		return self._Flex528
+	@Flex528.setter
+	def Flex528(self, new_state):
+		self._setter_access_tracker["Flex528"] = {}
+		global default_state
+		self._Flex528 = Flex(new_state, default_state["Flex528"])
+
+	@property
+	def Flex525(self):
+		self._getter_access_tracker["Flex525"] = {}
+		return self._Flex525
+	@Flex525.setter
+	def Flex525(self, new_state):
+		self._setter_access_tracker["Flex525"] = {}
+		global default_state
+		self._Flex525 = Flex(new_state, default_state["Flex525"])
+
+	@property
+	def Flex523(self):
+		self._getter_access_tracker["Flex523"] = {}
+		return self._Flex523
+	@Flex523.setter
+	def Flex523(self, new_state):
+		self._setter_access_tracker["Flex523"] = {}
+		global default_state
+		self._Flex523 = Flex(new_state, default_state["Flex523"])
+
+	@property
+	def Flex524(self):
+		self._getter_access_tracker["Flex524"] = {}
+		return self._Flex524
+	@Flex524.setter
+	def Flex524(self, new_state):
+		self._setter_access_tracker["Flex524"] = {}
+		global default_state
+		self._Flex524 = Flex(new_state, default_state["Flex524"])
+
+	@property
+	def Flex527(self):
+		self._getter_access_tracker["Flex527"] = {}
+		return self._Flex527
+	@Flex527.setter
+	def Flex527(self, new_state):
+		self._setter_access_tracker["Flex527"] = {}
+		global default_state
+		self._Flex527 = Flex(new_state, default_state["Flex527"])
+
+	@property
+	def Flex657(self):
+		self._getter_access_tracker["Flex657"] = {}
+		return self._Flex657
+	@Flex657.setter
+	def Flex657(self, new_state):
+		self._setter_access_tracker["Flex657"] = {}
+		global default_state
+		self._Flex657 = Flex(new_state, default_state["Flex657"])
+
+	@property
+	def Card_Tag_2_c(self):
+		self._getter_access_tracker["Card_Tag_2_c"] = {}
+		return self._Card_Tag_2_c
+	@Card_Tag_2_c.setter
+	def Card_Tag_2_c(self, new_state):
+		self._setter_access_tracker["Card_Tag_2_c"] = {}
+		global default_state
+		self._Card_Tag_2_c = Flex(new_state, default_state["Card_Tag_2_c"])
+
+	@property
+	def Card_Tag_2_b(self):
+		self._getter_access_tracker["Card_Tag_2_b"] = {}
+		return self._Card_Tag_2_b
+	@Card_Tag_2_b.setter
+	def Card_Tag_2_b(self, new_state):
+		self._setter_access_tracker["Card_Tag_2_b"] = {}
+		global default_state
+		self._Card_Tag_2_b = Flex(new_state, default_state["Card_Tag_2_b"])
+
+	@property
+	def Card_Tag_2_a(self):
+		self._getter_access_tracker["Card_Tag_2_a"] = {}
+		return self._Card_Tag_2_a
+	@Card_Tag_2_a.setter
+	def Card_Tag_2_a(self, new_state):
+		self._setter_access_tracker["Card_Tag_2_a"] = {}
+		global default_state
+		self._Card_Tag_2_a = Flex(new_state, default_state["Card_Tag_2_a"])
+
+	@property
+	def Card_3(self):
+		self._getter_access_tracker["Card_3"] = {}
+		return self._Card_3
+	@Card_3.setter
+	def Card_3(self, new_state):
+		self._setter_access_tracker["Card_3"] = {}
+		global default_state
+		self._Card_3 = Flex(new_state, default_state["Card_3"])
+
+	@property
+	def Flex535(self):
+		self._getter_access_tracker["Flex535"] = {}
+		return self._Flex535
+	@Flex535.setter
+	def Flex535(self, new_state):
+		self._setter_access_tracker["Flex535"] = {}
+		global default_state
+		self._Flex535 = Flex(new_state, default_state["Flex535"])
+
+	@property
+	def Flex532(self):
+		self._getter_access_tracker["Flex532"] = {}
+		return self._Flex532
+	@Flex532.setter
+	def Flex532(self, new_state):
+		self._setter_access_tracker["Flex532"] = {}
+		global default_state
+		self._Flex532 = Flex(new_state, default_state["Flex532"])
+
+	@property
+	def Flex534(self):
+		self._getter_access_tracker["Flex534"] = {}
+		return self._Flex534
+	@Flex534.setter
+	def Flex534(self, new_state):
+		self._setter_access_tracker["Flex534"] = {}
+		global default_state
+		self._Flex534 = Flex(new_state, default_state["Flex534"])
+
+	@property
+	def Flex530(self):
+		self._getter_access_tracker["Flex530"] = {}
+		return self._Flex530
+	@Flex530.setter
+	def Flex530(self, new_state):
+		self._setter_access_tracker["Flex530"] = {}
+		global default_state
+		self._Flex530 = Flex(new_state, default_state["Flex530"])
+
+	@property
+	def Flex531(self):
+		self._getter_access_tracker["Flex531"] = {}
+		return self._Flex531
+	@Flex531.setter
+	def Flex531(self, new_state):
+		self._setter_access_tracker["Flex531"] = {}
+		global default_state
+		self._Flex531 = Flex(new_state, default_state["Flex531"])
+
+	@property
+	def Flex661(self):
+		self._getter_access_tracker["Flex661"] = {}
+		return self._Flex661
+	@Flex661.setter
+	def Flex661(self, new_state):
+		self._setter_access_tracker["Flex661"] = {}
+		global default_state
+		self._Flex661 = Flex(new_state, default_state["Flex661"])
+
+	@property
+	def Card_Tag_3_c(self):
+		self._getter_access_tracker["Card_Tag_3_c"] = {}
+		return self._Card_Tag_3_c
+	@Card_Tag_3_c.setter
+	def Card_Tag_3_c(self, new_state):
+		self._setter_access_tracker["Card_Tag_3_c"] = {}
+		global default_state
+		self._Card_Tag_3_c = Flex(new_state, default_state["Card_Tag_3_c"])
+
+	@property
+	def Card_Tag_3_b(self):
+		self._getter_access_tracker["Card_Tag_3_b"] = {}
+		return self._Card_Tag_3_b
+	@Card_Tag_3_b.setter
+	def Card_Tag_3_b(self, new_state):
+		self._setter_access_tracker["Card_Tag_3_b"] = {}
+		global default_state
+		self._Card_Tag_3_b = Flex(new_state, default_state["Card_Tag_3_b"])
+
+	@property
+	def Card_Tag_3_a(self):
+		self._getter_access_tracker["Card_Tag_3_a"] = {}
+		return self._Card_Tag_3_a
+	@Card_Tag_3_a.setter
+	def Card_Tag_3_a(self, new_state):
+		self._setter_access_tracker["Card_Tag_3_a"] = {}
+		global default_state
+		self._Card_Tag_3_a = Flex(new_state, default_state["Card_Tag_3_a"])
+
+	@property
+	def Flex646(self):
+		self._getter_access_tracker["Flex646"] = {}
+		return self._Flex646
+	@Flex646.setter
+	def Flex646(self, new_state):
+		self._setter_access_tracker["Flex646"] = {}
+		global default_state
+		self._Flex646 = Flex(new_state, default_state["Flex646"])
+
+	@property
+	def Card_6(self):
+		self._getter_access_tracker["Card_6"] = {}
+		return self._Card_6
+	@Card_6.setter
+	def Card_6(self, new_state):
+		self._setter_access_tracker["Card_6"] = {}
+		global default_state
+		self._Card_6 = Flex(new_state, default_state["Card_6"])
+
+	@property
+	def Flex640(self):
+		self._getter_access_tracker["Flex640"] = {}
+		return self._Flex640
+	@Flex640.setter
+	def Flex640(self, new_state):
+		self._setter_access_tracker["Flex640"] = {}
+		global default_state
+		self._Flex640 = Flex(new_state, default_state["Flex640"])
+
+	@property
+	def Flex632(self):
+		self._getter_access_tracker["Flex632"] = {}
+		return self._Flex632
+	@Flex632.setter
+	def Flex632(self, new_state):
+		self._setter_access_tracker["Flex632"] = {}
+		global default_state
+		self._Flex632 = Flex(new_state, default_state["Flex632"])
+
+	@property
+	def Flex625(self):
+		self._getter_access_tracker["Flex625"] = {}
+		return self._Flex625
+	@Flex625.setter
+	def Flex625(self, new_state):
+		self._setter_access_tracker["Flex625"] = {}
+		global default_state
+		self._Flex625 = Flex(new_state, default_state["Flex625"])
+
+	@property
+	def Flex626(self):
+		self._getter_access_tracker["Flex626"] = {}
+		return self._Flex626
+	@Flex626.setter
+	def Flex626(self, new_state):
+		self._setter_access_tracker["Flex626"] = {}
+		global default_state
+		self._Flex626 = Flex(new_state, default_state["Flex626"])
+
+	@property
+	def Flex633(self):
+		self._getter_access_tracker["Flex633"] = {}
+		return self._Flex633
+	@Flex633.setter
+	def Flex633(self, new_state):
+		self._setter_access_tracker["Flex633"] = {}
+		global default_state
+		self._Flex633 = Flex(new_state, default_state["Flex633"])
+
+	@property
+	def Flex673(self):
+		self._getter_access_tracker["Flex673"] = {}
+		return self._Flex673
+	@Flex673.setter
+	def Flex673(self, new_state):
+		self._setter_access_tracker["Flex673"] = {}
+		global default_state
+		self._Flex673 = Flex(new_state, default_state["Flex673"])
+
+	@property
+	def Card_Tag_6_c(self):
+		self._getter_access_tracker["Card_Tag_6_c"] = {}
+		return self._Card_Tag_6_c
+	@Card_Tag_6_c.setter
+	def Card_Tag_6_c(self, new_state):
+		self._setter_access_tracker["Card_Tag_6_c"] = {}
+		global default_state
+		self._Card_Tag_6_c = Flex(new_state, default_state["Card_Tag_6_c"])
+
+	@property
+	def Card_Tag_6_b(self):
+		self._getter_access_tracker["Card_Tag_6_b"] = {}
+		return self._Card_Tag_6_b
+	@Card_Tag_6_b.setter
+	def Card_Tag_6_b(self, new_state):
+		self._setter_access_tracker["Card_Tag_6_b"] = {}
+		global default_state
+		self._Card_Tag_6_b = Flex(new_state, default_state["Card_Tag_6_b"])
+
+	@property
+	def Card_Tag_6_a(self):
+		self._getter_access_tracker["Card_Tag_6_a"] = {}
+		return self._Card_Tag_6_a
+	@Card_Tag_6_a.setter
+	def Card_Tag_6_a(self, new_state):
+		self._setter_access_tracker["Card_Tag_6_a"] = {}
+		global default_state
+		self._Card_Tag_6_a = Flex(new_state, default_state["Card_Tag_6_a"])
+
+	@property
+	def Card_5(self):
+		self._getter_access_tracker["Card_5"] = {}
+		return self._Card_5
+	@Card_5.setter
+	def Card_5(self, new_state):
+		self._setter_access_tracker["Card_5"] = {}
+		global default_state
+		self._Card_5 = Flex(new_state, default_state["Card_5"])
+
+	@property
+	def Flex641(self):
+		self._getter_access_tracker["Flex641"] = {}
+		return self._Flex641
+	@Flex641.setter
+	def Flex641(self, new_state):
+		self._setter_access_tracker["Flex641"] = {}
+		global default_state
+		self._Flex641 = Flex(new_state, default_state["Flex641"])
+
+	@property
+	def Flex635(self):
+		self._getter_access_tracker["Flex635"] = {}
+		return self._Flex635
+	@Flex635.setter
+	def Flex635(self, new_state):
+		self._setter_access_tracker["Flex635"] = {}
+		global default_state
+		self._Flex635 = Flex(new_state, default_state["Flex635"])
+
+	@property
+	def Flex636(self):
+		self._getter_access_tracker["Flex636"] = {}
+		return self._Flex636
+	@Flex636.setter
+	def Flex636(self, new_state):
+		self._setter_access_tracker["Flex636"] = {}
+		global default_state
+		self._Flex636 = Flex(new_state, default_state["Flex636"])
+
+	@property
+	def Flex627(self):
+		self._getter_access_tracker["Flex627"] = {}
+		return self._Flex627
+	@Flex627.setter
+	def Flex627(self, new_state):
+		self._setter_access_tracker["Flex627"] = {}
+		global default_state
+		self._Flex627 = Flex(new_state, default_state["Flex627"])
+
+	@property
+	def Flex628(self):
+		self._getter_access_tracker["Flex628"] = {}
+		return self._Flex628
+	@Flex628.setter
+	def Flex628(self, new_state):
+		self._setter_access_tracker["Flex628"] = {}
+		global default_state
+		self._Flex628 = Flex(new_state, default_state["Flex628"])
+
+	@property
+	def Flex669(self):
+		self._getter_access_tracker["Flex669"] = {}
+		return self._Flex669
+	@Flex669.setter
+	def Flex669(self, new_state):
+		self._setter_access_tracker["Flex669"] = {}
+		global default_state
+		self._Flex669 = Flex(new_state, default_state["Flex669"])
+
+	@property
+	def Card_Tag_5_c(self):
+		self._getter_access_tracker["Card_Tag_5_c"] = {}
+		return self._Card_Tag_5_c
+	@Card_Tag_5_c.setter
+	def Card_Tag_5_c(self, new_state):
+		self._setter_access_tracker["Card_Tag_5_c"] = {}
+		global default_state
+		self._Card_Tag_5_c = Flex(new_state, default_state["Card_Tag_5_c"])
+
+	@property
+	def Card_Tag_5_b(self):
+		self._getter_access_tracker["Card_Tag_5_b"] = {}
+		return self._Card_Tag_5_b
+	@Card_Tag_5_b.setter
+	def Card_Tag_5_b(self, new_state):
+		self._setter_access_tracker["Card_Tag_5_b"] = {}
+		global default_state
+		self._Card_Tag_5_b = Flex(new_state, default_state["Card_Tag_5_b"])
+
+	@property
+	def Card_Tag_5_a(self):
+		self._getter_access_tracker["Card_Tag_5_a"] = {}
+		return self._Card_Tag_5_a
+	@Card_Tag_5_a.setter
+	def Card_Tag_5_a(self, new_state):
+		self._setter_access_tracker["Card_Tag_5_a"] = {}
+		global default_state
+		self._Card_Tag_5_a = Flex(new_state, default_state["Card_Tag_5_a"])
+
+	@property
+	def Card_4(self):
+		self._getter_access_tracker["Card_4"] = {}
+		return self._Card_4
+	@Card_4.setter
+	def Card_4(self, new_state):
+		self._setter_access_tracker["Card_4"] = {}
+		global default_state
+		self._Card_4 = Flex(new_state, default_state["Card_4"])
+
+	@property
+	def Flex642(self):
+		self._getter_access_tracker["Flex642"] = {}
+		return self._Flex642
+	@Flex642.setter
+	def Flex642(self, new_state):
+		self._setter_access_tracker["Flex642"] = {}
+		global default_state
+		self._Flex642 = Flex(new_state, default_state["Flex642"])
+
+	@property
+	def Flex637(self):
+		self._getter_access_tracker["Flex637"] = {}
+		return self._Flex637
+	@Flex637.setter
+	def Flex637(self, new_state):
+		self._setter_access_tracker["Flex637"] = {}
+		global default_state
+		self._Flex637 = Flex(new_state, default_state["Flex637"])
+
+	@property
+	def Flex629(self):
+		self._getter_access_tracker["Flex629"] = {}
+		return self._Flex629
+	@Flex629.setter
+	def Flex629(self, new_state):
+		self._setter_access_tracker["Flex629"] = {}
+		global default_state
+		self._Flex629 = Flex(new_state, default_state["Flex629"])
+
+	@property
+	def Flex630(self):
+		self._getter_access_tracker["Flex630"] = {}
+		return self._Flex630
+	@Flex630.setter
+	def Flex630(self, new_state):
+		self._setter_access_tracker["Flex630"] = {}
+		global default_state
+		self._Flex630 = Flex(new_state, default_state["Flex630"])
+
+	@property
+	def Flex639(self):
+		self._getter_access_tracker["Flex639"] = {}
+		return self._Flex639
+	@Flex639.setter
+	def Flex639(self, new_state):
+		self._setter_access_tracker["Flex639"] = {}
+		global default_state
+		self._Flex639 = Flex(new_state, default_state["Flex639"])
+
+	@property
+	def Flex665(self):
+		self._getter_access_tracker["Flex665"] = {}
+		return self._Flex665
+	@Flex665.setter
+	def Flex665(self, new_state):
+		self._setter_access_tracker["Flex665"] = {}
+		global default_state
+		self._Flex665 = Flex(new_state, default_state["Flex665"])
+
+	@property
+	def Card_Tag_4_c(self):
+		self._getter_access_tracker["Card_Tag_4_c"] = {}
+		return self._Card_Tag_4_c
+	@Card_Tag_4_c.setter
+	def Card_Tag_4_c(self, new_state):
+		self._setter_access_tracker["Card_Tag_4_c"] = {}
+		global default_state
+		self._Card_Tag_4_c = Flex(new_state, default_state["Card_Tag_4_c"])
+
+	@property
+	def Card_Tag_4_b(self):
+		self._getter_access_tracker["Card_Tag_4_b"] = {}
+		return self._Card_Tag_4_b
+	@Card_Tag_4_b.setter
+	def Card_Tag_4_b(self, new_state):
+		self._setter_access_tracker["Card_Tag_4_b"] = {}
+		global default_state
+		self._Card_Tag_4_b = Flex(new_state, default_state["Card_Tag_4_b"])
+
+	@property
+	def Card_Tag_4_a(self):
+		self._getter_access_tracker["Card_Tag_4_a"] = {}
+		return self._Card_Tag_4_a
+	@Card_Tag_4_a.setter
+	def Card_Tag_4_a(self, new_state):
+		self._setter_access_tracker["Card_Tag_4_a"] = {}
+		global default_state
+		self._Card_Tag_4_a = Flex(new_state, default_state["Card_Tag_4_a"])
+
+	@property
+	def Flex674(self):
+		self._getter_access_tracker["Flex674"] = {}
+		return self._Flex674
+	@Flex674.setter
+	def Flex674(self, new_state):
+		self._setter_access_tracker["Flex674"] = {}
+		global default_state
+		self._Flex674 = Flex(new_state, default_state["Flex674"])
+
+	@property
+	def Flex675(self):
+		self._getter_access_tracker["Flex675"] = {}
+		return self._Flex675
+	@Flex675.setter
+	def Flex675(self, new_state):
+		self._setter_access_tracker["Flex675"] = {}
+		global default_state
+		self._Flex675 = Flex(new_state, default_state["Flex675"])
+
+	@property
+	def Flex706(self):
+		self._getter_access_tracker["Flex706"] = {}
+		return self._Flex706
+	@Flex706.setter
+	def Flex706(self, new_state):
+		self._setter_access_tracker["Flex706"] = {}
+		global default_state
+		self._Flex706 = Flex(new_state, default_state["Flex706"])
+
+	@property
+	def Flex624(self):
+		self._getter_access_tracker["Flex624"] = {}
+		return self._Flex624
+	@Flex624.setter
+	def Flex624(self, new_state):
+		self._setter_access_tracker["Flex624"] = {}
+		global default_state
+		self._Flex624 = Flex(new_state, default_state["Flex624"])
+
+	@property
+	def Flex621(self):
+		self._getter_access_tracker["Flex621"] = {}
+		return self._Flex621
+	@Flex621.setter
+	def Flex621(self, new_state):
+		self._setter_access_tracker["Flex621"] = {}
+		global default_state
+		self._Flex621 = Flex(new_state, default_state["Flex621"])
+
+	@property
+	def Flex620(self):
+		self._getter_access_tracker["Flex620"] = {}
+		return self._Flex620
+	@Flex620.setter
+	def Flex620(self, new_state):
+		self._setter_access_tracker["Flex620"] = {}
+		global default_state
+		self._Flex620 = Flex(new_state, default_state["Flex620"])
+
+	@property
+	def Menu7(self):
+		self._getter_access_tracker["Menu7"] = {}
+		return self._Menu7
+	@Menu7.setter
+	def Menu7(self, new_state):
+		self._setter_access_tracker["Menu7"] = {}
+		global default_state
+		self._Menu7 = Menu(new_state, default_state["Menu7"])
+
+	@property
+	def Flex618(self):
+		self._getter_access_tracker["Flex618"] = {}
+		return self._Flex618
+	@Flex618.setter
+	def Flex618(self, new_state):
+		self._setter_access_tracker["Flex618"] = {}
+		global default_state
+		self._Flex618 = Flex(new_state, default_state["Flex618"])
+
+	@property
+	def Flex619(self):
+		self._getter_access_tracker["Flex619"] = {}
+		return self._Flex619
+	@Flex619.setter
+	def Flex619(self, new_state):
+		self._setter_access_tracker["Flex619"] = {}
+		global default_state
+		self._Flex619 = Flex(new_state, default_state["Flex619"])
+
+	@property
+	def Flex623(self):
+		self._getter_access_tracker["Flex623"] = {}
+		return self._Flex623
+	@Flex623.setter
+	def Flex623(self, new_state):
+		self._setter_access_tracker["Flex623"] = {}
+		global default_state
+		self._Flex623 = Flex(new_state, default_state["Flex623"])
+
+	@property
+	def Flex647(self):
+		self._getter_access_tracker["Flex647"] = {}
+		return self._Flex647
+	@Flex647.setter
+	def Flex647(self, new_state):
+		self._setter_access_tracker["Flex647"] = {}
+		global default_state
+		self._Flex647 = Flex(new_state, default_state["Flex647"])
+
+	@property
+	def Flex705(self):
+		self._getter_access_tracker["Flex705"] = {}
+		return self._Flex705
+	@Flex705.setter
+	def Flex705(self, new_state):
+		self._setter_access_tracker["Flex705"] = {}
+		global default_state
+		self._Flex705 = Flex(new_state, default_state["Flex705"])
+
+	@property
+	def Flex702(self):
+		self._getter_access_tracker["Flex702"] = {}
+		return self._Flex702
+	@Flex702.setter
+	def Flex702(self, new_state):
+		self._setter_access_tracker["Flex702"] = {}
+		global default_state
+		self._Flex702 = Flex(new_state, default_state["Flex702"])
+
+	@property
+	def Flex703(self):
+		self._getter_access_tracker["Flex703"] = {}
+		return self._Flex703
+	@Flex703.setter
+	def Flex703(self, new_state):
+		self._setter_access_tracker["Flex703"] = {}
+		global default_state
+		self._Flex703 = Flex(new_state, default_state["Flex703"])
+
+	@property
+	def Flex699(self):
+		self._getter_access_tracker["Flex699"] = {}
+		return self._Flex699
+	@Flex699.setter
+	def Flex699(self, new_state):
+		self._setter_access_tracker["Flex699"] = {}
+		global default_state
+		self._Flex699 = Flex(new_state, default_state["Flex699"])
+
+	@property
+	def Flex692(self):
+		self._getter_access_tracker["Flex692"] = {}
+		return self._Flex692
+	@Flex692.setter
+	def Flex692(self, new_state):
+		self._setter_access_tracker["Flex692"] = {}
+		global default_state
+		self._Flex692 = Flex(new_state, default_state["Flex692"])
+
+	@property
+	def Flex704(self):
+		self._getter_access_tracker["Flex704"] = {}
+		return self._Flex704
+	@Flex704.setter
+	def Flex704(self, new_state):
+		self._setter_access_tracker["Flex704"] = {}
+		global default_state
+		self._Flex704 = Flex(new_state, default_state["Flex704"])
+
+	@property
+	def Flex700(self):
+		self._getter_access_tracker["Flex700"] = {}
+		return self._Flex700
+	@Flex700.setter
+	def Flex700(self, new_state):
+		self._setter_access_tracker["Flex700"] = {}
+		global default_state
+		self._Flex700 = Flex(new_state, default_state["Flex700"])
+
+	@property
+	def Flex693(self):
+		self._getter_access_tracker["Flex693"] = {}
+		return self._Flex693
+	@Flex693.setter
+	def Flex693(self, new_state):
+		self._setter_access_tracker["Flex693"] = {}
+		global default_state
+		self._Flex693 = Flex(new_state, default_state["Flex693"])
+
+	@property
+	def Flex687(self):
+		self._getter_access_tracker["Flex687"] = {}
+		return self._Flex687
+	@Flex687.setter
+	def Flex687(self, new_state):
+		self._setter_access_tracker["Flex687"] = {}
+		global default_state
+		self._Flex687 = Flex(new_state, default_state["Flex687"])
+
+	@property
+	def Flex686(self):
+		self._getter_access_tracker["Flex686"] = {}
+		return self._Flex686
+	@Flex686.setter
+	def Flex686(self, new_state):
+		self._setter_access_tracker["Flex686"] = {}
+		global default_state
+		self._Flex686 = Flex(new_state, default_state["Flex686"])
+
+	@property
+	def Flex685(self):
+		self._getter_access_tracker["Flex685"] = {}
+		return self._Flex685
+	@Flex685.setter
+	def Flex685(self, new_state):
+		self._setter_access_tracker["Flex685"] = {}
+		global default_state
+		self._Flex685 = Flex(new_state, default_state["Flex685"])
+
+	@property
+	def Flex694(self):
+		self._getter_access_tracker["Flex694"] = {}
+		return self._Flex694
+	@Flex694.setter
+	def Flex694(self, new_state):
+		self._setter_access_tracker["Flex694"] = {}
+		global default_state
+		self._Flex694 = Flex(new_state, default_state["Flex694"])
+
+	@property
+	def Flex701(self):
+		self._getter_access_tracker["Flex701"] = {}
+		return self._Flex701
+	@Flex701.setter
+	def Flex701(self, new_state):
+		self._setter_access_tracker["Flex701"] = {}
+		global default_state
+		self._Flex701 = Flex(new_state, default_state["Flex701"])
+
+	@property
+	def Flex695(self):
+		self._getter_access_tracker["Flex695"] = {}
+		return self._Flex695
+	@Flex695.setter
+	def Flex695(self, new_state):
+		self._setter_access_tracker["Flex695"] = {}
+		global default_state
+		self._Flex695 = Flex(new_state, default_state["Flex695"])
+
+	@property
+	def Flex688(self):
+		self._getter_access_tracker["Flex688"] = {}
+		return self._Flex688
+	@Flex688.setter
+	def Flex688(self, new_state):
+		self._setter_access_tracker["Flex688"] = {}
+		global default_state
+		self._Flex688 = Flex(new_state, default_state["Flex688"])
+
+	@property
+	def Flex696(self):
+		self._getter_access_tracker["Flex696"] = {}
+		return self._Flex696
+	@Flex696.setter
+	def Flex696(self, new_state):
+		self._setter_access_tracker["Flex696"] = {}
+		global default_state
+		self._Flex696 = Flex(new_state, default_state["Flex696"])
+
+	@property
+	def Flex689(self):
+		self._getter_access_tracker["Flex689"] = {}
+		return self._Flex689
+	@Flex689.setter
+	def Flex689(self, new_state):
+		self._setter_access_tracker["Flex689"] = {}
+		global default_state
+		self._Flex689 = Flex(new_state, default_state["Flex689"])
+
+	@property
+	def Flex697(self):
+		self._getter_access_tracker["Flex697"] = {}
+		return self._Flex697
+	@Flex697.setter
+	def Flex697(self, new_state):
+		self._setter_access_tracker["Flex697"] = {}
+		global default_state
+		self._Flex697 = Flex(new_state, default_state["Flex697"])
+
+	@property
+	def Flex690(self):
+		self._getter_access_tracker["Flex690"] = {}
+		return self._Flex690
+	@Flex690.setter
+	def Flex690(self, new_state):
+		self._setter_access_tracker["Flex690"] = {}
+		global default_state
+		self._Flex690 = Flex(new_state, default_state["Flex690"])
+
+	@property
+	def Flex698(self):
+		self._getter_access_tracker["Flex698"] = {}
+		return self._Flex698
+	@Flex698.setter
+	def Flex698(self, new_state):
+		self._setter_access_tracker["Flex698"] = {}
+		global default_state
+		self._Flex698 = Flex(new_state, default_state["Flex698"])
+
+	@property
+	def Flex691(self):
+		self._getter_access_tracker["Flex691"] = {}
+		return self._Flex691
+	@Flex691.setter
+	def Flex691(self, new_state):
+		self._setter_access_tracker["Flex691"] = {}
+		global default_state
+		self._Flex691 = Flex(new_state, default_state["Flex691"])
+
+	@property
+	def TextBox361(self):
+		self._getter_access_tracker["TextBox361"] = {}
+		return self._TextBox361
+	@TextBox361.setter
+	def TextBox361(self, new_state):
+		self._setter_access_tracker["TextBox361"] = {}
+		global default_state
+		self._TextBox361 = TextBox(new_state, default_state["TextBox361"])
+
+	@property
+	def TextBox362(self):
+		self._getter_access_tracker["TextBox362"] = {}
+		return self._TextBox362
+	@TextBox362.setter
+	def TextBox362(self, new_state):
+		self._setter_access_tracker["TextBox362"] = {}
+		global default_state
+		self._TextBox362 = TextBox(new_state, default_state["TextBox362"])
+
+	@property
+	def Button116(self):
+		self._getter_access_tracker["Button116"] = {}
+		return self._Button116
+	@Button116.setter
+	def Button116(self, new_state):
+		self._setter_access_tracker["Button116"] = {}
+		global default_state
+		self._Button116 = Button(new_state, default_state["Button116"])
+
+	@property
+	def Button235(self):
+		self._getter_access_tracker["Button235"] = {}
+		return self._Button235
+	@Button235.setter
+	def Button235(self, new_state):
+		self._setter_access_tracker["Button235"] = {}
+		global default_state
+		self._Button235 = Button(new_state, default_state["Button235"])
+
+	@property
+	def TextBox499(self):
+		self._getter_access_tracker["TextBox499"] = {}
+		return self._TextBox499
+	@TextBox499.setter
+	def TextBox499(self, new_state):
+		self._setter_access_tracker["TextBox499"] = {}
+		global default_state
+		self._TextBox499 = TextBox(new_state, default_state["TextBox499"])
+
+	@property
+	def Input19(self):
+		self._getter_access_tracker["Input19"] = {}
+		return self._Input19
+	@Input19.setter
+	def Input19(self, new_state):
+		self._setter_access_tracker["Input19"] = {}
+		global default_state
+		self._Input19 = Input(new_state, default_state["Input19"])
+
+	@property
+	def Input20(self):
+		self._getter_access_tracker["Input20"] = {}
+		return self._Input20
+	@Input20.setter
+	def Input20(self, new_state):
+		self._setter_access_tracker["Input20"] = {}
+		global default_state
+		self._Input20 = Input(new_state, default_state["Input20"])
+
+	@property
+	def TextBox500(self):
+		self._getter_access_tracker["TextBox500"] = {}
+		return self._TextBox500
+	@TextBox500.setter
+	def TextBox500(self, new_state):
+		self._setter_access_tracker["TextBox500"] = {}
+		global default_state
+		self._TextBox500 = TextBox(new_state, default_state["TextBox500"])
+
+	@property
+	def TextBox501(self):
+		self._getter_access_tracker["TextBox501"] = {}
+		return self._TextBox501
+	@TextBox501.setter
+	def TextBox501(self, new_state):
+		self._setter_access_tracker["TextBox501"] = {}
+		global default_state
+		self._TextBox501 = TextBox(new_state, default_state["TextBox501"])
+
+	@property
+	def Input21(self):
+		self._getter_access_tracker["Input21"] = {}
+		return self._Input21
+	@Input21.setter
+	def Input21(self, new_state):
+		self._setter_access_tracker["Input21"] = {}
+		global default_state
+		self._Input21 = Input(new_state, default_state["Input21"])
+
+	@property
+	def Input22(self):
+		self._getter_access_tracker["Input22"] = {}
+		return self._Input22
+	@Input22.setter
+	def Input22(self, new_state):
+		self._setter_access_tracker["Input22"] = {}
+		global default_state
+		self._Input22 = Input(new_state, default_state["Input22"])
+
+	@property
+	def TextBox502(self):
+		self._getter_access_tracker["TextBox502"] = {}
+		return self._TextBox502
+	@TextBox502.setter
+	def TextBox502(self, new_state):
+		self._setter_access_tracker["TextBox502"] = {}
+		global default_state
+		self._TextBox502 = TextBox(new_state, default_state["TextBox502"])
+
+	@property
+	def TextBox503(self):
+		self._getter_access_tracker["TextBox503"] = {}
+		return self._TextBox503
+	@TextBox503.setter
+	def TextBox503(self, new_state):
+		self._setter_access_tracker["TextBox503"] = {}
+		global default_state
+		self._TextBox503 = TextBox(new_state, default_state["TextBox503"])
+
+	@property
+	def Input23(self):
+		self._getter_access_tracker["Input23"] = {}
+		return self._Input23
+	@Input23.setter
+	def Input23(self, new_state):
+		self._setter_access_tracker["Input23"] = {}
+		global default_state
+		self._Input23 = Input(new_state, default_state["Input23"])
+
+	@property
+	def TextBox504(self):
+		self._getter_access_tracker["TextBox504"] = {}
+		return self._TextBox504
+	@TextBox504.setter
+	def TextBox504(self, new_state):
+		self._setter_access_tracker["TextBox504"] = {}
+		global default_state
+		self._TextBox504 = TextBox(new_state, default_state["TextBox504"])
+
+	@property
+	def Input24(self):
+		self._getter_access_tracker["Input24"] = {}
+		return self._Input24
+	@Input24.setter
+	def Input24(self, new_state):
+		self._setter_access_tracker["Input24"] = {}
+		global default_state
+		self._Input24 = Input(new_state, default_state["Input24"])
+
+	@property
+	def TextBox505(self):
+		self._getter_access_tracker["TextBox505"] = {}
+		return self._TextBox505
+	@TextBox505.setter
+	def TextBox505(self, new_state):
+		self._setter_access_tracker["TextBox505"] = {}
+		global default_state
+		self._TextBox505 = TextBox(new_state, default_state["TextBox505"])
+
+	@property
+	def Upload3(self):
+		self._getter_access_tracker["Upload3"] = {}
+		return self._Upload3
+	@Upload3.setter
+	def Upload3(self, new_state):
+		self._setter_access_tracker["Upload3"] = {}
+		global default_state
+		self._Upload3 = Upload(new_state, default_state["Upload3"])
+
+	@property
+	def TextBox506(self):
+		self._getter_access_tracker["TextBox506"] = {}
+		return self._TextBox506
+	@TextBox506.setter
+	def TextBox506(self, new_state):
+		self._setter_access_tracker["TextBox506"] = {}
+		global default_state
+		self._TextBox506 = TextBox(new_state, default_state["TextBox506"])
+
+	@property
+	def Upload4(self):
+		self._getter_access_tracker["Upload4"] = {}
+		return self._Upload4
+	@Upload4.setter
+	def Upload4(self, new_state):
+		self._setter_access_tracker["Upload4"] = {}
+		global default_state
+		self._Upload4 = Upload(new_state, default_state["Upload4"])
+
+	@property
+	def TextBox507(self):
+		self._getter_access_tracker["TextBox507"] = {}
+		return self._TextBox507
+	@TextBox507.setter
+	def TextBox507(self, new_state):
+		self._setter_access_tracker["TextBox507"] = {}
+		global default_state
+		self._TextBox507 = TextBox(new_state, default_state["TextBox507"])
+
+	@property
+	def Image319(self):
+		self._getter_access_tracker["Image319"] = {}
+		return self._Image319
+	@Image319.setter
+	def Image319(self, new_state):
+		self._setter_access_tracker["Image319"] = {}
+		global default_state
+		self._Image319 = Image(new_state, default_state["Image319"])
+
+	@property
+	def Image318(self):
+		self._getter_access_tracker["Image318"] = {}
+		return self._Image318
+	@Image318.setter
+	def Image318(self, new_state):
+		self._setter_access_tracker["Image318"] = {}
+		global default_state
+		self._Image318 = Image(new_state, default_state["Image318"])
+
+	@property
+	def TextBox497(self):
+		self._getter_access_tracker["TextBox497"] = {}
+		return self._TextBox497
+	@TextBox497.setter
+	def TextBox497(self, new_state):
+		self._setter_access_tracker["TextBox497"] = {}
+		global default_state
+		self._TextBox497 = TextBox(new_state, default_state["TextBox497"])
+
+	@property
+	def TextBox498(self):
+		self._getter_access_tracker["TextBox498"] = {}
+		return self._TextBox498
+	@TextBox498.setter
+	def TextBox498(self, new_state):
+		self._setter_access_tracker["TextBox498"] = {}
+		global default_state
+		self._TextBox498 = TextBox(new_state, default_state["TextBox498"])
+
+	@property
+	def Tag_1(self):
+		self._getter_access_tracker["Tag_1"] = {}
+		return self._Tag_1
+	@Tag_1.setter
+	def Tag_1(self, new_state):
+		self._setter_access_tracker["Tag_1"] = {}
+		global default_state
+		self._Tag_1 = Button(new_state, default_state["Tag_1"])
+
+	@property
+	def Tag_2(self):
+		self._getter_access_tracker["Tag_2"] = {}
+		return self._Tag_2
+	@Tag_2.setter
+	def Tag_2(self, new_state):
+		self._setter_access_tracker["Tag_2"] = {}
+		global default_state
+		self._Tag_2 = Button(new_state, default_state["Tag_2"])
+
+	@property
+	def Tag_3(self):
+		self._getter_access_tracker["Tag_3"] = {}
+		return self._Tag_3
+	@Tag_3.setter
+	def Tag_3(self, new_state):
+		self._setter_access_tracker["Tag_3"] = {}
+		global default_state
+		self._Tag_3 = Button(new_state, default_state["Tag_3"])
+
+	@property
+	def Image315(self):
+		self._getter_access_tracker["Image315"] = {}
+		return self._Image315
+	@Image315.setter
+	def Image315(self, new_state):
+		self._setter_access_tracker["Image315"] = {}
+		global default_state
+		self._Image315 = Image(new_state, default_state["Image315"])
+
+	@property
+	def Image316(self):
+		self._getter_access_tracker["Image316"] = {}
+		return self._Image316
+	@Image316.setter
+	def Image316(self, new_state):
+		self._setter_access_tracker["Image316"] = {}
+		global default_state
+		self._Image316 = Image(new_state, default_state["Image316"])
+
+	@property
+	def Image317(self):
+		self._getter_access_tracker["Image317"] = {}
+		return self._Image317
+	@Image317.setter
+	def Image317(self, new_state):
+		self._setter_access_tracker["Image317"] = {}
+		global default_state
+		self._Image317 = Image(new_state, default_state["Image317"])
+
+	@property
+	def TextBox496(self):
+		self._getter_access_tracker["TextBox496"] = {}
+		return self._TextBox496
+	@TextBox496.setter
+	def TextBox496(self, new_state):
+		self._setter_access_tracker["TextBox496"] = {}
+		global default_state
+		self._TextBox496 = TextBox(new_state, default_state["TextBox496"])
+
+	@property
+	def TextBox363(self):
+		self._getter_access_tracker["TextBox363"] = {}
+		return self._TextBox363
+	@TextBox363.setter
+	def TextBox363(self, new_state):
+		self._setter_access_tracker["TextBox363"] = {}
+		global default_state
+		self._TextBox363 = TextBox(new_state, default_state["TextBox363"])
+
+	@property
+	def TextBox364(self):
+		self._getter_access_tracker["TextBox364"] = {}
+		return self._TextBox364
+	@TextBox364.setter
+	def TextBox364(self, new_state):
+		self._setter_access_tracker["TextBox364"] = {}
+		global default_state
+		self._TextBox364 = TextBox(new_state, default_state["TextBox364"])
+
+	@property
+	def Filter_Btn_1(self):
+		self._getter_access_tracker["Filter_Btn_1"] = {}
+		return self._Filter_Btn_1
+	@Filter_Btn_1.setter
+	def Filter_Btn_1(self, new_state):
+		self._setter_access_tracker["Filter_Btn_1"] = {}
+		global default_state
+		self._Filter_Btn_1 = Button(new_state, default_state["Filter_Btn_1"])
+
+	@property
+	def Filter_Btn_2(self):
+		self._getter_access_tracker["Filter_Btn_2"] = {}
+		return self._Filter_Btn_2
+	@Filter_Btn_2.setter
+	def Filter_Btn_2(self, new_state):
+		self._setter_access_tracker["Filter_Btn_2"] = {}
+		global default_state
+		self._Filter_Btn_2 = Button(new_state, default_state["Filter_Btn_2"])
+
+	@property
+	def Filter_Btn_3(self):
+		self._getter_access_tracker["Filter_Btn_3"] = {}
+		return self._Filter_Btn_3
+	@Filter_Btn_3.setter
+	def Filter_Btn_3(self, new_state):
+		self._setter_access_tracker["Filter_Btn_3"] = {}
+		global default_state
+		self._Filter_Btn_3 = Button(new_state, default_state["Filter_Btn_3"])
+
+	@property
+	def Filter_Btn_4(self):
+		self._getter_access_tracker["Filter_Btn_4"] = {}
+		return self._Filter_Btn_4
+	@Filter_Btn_4.setter
+	def Filter_Btn_4(self, new_state):
+		self._setter_access_tracker["Filter_Btn_4"] = {}
+		global default_state
+		self._Filter_Btn_4 = Button(new_state, default_state["Filter_Btn_4"])
+
+	@property
+	def Filter_Btn_5(self):
+		self._getter_access_tracker["Filter_Btn_5"] = {}
+		return self._Filter_Btn_5
+	@Filter_Btn_5.setter
+	def Filter_Btn_5(self, new_state):
+		self._setter_access_tracker["Filter_Btn_5"] = {}
+		global default_state
+		self._Filter_Btn_5 = Button(new_state, default_state["Filter_Btn_5"])
+
+	@property
+	def Filter_Btn_6(self):
+		self._getter_access_tracker["Filter_Btn_6"] = {}
+		return self._Filter_Btn_6
+	@Filter_Btn_6.setter
+	def Filter_Btn_6(self, new_state):
+		self._setter_access_tracker["Filter_Btn_6"] = {}
+		global default_state
+		self._Filter_Btn_6 = Button(new_state, default_state["Filter_Btn_6"])
+
+	@property
+	def Filter_Btn_7(self):
+		self._getter_access_tracker["Filter_Btn_7"] = {}
+		return self._Filter_Btn_7
+	@Filter_Btn_7.setter
+	def Filter_Btn_7(self, new_state):
+		self._setter_access_tracker["Filter_Btn_7"] = {}
+		global default_state
+		self._Filter_Btn_7 = Button(new_state, default_state["Filter_Btn_7"])
+
+	@property
+	def Filter_Btn_8(self):
+		self._getter_access_tracker["Filter_Btn_8"] = {}
+		return self._Filter_Btn_8
+	@Filter_Btn_8.setter
+	def Filter_Btn_8(self, new_state):
+		self._setter_access_tracker["Filter_Btn_8"] = {}
+		global default_state
+		self._Filter_Btn_8 = Button(new_state, default_state["Filter_Btn_8"])
+
+	@property
+	def Filter_Btn_9(self):
+		self._getter_access_tracker["Filter_Btn_9"] = {}
+		return self._Filter_Btn_9
+	@Filter_Btn_9.setter
+	def Filter_Btn_9(self, new_state):
+		self._setter_access_tracker["Filter_Btn_9"] = {}
+		global default_state
+		self._Filter_Btn_9 = Button(new_state, default_state["Filter_Btn_9"])
+
+	@property
+	def Card_Image_1(self):
+		self._getter_access_tracker["Card_Image_1"] = {}
+		return self._Card_Image_1
+	@Card_Image_1.setter
+	def Card_Image_1(self, new_state):
+		self._setter_access_tracker["Card_Image_1"] = {}
+		global default_state
+		self._Card_Image_1 = Image(new_state, default_state["Card_Image_1"])
+
+	@property
+	def Card_Title_1(self):
+		self._getter_access_tracker["Card_Title_1"] = {}
+		return self._Card_Title_1
+	@Card_Title_1.setter
+	def Card_Title_1(self, new_state):
+		self._setter_access_tracker["Card_Title_1"] = {}
+		global default_state
+		self._Card_Title_1 = TextBox(new_state, default_state["Card_Title_1"])
+
+	@property
+	def Card_Text_1(self):
+		self._getter_access_tracker["Card_Text_1"] = {}
+		return self._Card_Text_1
+	@Card_Text_1.setter
+	def Card_Text_1(self, new_state):
+		self._setter_access_tracker["Card_Text_1"] = {}
+		global default_state
+		self._Card_Text_1 = TextBox(new_state, default_state["Card_Text_1"])
+
+	@property
+	def Card_Tag_1_a_Text(self):
+		self._getter_access_tracker["Card_Tag_1_a_Text"] = {}
+		return self._Card_Tag_1_a_Text
+	@Card_Tag_1_a_Text.setter
+	def Card_Tag_1_a_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_1_a_Text"] = {}
+		global default_state
+		self._Card_Tag_1_a_Text = Button(new_state, default_state["Card_Tag_1_a_Text"])
+
+	@property
+	def Card_Tag_1_b_Text(self):
+		self._getter_access_tracker["Card_Tag_1_b_Text"] = {}
+		return self._Card_Tag_1_b_Text
+	@Card_Tag_1_b_Text.setter
+	def Card_Tag_1_b_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_1_b_Text"] = {}
+		global default_state
+		self._Card_Tag_1_b_Text = Button(new_state, default_state["Card_Tag_1_b_Text"])
+
+	@property
+	def Card_Tag_1_c_Text(self):
+		self._getter_access_tracker["Card_Tag_1_c_Text"] = {}
+		return self._Card_Tag_1_c_Text
+	@Card_Tag_1_c_Text.setter
+	def Card_Tag_1_c_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_1_c_Text"] = {}
+		global default_state
+		self._Card_Tag_1_c_Text = Button(new_state, default_state["Card_Tag_1_c_Text"])
+
+	@property
+	def Card_Github_1(self):
+		self._getter_access_tracker["Card_Github_1"] = {}
+		return self._Card_Github_1
+	@Card_Github_1.setter
+	def Card_Github_1(self, new_state):
+		self._setter_access_tracker["Card_Github_1"] = {}
+		global default_state
+		self._Card_Github_1 = Image(new_state, default_state["Card_Github_1"])
+
+	@property
+	def Card_Deploy_1(self):
+		self._getter_access_tracker["Card_Deploy_1"] = {}
+		return self._Card_Deploy_1
+	@Card_Deploy_1.setter
+	def Card_Deploy_1(self, new_state):
+		self._setter_access_tracker["Card_Deploy_1"] = {}
+		global default_state
+		self._Card_Deploy_1 = Image(new_state, default_state["Card_Deploy_1"])
+
+	@property
+	def Card_Creator_Image_1(self):
+		self._getter_access_tracker["Card_Creator_Image_1"] = {}
+		return self._Card_Creator_Image_1
+	@Card_Creator_Image_1.setter
+	def Card_Creator_Image_1(self, new_state):
+		self._setter_access_tracker["Card_Creator_Image_1"] = {}
+		global default_state
+		self._Card_Creator_Image_1 = Image(new_state, default_state["Card_Creator_Image_1"])
+
+	@property
+	def Card_Creator_Name_1(self):
+		self._getter_access_tracker["Card_Creator_Name_1"] = {}
+		return self._Card_Creator_Name_1
+	@Card_Creator_Name_1.setter
+	def Card_Creator_Name_1(self, new_state):
+		self._setter_access_tracker["Card_Creator_Name_1"] = {}
+		global default_state
+		self._Card_Creator_Name_1 = TextBox(new_state, default_state["Card_Creator_Name_1"])
+
+	@property
+	def Card_Image_2(self):
+		self._getter_access_tracker["Card_Image_2"] = {}
+		return self._Card_Image_2
+	@Card_Image_2.setter
+	def Card_Image_2(self, new_state):
+		self._setter_access_tracker["Card_Image_2"] = {}
+		global default_state
+		self._Card_Image_2 = Image(new_state, default_state["Card_Image_2"])
+
+	@property
+	def Card_Creator_Name_2(self):
+		self._getter_access_tracker["Card_Creator_Name_2"] = {}
+		return self._Card_Creator_Name_2
+	@Card_Creator_Name_2.setter
+	def Card_Creator_Name_2(self, new_state):
+		self._setter_access_tracker["Card_Creator_Name_2"] = {}
+		global default_state
+		self._Card_Creator_Name_2 = TextBox(new_state, default_state["Card_Creator_Name_2"])
+
+	@property
+	def Card_Creator_Image_2(self):
+		self._getter_access_tracker["Card_Creator_Image_2"] = {}
+		return self._Card_Creator_Image_2
+	@Card_Creator_Image_2.setter
+	def Card_Creator_Image_2(self, new_state):
+		self._setter_access_tracker["Card_Creator_Image_2"] = {}
+		global default_state
+		self._Card_Creator_Image_2 = Image(new_state, default_state["Card_Creator_Image_2"])
+
+	@property
+	def Card_Deploy_2(self):
+		self._getter_access_tracker["Card_Deploy_2"] = {}
+		return self._Card_Deploy_2
+	@Card_Deploy_2.setter
+	def Card_Deploy_2(self, new_state):
+		self._setter_access_tracker["Card_Deploy_2"] = {}
+		global default_state
+		self._Card_Deploy_2 = Image(new_state, default_state["Card_Deploy_2"])
+
+	@property
+	def Card_Github_2(self):
+		self._getter_access_tracker["Card_Github_2"] = {}
+		return self._Card_Github_2
+	@Card_Github_2.setter
+	def Card_Github_2(self, new_state):
+		self._setter_access_tracker["Card_Github_2"] = {}
+		global default_state
+		self._Card_Github_2 = Image(new_state, default_state["Card_Github_2"])
+
+	@property
+	def Card_Text_2(self):
+		self._getter_access_tracker["Card_Text_2"] = {}
+		return self._Card_Text_2
+	@Card_Text_2.setter
+	def Card_Text_2(self, new_state):
+		self._setter_access_tracker["Card_Text_2"] = {}
+		global default_state
+		self._Card_Text_2 = TextBox(new_state, default_state["Card_Text_2"])
+
+	@property
+	def Card_Title_2(self):
+		self._getter_access_tracker["Card_Title_2"] = {}
+		return self._Card_Title_2
+	@Card_Title_2.setter
+	def Card_Title_2(self, new_state):
+		self._setter_access_tracker["Card_Title_2"] = {}
+		global default_state
+		self._Card_Title_2 = TextBox(new_state, default_state["Card_Title_2"])
+
+	@property
+	def Card_Tag_2_c_Text(self):
+		self._getter_access_tracker["Card_Tag_2_c_Text"] = {}
+		return self._Card_Tag_2_c_Text
+	@Card_Tag_2_c_Text.setter
+	def Card_Tag_2_c_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_2_c_Text"] = {}
+		global default_state
+		self._Card_Tag_2_c_Text = Button(new_state, default_state["Card_Tag_2_c_Text"])
+
+	@property
+	def Card_Tag_2_b_Text(self):
+		self._getter_access_tracker["Card_Tag_2_b_Text"] = {}
+		return self._Card_Tag_2_b_Text
+	@Card_Tag_2_b_Text.setter
+	def Card_Tag_2_b_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_2_b_Text"] = {}
+		global default_state
+		self._Card_Tag_2_b_Text = Button(new_state, default_state["Card_Tag_2_b_Text"])
+
+	@property
+	def Card_Tag_2_a_Text(self):
+		self._getter_access_tracker["Card_Tag_2_a_Text"] = {}
+		return self._Card_Tag_2_a_Text
+	@Card_Tag_2_a_Text.setter
+	def Card_Tag_2_a_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_2_a_Text"] = {}
+		global default_state
+		self._Card_Tag_2_a_Text = Button(new_state, default_state["Card_Tag_2_a_Text"])
+
+	@property
+	def Card_Image_3(self):
+		self._getter_access_tracker["Card_Image_3"] = {}
+		return self._Card_Image_3
+	@Card_Image_3.setter
+	def Card_Image_3(self, new_state):
+		self._setter_access_tracker["Card_Image_3"] = {}
+		global default_state
+		self._Card_Image_3 = Image(new_state, default_state["Card_Image_3"])
+
+	@property
+	def Card_Title_3(self):
+		self._getter_access_tracker["Card_Title_3"] = {}
+		return self._Card_Title_3
+	@Card_Title_3.setter
+	def Card_Title_3(self, new_state):
+		self._setter_access_tracker["Card_Title_3"] = {}
+		global default_state
+		self._Card_Title_3 = TextBox(new_state, default_state["Card_Title_3"])
+
+	@property
+	def Card_Text_3(self):
+		self._getter_access_tracker["Card_Text_3"] = {}
+		return self._Card_Text_3
+	@Card_Text_3.setter
+	def Card_Text_3(self, new_state):
+		self._setter_access_tracker["Card_Text_3"] = {}
+		global default_state
+		self._Card_Text_3 = TextBox(new_state, default_state["Card_Text_3"])
+
+	@property
+	def Card_Github_3(self):
+		self._getter_access_tracker["Card_Github_3"] = {}
+		return self._Card_Github_3
+	@Card_Github_3.setter
+	def Card_Github_3(self, new_state):
+		self._setter_access_tracker["Card_Github_3"] = {}
+		global default_state
+		self._Card_Github_3 = Image(new_state, default_state["Card_Github_3"])
+
+	@property
+	def Card_Deploy_3(self):
+		self._getter_access_tracker["Card_Deploy_3"] = {}
+		return self._Card_Deploy_3
+	@Card_Deploy_3.setter
+	def Card_Deploy_3(self, new_state):
+		self._setter_access_tracker["Card_Deploy_3"] = {}
+		global default_state
+		self._Card_Deploy_3 = Image(new_state, default_state["Card_Deploy_3"])
+
+	@property
+	def Card_Creator_Image_3(self):
+		self._getter_access_tracker["Card_Creator_Image_3"] = {}
+		return self._Card_Creator_Image_3
+	@Card_Creator_Image_3.setter
+	def Card_Creator_Image_3(self, new_state):
+		self._setter_access_tracker["Card_Creator_Image_3"] = {}
+		global default_state
+		self._Card_Creator_Image_3 = Image(new_state, default_state["Card_Creator_Image_3"])
+
+	@property
+	def Card_Creator_Name_3(self):
+		self._getter_access_tracker["Card_Creator_Name_3"] = {}
+		return self._Card_Creator_Name_3
+	@Card_Creator_Name_3.setter
+	def Card_Creator_Name_3(self, new_state):
+		self._setter_access_tracker["Card_Creator_Name_3"] = {}
+		global default_state
+		self._Card_Creator_Name_3 = TextBox(new_state, default_state["Card_Creator_Name_3"])
+
+	@property
+	def Card_Tag_3_c_Text(self):
+		self._getter_access_tracker["Card_Tag_3_c_Text"] = {}
+		return self._Card_Tag_3_c_Text
+	@Card_Tag_3_c_Text.setter
+	def Card_Tag_3_c_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_3_c_Text"] = {}
+		global default_state
+		self._Card_Tag_3_c_Text = Button(new_state, default_state["Card_Tag_3_c_Text"])
+
+	@property
+	def Card_Tag_3_b_Text(self):
+		self._getter_access_tracker["Card_Tag_3_b_Text"] = {}
+		return self._Card_Tag_3_b_Text
+	@Card_Tag_3_b_Text.setter
+	def Card_Tag_3_b_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_3_b_Text"] = {}
+		global default_state
+		self._Card_Tag_3_b_Text = Button(new_state, default_state["Card_Tag_3_b_Text"])
+
+	@property
+	def Card_Tag_3_a_Text(self):
+		self._getter_access_tracker["Card_Tag_3_a_Text"] = {}
+		return self._Card_Tag_3_a_Text
+	@Card_Tag_3_a_Text.setter
+	def Card_Tag_3_a_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_3_a_Text"] = {}
+		global default_state
+		self._Card_Tag_3_a_Text = Button(new_state, default_state["Card_Tag_3_a_Text"])
+
+	@property
+	def Card_Image_6(self):
+		self._getter_access_tracker["Card_Image_6"] = {}
+		return self._Card_Image_6
+	@Card_Image_6.setter
+	def Card_Image_6(self, new_state):
+		self._setter_access_tracker["Card_Image_6"] = {}
+		global default_state
+		self._Card_Image_6 = Image(new_state, default_state["Card_Image_6"])
+
+	@property
+	def Card_Creator_Name_6(self):
+		self._getter_access_tracker["Card_Creator_Name_6"] = {}
+		return self._Card_Creator_Name_6
+	@Card_Creator_Name_6.setter
+	def Card_Creator_Name_6(self, new_state):
+		self._setter_access_tracker["Card_Creator_Name_6"] = {}
+		global default_state
+		self._Card_Creator_Name_6 = TextBox(new_state, default_state["Card_Creator_Name_6"])
+
+	@property
+	def Card_Creator_Image_6(self):
+		self._getter_access_tracker["Card_Creator_Image_6"] = {}
+		return self._Card_Creator_Image_6
+	@Card_Creator_Image_6.setter
+	def Card_Creator_Image_6(self, new_state):
+		self._setter_access_tracker["Card_Creator_Image_6"] = {}
+		global default_state
+		self._Card_Creator_Image_6 = Image(new_state, default_state["Card_Creator_Image_6"])
+
+	@property
+	def Card_Deploy_6(self):
+		self._getter_access_tracker["Card_Deploy_6"] = {}
+		return self._Card_Deploy_6
+	@Card_Deploy_6.setter
+	def Card_Deploy_6(self, new_state):
+		self._setter_access_tracker["Card_Deploy_6"] = {}
+		global default_state
+		self._Card_Deploy_6 = Image(new_state, default_state["Card_Deploy_6"])
+
+	@property
+	def Card_Github_6(self):
+		self._getter_access_tracker["Card_Github_6"] = {}
+		return self._Card_Github_6
+	@Card_Github_6.setter
+	def Card_Github_6(self, new_state):
+		self._setter_access_tracker["Card_Github_6"] = {}
+		global default_state
+		self._Card_Github_6 = Image(new_state, default_state["Card_Github_6"])
+
+	@property
+	def Card_Text_6(self):
+		self._getter_access_tracker["Card_Text_6"] = {}
+		return self._Card_Text_6
+	@Card_Text_6.setter
+	def Card_Text_6(self, new_state):
+		self._setter_access_tracker["Card_Text_6"] = {}
+		global default_state
+		self._Card_Text_6 = TextBox(new_state, default_state["Card_Text_6"])
+
+	@property
+	def Card_Title_6(self):
+		self._getter_access_tracker["Card_Title_6"] = {}
+		return self._Card_Title_6
+	@Card_Title_6.setter
+	def Card_Title_6(self, new_state):
+		self._setter_access_tracker["Card_Title_6"] = {}
+		global default_state
+		self._Card_Title_6 = TextBox(new_state, default_state["Card_Title_6"])
+
+	@property
+	def Card_Tag_6_c_Text(self):
+		self._getter_access_tracker["Card_Tag_6_c_Text"] = {}
+		return self._Card_Tag_6_c_Text
+	@Card_Tag_6_c_Text.setter
+	def Card_Tag_6_c_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_6_c_Text"] = {}
+		global default_state
+		self._Card_Tag_6_c_Text = Button(new_state, default_state["Card_Tag_6_c_Text"])
+
+	@property
+	def Card_Tag_6_b_Text(self):
+		self._getter_access_tracker["Card_Tag_6_b_Text"] = {}
+		return self._Card_Tag_6_b_Text
+	@Card_Tag_6_b_Text.setter
+	def Card_Tag_6_b_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_6_b_Text"] = {}
+		global default_state
+		self._Card_Tag_6_b_Text = Button(new_state, default_state["Card_Tag_6_b_Text"])
+
+	@property
+	def Card_Tag_6_a_Text(self):
+		self._getter_access_tracker["Card_Tag_6_a_Text"] = {}
+		return self._Card_Tag_6_a_Text
+	@Card_Tag_6_a_Text.setter
+	def Card_Tag_6_a_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_6_a_Text"] = {}
+		global default_state
+		self._Card_Tag_6_a_Text = Button(new_state, default_state["Card_Tag_6_a_Text"])
+
+	@property
+	def Card_Image_5(self):
+		self._getter_access_tracker["Card_Image_5"] = {}
+		return self._Card_Image_5
+	@Card_Image_5.setter
+	def Card_Image_5(self, new_state):
+		self._setter_access_tracker["Card_Image_5"] = {}
+		global default_state
+		self._Card_Image_5 = Image(new_state, default_state["Card_Image_5"])
+
+	@property
+	def Card_Title_5(self):
+		self._getter_access_tracker["Card_Title_5"] = {}
+		return self._Card_Title_5
+	@Card_Title_5.setter
+	def Card_Title_5(self, new_state):
+		self._setter_access_tracker["Card_Title_5"] = {}
+		global default_state
+		self._Card_Title_5 = TextBox(new_state, default_state["Card_Title_5"])
+
+	@property
+	def Card_Text_5(self):
+		self._getter_access_tracker["Card_Text_5"] = {}
+		return self._Card_Text_5
+	@Card_Text_5.setter
+	def Card_Text_5(self, new_state):
+		self._setter_access_tracker["Card_Text_5"] = {}
+		global default_state
+		self._Card_Text_5 = TextBox(new_state, default_state["Card_Text_5"])
+
+	@property
+	def Card_Github_5(self):
+		self._getter_access_tracker["Card_Github_5"] = {}
+		return self._Card_Github_5
+	@Card_Github_5.setter
+	def Card_Github_5(self, new_state):
+		self._setter_access_tracker["Card_Github_5"] = {}
+		global default_state
+		self._Card_Github_5 = Image(new_state, default_state["Card_Github_5"])
+
+	@property
+	def Card_Deploy_5(self):
+		self._getter_access_tracker["Card_Deploy_5"] = {}
+		return self._Card_Deploy_5
+	@Card_Deploy_5.setter
+	def Card_Deploy_5(self, new_state):
+		self._setter_access_tracker["Card_Deploy_5"] = {}
+		global default_state
+		self._Card_Deploy_5 = Image(new_state, default_state["Card_Deploy_5"])
+
+	@property
+	def Card_Creator_Image_5(self):
+		self._getter_access_tracker["Card_Creator_Image_5"] = {}
+		return self._Card_Creator_Image_5
+	@Card_Creator_Image_5.setter
+	def Card_Creator_Image_5(self, new_state):
+		self._setter_access_tracker["Card_Creator_Image_5"] = {}
+		global default_state
+		self._Card_Creator_Image_5 = Image(new_state, default_state["Card_Creator_Image_5"])
+
+	@property
+	def Card_Creator_Name_5(self):
+		self._getter_access_tracker["Card_Creator_Name_5"] = {}
+		return self._Card_Creator_Name_5
+	@Card_Creator_Name_5.setter
+	def Card_Creator_Name_5(self, new_state):
+		self._setter_access_tracker["Card_Creator_Name_5"] = {}
+		global default_state
+		self._Card_Creator_Name_5 = TextBox(new_state, default_state["Card_Creator_Name_5"])
+
+	@property
+	def Card_Tag_5_c_Text(self):
+		self._getter_access_tracker["Card_Tag_5_c_Text"] = {}
+		return self._Card_Tag_5_c_Text
+	@Card_Tag_5_c_Text.setter
+	def Card_Tag_5_c_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_5_c_Text"] = {}
+		global default_state
+		self._Card_Tag_5_c_Text = Button(new_state, default_state["Card_Tag_5_c_Text"])
+
+	@property
+	def Card_Tag_5_b_Text(self):
+		self._getter_access_tracker["Card_Tag_5_b_Text"] = {}
+		return self._Card_Tag_5_b_Text
+	@Card_Tag_5_b_Text.setter
+	def Card_Tag_5_b_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_5_b_Text"] = {}
+		global default_state
+		self._Card_Tag_5_b_Text = Button(new_state, default_state["Card_Tag_5_b_Text"])
+
+	@property
+	def Card_Tag_5_a_Text(self):
+		self._getter_access_tracker["Card_Tag_5_a_Text"] = {}
+		return self._Card_Tag_5_a_Text
+	@Card_Tag_5_a_Text.setter
+	def Card_Tag_5_a_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_5_a_Text"] = {}
+		global default_state
+		self._Card_Tag_5_a_Text = Button(new_state, default_state["Card_Tag_5_a_Text"])
+
+	@property
+	def Card_Image_4(self):
+		self._getter_access_tracker["Card_Image_4"] = {}
+		return self._Card_Image_4
+	@Card_Image_4.setter
+	def Card_Image_4(self, new_state):
+		self._setter_access_tracker["Card_Image_4"] = {}
+		global default_state
+		self._Card_Image_4 = Image(new_state, default_state["Card_Image_4"])
+
+	@property
+	def Card_Creator_Name_4(self):
+		self._getter_access_tracker["Card_Creator_Name_4"] = {}
+		return self._Card_Creator_Name_4
+	@Card_Creator_Name_4.setter
+	def Card_Creator_Name_4(self, new_state):
+		self._setter_access_tracker["Card_Creator_Name_4"] = {}
+		global default_state
+		self._Card_Creator_Name_4 = TextBox(new_state, default_state["Card_Creator_Name_4"])
+
+	@property
+	def Card_Creator_Image_4(self):
+		self._getter_access_tracker["Card_Creator_Image_4"] = {}
+		return self._Card_Creator_Image_4
+	@Card_Creator_Image_4.setter
+	def Card_Creator_Image_4(self, new_state):
+		self._setter_access_tracker["Card_Creator_Image_4"] = {}
+		global default_state
+		self._Card_Creator_Image_4 = Image(new_state, default_state["Card_Creator_Image_4"])
+
+	@property
+	def Card_Deploy_4(self):
+		self._getter_access_tracker["Card_Deploy_4"] = {}
+		return self._Card_Deploy_4
+	@Card_Deploy_4.setter
+	def Card_Deploy_4(self, new_state):
+		self._setter_access_tracker["Card_Deploy_4"] = {}
+		global default_state
+		self._Card_Deploy_4 = Image(new_state, default_state["Card_Deploy_4"])
+
+	@property
+	def Card_Github_4(self):
+		self._getter_access_tracker["Card_Github_4"] = {}
+		return self._Card_Github_4
+	@Card_Github_4.setter
+	def Card_Github_4(self, new_state):
+		self._setter_access_tracker["Card_Github_4"] = {}
+		global default_state
+		self._Card_Github_4 = Image(new_state, default_state["Card_Github_4"])
+
+	@property
+	def Card_Text_4(self):
+		self._getter_access_tracker["Card_Text_4"] = {}
+		return self._Card_Text_4
+	@Card_Text_4.setter
+	def Card_Text_4(self, new_state):
+		self._setter_access_tracker["Card_Text_4"] = {}
+		global default_state
+		self._Card_Text_4 = TextBox(new_state, default_state["Card_Text_4"])
+
+	@property
+	def Card_Title_4(self):
+		self._getter_access_tracker["Card_Title_4"] = {}
+		return self._Card_Title_4
+	@Card_Title_4.setter
+	def Card_Title_4(self, new_state):
+		self._setter_access_tracker["Card_Title_4"] = {}
+		global default_state
+		self._Card_Title_4 = TextBox(new_state, default_state["Card_Title_4"])
+
+	@property
+	def Card_Tag_4_c_Text(self):
+		self._getter_access_tracker["Card_Tag_4_c_Text"] = {}
+		return self._Card_Tag_4_c_Text
+	@Card_Tag_4_c_Text.setter
+	def Card_Tag_4_c_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_4_c_Text"] = {}
+		global default_state
+		self._Card_Tag_4_c_Text = Button(new_state, default_state["Card_Tag_4_c_Text"])
+
+	@property
+	def Card_Tag_4_b_Text(self):
+		self._getter_access_tracker["Card_Tag_4_b_Text"] = {}
+		return self._Card_Tag_4_b_Text
+	@Card_Tag_4_b_Text.setter
+	def Card_Tag_4_b_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_4_b_Text"] = {}
+		global default_state
+		self._Card_Tag_4_b_Text = Button(new_state, default_state["Card_Tag_4_b_Text"])
+
+	@property
+	def Card_Tag_4_a_Text(self):
+		self._getter_access_tracker["Card_Tag_4_a_Text"] = {}
+		return self._Card_Tag_4_a_Text
+	@Card_Tag_4_a_Text.setter
+	def Card_Tag_4_a_Text(self, new_state):
+		self._setter_access_tracker["Card_Tag_4_a_Text"] = {}
+		global default_state
+		self._Card_Tag_4_a_Text = Button(new_state, default_state["Card_Tag_4_a_Text"])
+
+	@property
+	def Image303(self):
+		self._getter_access_tracker["Image303"] = {}
+		return self._Image303
+	@Image303.setter
+	def Image303(self, new_state):
+		self._setter_access_tracker["Image303"] = {}
+		global default_state
+		self._Image303 = Image(new_state, default_state["Image303"])
+
+	@property
+	def Image304(self):
+		self._getter_access_tracker["Image304"] = {}
+		return self._Image304
+	@Image304.setter
+	def Image304(self, new_state):
+		self._setter_access_tracker["Image304"] = {}
+		global default_state
+		self._Image304 = Image(new_state, default_state["Image304"])
+
+	@property
+	def TextBox474(self):
+		self._getter_access_tracker["TextBox474"] = {}
+		return self._TextBox474
+	@TextBox474.setter
+	def TextBox474(self, new_state):
+		self._setter_access_tracker["TextBox474"] = {}
+		global default_state
+		self._TextBox474 = TextBox(new_state, default_state["TextBox474"])
+
+	@property
+	def TextBox453(self):
+		self._getter_access_tracker["TextBox453"] = {}
+		return self._TextBox453
+	@TextBox453.setter
+	def TextBox453(self, new_state):
+		self._setter_access_tracker["TextBox453"] = {}
+		global default_state
+		self._TextBox453 = TextBox(new_state, default_state["TextBox453"])
+
+	@property
+	def Image278(self):
+		self._getter_access_tracker["Image278"] = {}
+		return self._Image278
+	@Image278.setter
+	def Image278(self, new_state):
+		self._setter_access_tracker["Image278"] = {}
+		global default_state
+		self._Image278 = Image(new_state, default_state["Image278"])
+
+	@property
+	def TextBox430(self):
+		self._getter_access_tracker["TextBox430"] = {}
+		return self._TextBox430
+	@TextBox430.setter
+	def TextBox430(self, new_state):
+		self._setter_access_tracker["TextBox430"] = {}
+		global default_state
+		self._TextBox430 = TextBox(new_state, default_state["TextBox430"])
+
+	@property
+	def TextBox431(self):
+		self._getter_access_tracker["TextBox431"] = {}
+		return self._TextBox431
+	@TextBox431.setter
+	def TextBox431(self, new_state):
+		self._setter_access_tracker["TextBox431"] = {}
+		global default_state
+		self._TextBox431 = TextBox(new_state, default_state["TextBox431"])
+
+	@property
+	def Button200(self):
+		self._getter_access_tracker["Button200"] = {}
+		return self._Button200
+	@Button200.setter
+	def Button200(self, new_state):
+		self._setter_access_tracker["Button200"] = {}
+		global default_state
+		self._Button200 = Button(new_state, default_state["Button200"])
+
+	@property
+	def TextBox438(self):
+		self._getter_access_tracker["TextBox438"] = {}
+		return self._TextBox438
+	@TextBox438.setter
+	def TextBox438(self, new_state):
+		self._setter_access_tracker["TextBox438"] = {}
+		global default_state
+		self._TextBox438 = TextBox(new_state, default_state["TextBox438"])
+
+	@property
+	def Image279(self):
+		self._getter_access_tracker["Image279"] = {}
+		return self._Image279
+	@Image279.setter
+	def Image279(self, new_state):
+		self._setter_access_tracker["Image279"] = {}
+		global default_state
+		self._Image279 = Image(new_state, default_state["Image279"])
+
+	@property
+	def TextBox448(self):
+		self._getter_access_tracker["TextBox448"] = {}
+		return self._TextBox448
+	@TextBox448.setter
+	def TextBox448(self, new_state):
+		self._setter_access_tracker["TextBox448"] = {}
+		global default_state
+		self._TextBox448 = TextBox(new_state, default_state["TextBox448"])
+
+	@property
+	def TextBox449(self):
+		self._getter_access_tracker["TextBox449"] = {}
+		return self._TextBox449
+	@TextBox449.setter
+	def TextBox449(self, new_state):
+		self._setter_access_tracker["TextBox449"] = {}
+		global default_state
+		self._TextBox449 = TextBox(new_state, default_state["TextBox449"])
+
+	@property
+	def TextBox450(self):
+		self._getter_access_tracker["TextBox450"] = {}
+		return self._TextBox450
+	@TextBox450.setter
+	def TextBox450(self, new_state):
+		self._setter_access_tracker["TextBox450"] = {}
+		global default_state
+		self._TextBox450 = TextBox(new_state, default_state["TextBox450"])
+
+	@property
+	def TextBox451(self):
+		self._getter_access_tracker["TextBox451"] = {}
+		return self._TextBox451
+	@TextBox451.setter
+	def TextBox451(self, new_state):
+		self._setter_access_tracker["TextBox451"] = {}
+		global default_state
+		self._TextBox451 = TextBox(new_state, default_state["TextBox451"])
+
+	@property
+	def Image300(self):
+		self._getter_access_tracker["Image300"] = {}
+		return self._Image300
+	@Image300.setter
+	def Image300(self, new_state):
+		self._setter_access_tracker["Image300"] = {}
+		global default_state
+		self._Image300 = Image(new_state, default_state["Image300"])
+
+	@property
+	def TextBox472(self):
+		self._getter_access_tracker["TextBox472"] = {}
+		return self._TextBox472
+	@TextBox472.setter
+	def TextBox472(self, new_state):
+		self._setter_access_tracker["TextBox472"] = {}
+		global default_state
+		self._TextBox472 = TextBox(new_state, default_state["TextBox472"])
+
+	@property
+	def TextBox466(self):
+		self._getter_access_tracker["TextBox466"] = {}
+		return self._TextBox466
+	@TextBox466.setter
+	def TextBox466(self, new_state):
+		self._setter_access_tracker["TextBox466"] = {}
+		global default_state
+		self._TextBox466 = TextBox(new_state, default_state["TextBox466"])
+
+	@property
+	def TextBox467(self):
+		self._getter_access_tracker["TextBox467"] = {}
+		return self._TextBox467
+	@TextBox467.setter
+	def TextBox467(self, new_state):
+		self._setter_access_tracker["TextBox467"] = {}
+		global default_state
+		self._TextBox467 = TextBox(new_state, default_state["TextBox467"])
+
+	@property
+	def TextBox456(self):
+		self._getter_access_tracker["TextBox456"] = {}
+		return self._TextBox456
+	@TextBox456.setter
+	def TextBox456(self, new_state):
+		self._setter_access_tracker["TextBox456"] = {}
+		global default_state
+		self._TextBox456 = TextBox(new_state, default_state["TextBox456"])
+
+	@property
+	def Image295(self):
+		self._getter_access_tracker["Image295"] = {}
+		return self._Image295
+	@Image295.setter
+	def Image295(self, new_state):
+		self._setter_access_tracker["Image295"] = {}
+		global default_state
+		self._Image295 = Image(new_state, default_state["Image295"])
+
+	@property
+	def TextBox455(self):
+		self._getter_access_tracker["TextBox455"] = {}
+		return self._TextBox455
+	@TextBox455.setter
+	def TextBox455(self, new_state):
+		self._setter_access_tracker["TextBox455"] = {}
+		global default_state
+		self._TextBox455 = TextBox(new_state, default_state["TextBox455"])
+
+	@property
+	def Image294(self):
+		self._getter_access_tracker["Image294"] = {}
+		return self._Image294
+	@Image294.setter
+	def Image294(self, new_state):
+		self._setter_access_tracker["Image294"] = {}
+		global default_state
+		self._Image294 = Image(new_state, default_state["Image294"])
+
+	@property
+	def Image296(self):
+		self._getter_access_tracker["Image296"] = {}
+		return self._Image296
+	@Image296.setter
+	def Image296(self, new_state):
+		self._setter_access_tracker["Image296"] = {}
+		global default_state
+		self._Image296 = Image(new_state, default_state["Image296"])
+
+	@property
+	def Image297(self):
+		self._getter_access_tracker["Image297"] = {}
+		return self._Image297
+	@Image297.setter
+	def Image297(self, new_state):
+		self._setter_access_tracker["Image297"] = {}
+		global default_state
+		self._Image297 = Image(new_state, default_state["Image297"])
+
+	@property
+	def Image298(self):
+		self._getter_access_tracker["Image298"] = {}
+		return self._Image298
+	@Image298.setter
+	def Image298(self, new_state):
+		self._setter_access_tracker["Image298"] = {}
+		global default_state
+		self._Image298 = Image(new_state, default_state["Image298"])
+
+	@property
+	def Image299(self):
+		self._getter_access_tracker["Image299"] = {}
+		return self._Image299
+	@Image299.setter
+	def Image299(self, new_state):
+		self._setter_access_tracker["Image299"] = {}
+		global default_state
+		self._Image299 = Image(new_state, default_state["Image299"])
+
+	@property
+	def TextBox468(self):
+		self._getter_access_tracker["TextBox468"] = {}
+		return self._TextBox468
+	@TextBox468.setter
+	def TextBox468(self, new_state):
+		self._setter_access_tracker["TextBox468"] = {}
+		global default_state
+		self._TextBox468 = TextBox(new_state, default_state["TextBox468"])
+
+	@property
+	def TextBox457(self):
+		self._getter_access_tracker["TextBox457"] = {}
+		return self._TextBox457
+	@TextBox457.setter
+	def TextBox457(self, new_state):
+		self._setter_access_tracker["TextBox457"] = {}
+		global default_state
+		self._TextBox457 = TextBox(new_state, default_state["TextBox457"])
+
+	@property
+	def TextBox469(self):
+		self._getter_access_tracker["TextBox469"] = {}
+		return self._TextBox469
+	@TextBox469.setter
+	def TextBox469(self, new_state):
+		self._setter_access_tracker["TextBox469"] = {}
+		global default_state
+		self._TextBox469 = TextBox(new_state, default_state["TextBox469"])
+
+	@property
+	def TextBox458(self):
+		self._getter_access_tracker["TextBox458"] = {}
+		return self._TextBox458
+	@TextBox458.setter
+	def TextBox458(self, new_state):
+		self._setter_access_tracker["TextBox458"] = {}
+		global default_state
+		self._TextBox458 = TextBox(new_state, default_state["TextBox458"])
+
+	@property
+	def TextBox459(self):
+		self._getter_access_tracker["TextBox459"] = {}
+		return self._TextBox459
+	@TextBox459.setter
+	def TextBox459(self, new_state):
+		self._setter_access_tracker["TextBox459"] = {}
+		global default_state
+		self._TextBox459 = TextBox(new_state, default_state["TextBox459"])
+
+	@property
+	def TextBox460(self):
+		self._getter_access_tracker["TextBox460"] = {}
+		return self._TextBox460
+	@TextBox460.setter
+	def TextBox460(self, new_state):
+		self._setter_access_tracker["TextBox460"] = {}
+		global default_state
+		self._TextBox460 = TextBox(new_state, default_state["TextBox460"])
+
+	@property
+	def TextBox470(self):
+		self._getter_access_tracker["TextBox470"] = {}
+		return self._TextBox470
+	@TextBox470.setter
+	def TextBox470(self, new_state):
+		self._setter_access_tracker["TextBox470"] = {}
+		global default_state
+		self._TextBox470 = TextBox(new_state, default_state["TextBox470"])
+
+	@property
+	def TextBox461(self):
+		self._getter_access_tracker["TextBox461"] = {}
+		return self._TextBox461
+	@TextBox461.setter
+	def TextBox461(self, new_state):
+		self._setter_access_tracker["TextBox461"] = {}
+		global default_state
+		self._TextBox461 = TextBox(new_state, default_state["TextBox461"])
+
+	@property
+	def TextBox462(self):
+		self._getter_access_tracker["TextBox462"] = {}
+		return self._TextBox462
+	@TextBox462.setter
+	def TextBox462(self, new_state):
+		self._setter_access_tracker["TextBox462"] = {}
+		global default_state
+		self._TextBox462 = TextBox(new_state, default_state["TextBox462"])
+
+	@property
+	def TextBox463(self):
+		self._getter_access_tracker["TextBox463"] = {}
+		return self._TextBox463
+	@TextBox463.setter
+	def TextBox463(self, new_state):
+		self._setter_access_tracker["TextBox463"] = {}
+		global default_state
+		self._TextBox463 = TextBox(new_state, default_state["TextBox463"])
+
+	@property
+	def TextBox471(self):
+		self._getter_access_tracker["TextBox471"] = {}
+		return self._TextBox471
+	@TextBox471.setter
+	def TextBox471(self, new_state):
+		self._setter_access_tracker["TextBox471"] = {}
+		global default_state
+		self._TextBox471 = TextBox(new_state, default_state["TextBox471"])
+
+	@property
+	def TextBox464(self):
+		self._getter_access_tracker["TextBox464"] = {}
+		return self._TextBox464
+	@TextBox464.setter
+	def TextBox464(self, new_state):
+		self._setter_access_tracker["TextBox464"] = {}
+		global default_state
+		self._TextBox464 = TextBox(new_state, default_state["TextBox464"])
+
+	@property
+	def TextBox465(self):
+		self._getter_access_tracker["TextBox465"] = {}
+		return self._TextBox465
+	@TextBox465.setter
+	def TextBox465(self, new_state):
+		self._setter_access_tracker["TextBox465"] = {}
+		global default_state
+		self._TextBox465 = TextBox(new_state, default_state["TextBox465"])
+
+	def _to_json_fields(self):
+		return {
+			"Flex462": self._Flex462,
+			"Overlay3": self._Overlay3,
+			"Flex786": self._Flex786,
+			"Flex784": self._Flex784,
+			"Flex779": self._Flex779,
+			"Flex770": self._Flex770,
+			"Flex771": self._Flex771,
+			"Flex780": self._Flex780,
+			"Flex772": self._Flex772,
+			"Flex773": self._Flex773,
+			"Flex781": self._Flex781,
+			"Flex774": self._Flex774,
+			"Flex775": self._Flex775,
+			"Flex782": self._Flex782,
+			"Flex776": self._Flex776,
+			"Flex777": self._Flex777,
+			"Flex785": self._Flex785,
+			"Flex783": self._Flex783,
+			"Flex778": self._Flex778,
+			"Flex769": self._Flex769,
+			"Flex766": self._Flex766,
+			"Flex767": self._Flex767,
+			"Tag_Flex_1": self._Tag_Flex_1,
+			"Tag_Flex_2": self._Tag_Flex_2,
+			"Tag_Flex_3": self._Tag_Flex_3,
+			"Flex768": self._Flex768,
+			"Flex764": self._Flex764,
+			"Flex765": self._Flex765,
+			"Flex463": self._Flex463,
+			"Flex466": self._Flex466,
+			"Flex467": self._Flex467,
+			"Filter1": self._Filter1,
+			"Filter2": self._Filter2,
+			"Filter3": self._Filter3,
+			"Filter4": self._Filter4,
+			"Filter5": self._Filter5,
+			"Filter6": self._Filter6,
+			"Filter7": self._Filter7,
+			"Filter8": self._Filter8,
+			"Filter9": self._Filter9,
+			"Flex468": self._Flex468,
+			"Flex469": self._Flex469,
+			"Card_1": self._Card_1,
+			"Flex481": self._Flex481,
+			"Flex482": self._Flex482,
+			"Flex483": self._Flex483,
+			"Card_Tag_1_a": self._Card_Tag_1_a,
+			"Card_Tag_1_b": self._Card_Tag_1_b,
+			"Card_Tag_1_c": self._Card_Tag_1_c,
+			"Flex484": self._Flex484,
+			"Flex485": self._Flex485,
+			"Flex486": self._Flex486,
+			"Card_2": self._Card_2,
+			"Flex528": self._Flex528,
+			"Flex525": self._Flex525,
+			"Flex523": self._Flex523,
+			"Flex524": self._Flex524,
+			"Flex527": self._Flex527,
+			"Flex657": self._Flex657,
+			"Card_Tag_2_c": self._Card_Tag_2_c,
+			"Card_Tag_2_b": self._Card_Tag_2_b,
+			"Card_Tag_2_a": self._Card_Tag_2_a,
+			"Card_3": self._Card_3,
+			"Flex535": self._Flex535,
+			"Flex532": self._Flex532,
+			"Flex534": self._Flex534,
+			"Flex530": self._Flex530,
+			"Flex531": self._Flex531,
+			"Flex661": self._Flex661,
+			"Card_Tag_3_c": self._Card_Tag_3_c,
+			"Card_Tag_3_b": self._Card_Tag_3_b,
+			"Card_Tag_3_a": self._Card_Tag_3_a,
+			"Flex646": self._Flex646,
+			"Card_6": self._Card_6,
+			"Flex640": self._Flex640,
+			"Flex632": self._Flex632,
+			"Flex625": self._Flex625,
+			"Flex626": self._Flex626,
+			"Flex633": self._Flex633,
+			"Flex673": self._Flex673,
+			"Card_Tag_6_c": self._Card_Tag_6_c,
+			"Card_Tag_6_b": self._Card_Tag_6_b,
+			"Card_Tag_6_a": self._Card_Tag_6_a,
+			"Card_5": self._Card_5,
+			"Flex641": self._Flex641,
+			"Flex635": self._Flex635,
+			"Flex636": self._Flex636,
+			"Flex627": self._Flex627,
+			"Flex628": self._Flex628,
+			"Flex669": self._Flex669,
+			"Card_Tag_5_c": self._Card_Tag_5_c,
+			"Card_Tag_5_b": self._Card_Tag_5_b,
+			"Card_Tag_5_a": self._Card_Tag_5_a,
+			"Card_4": self._Card_4,
+			"Flex642": self._Flex642,
+			"Flex637": self._Flex637,
+			"Flex629": self._Flex629,
+			"Flex630": self._Flex630,
+			"Flex639": self._Flex639,
+			"Flex665": self._Flex665,
+			"Card_Tag_4_c": self._Card_Tag_4_c,
+			"Card_Tag_4_b": self._Card_Tag_4_b,
+			"Card_Tag_4_a": self._Card_Tag_4_a,
+			"Flex674": self._Flex674,
+			"Flex675": self._Flex675,
+			"Flex706": self._Flex706,
+			"Flex624": self._Flex624,
+			"Flex621": self._Flex621,
+			"Flex620": self._Flex620,
+			"Menu7": self._Menu7,
+			"Flex618": self._Flex618,
+			"Flex619": self._Flex619,
+			"Flex623": self._Flex623,
+			"Flex647": self._Flex647,
+			"Flex705": self._Flex705,
+			"Flex702": self._Flex702,
+			"Flex703": self._Flex703,
+			"Flex699": self._Flex699,
+			"Flex692": self._Flex692,
+			"Flex704": self._Flex704,
+			"Flex700": self._Flex700,
+			"Flex693": self._Flex693,
+			"Flex687": self._Flex687,
+			"Flex686": self._Flex686,
+			"Flex685": self._Flex685,
+			"Flex694": self._Flex694,
+			"Flex701": self._Flex701,
+			"Flex695": self._Flex695,
+			"Flex688": self._Flex688,
+			"Flex696": self._Flex696,
+			"Flex689": self._Flex689,
+			"Flex697": self._Flex697,
+			"Flex690": self._Flex690,
+			"Flex698": self._Flex698,
+			"Flex691": self._Flex691,
+			"TextBox361": self._TextBox361,
+			"TextBox362": self._TextBox362,
+			"Button116": self._Button116,
+			"Button235": self._Button235,
+			"TextBox499": self._TextBox499,
+			"Input19": self._Input19,
+			"Input20": self._Input20,
+			"TextBox500": self._TextBox500,
+			"TextBox501": self._TextBox501,
+			"Input21": self._Input21,
+			"Input22": self._Input22,
+			"TextBox502": self._TextBox502,
+			"TextBox503": self._TextBox503,
+			"Input23": self._Input23,
+			"TextBox504": self._TextBox504,
+			"Input24": self._Input24,
+			"TextBox505": self._TextBox505,
+			"Upload3": self._Upload3,
+			"TextBox506": self._TextBox506,
+			"Upload4": self._Upload4,
+			"TextBox507": self._TextBox507,
+			"Image319": self._Image319,
+			"Image318": self._Image318,
+			"TextBox497": self._TextBox497,
+			"TextBox498": self._TextBox498,
+			"Tag_1": self._Tag_1,
+			"Tag_2": self._Tag_2,
+			"Tag_3": self._Tag_3,
+			"Image315": self._Image315,
+			"Image316": self._Image316,
+			"Image317": self._Image317,
+			"TextBox496": self._TextBox496,
+			"TextBox363": self._TextBox363,
+			"TextBox364": self._TextBox364,
+			"Filter_Btn_1": self._Filter_Btn_1,
+			"Filter_Btn_2": self._Filter_Btn_2,
+			"Filter_Btn_3": self._Filter_Btn_3,
+			"Filter_Btn_4": self._Filter_Btn_4,
+			"Filter_Btn_5": self._Filter_Btn_5,
+			"Filter_Btn_6": self._Filter_Btn_6,
+			"Filter_Btn_7": self._Filter_Btn_7,
+			"Filter_Btn_8": self._Filter_Btn_8,
+			"Filter_Btn_9": self._Filter_Btn_9,
+			"Card_Image_1": self._Card_Image_1,
+			"Card_Title_1": self._Card_Title_1,
+			"Card_Text_1": self._Card_Text_1,
+			"Card_Tag_1_a_Text": self._Card_Tag_1_a_Text,
+			"Card_Tag_1_b_Text": self._Card_Tag_1_b_Text,
+			"Card_Tag_1_c_Text": self._Card_Tag_1_c_Text,
+			"Card_Github_1": self._Card_Github_1,
+			"Card_Deploy_1": self._Card_Deploy_1,
+			"Card_Creator_Image_1": self._Card_Creator_Image_1,
+			"Card_Creator_Name_1": self._Card_Creator_Name_1,
+			"Card_Image_2": self._Card_Image_2,
+			"Card_Creator_Name_2": self._Card_Creator_Name_2,
+			"Card_Creator_Image_2": self._Card_Creator_Image_2,
+			"Card_Deploy_2": self._Card_Deploy_2,
+			"Card_Github_2": self._Card_Github_2,
+			"Card_Text_2": self._Card_Text_2,
+			"Card_Title_2": self._Card_Title_2,
+			"Card_Tag_2_c_Text": self._Card_Tag_2_c_Text,
+			"Card_Tag_2_b_Text": self._Card_Tag_2_b_Text,
+			"Card_Tag_2_a_Text": self._Card_Tag_2_a_Text,
+			"Card_Image_3": self._Card_Image_3,
+			"Card_Title_3": self._Card_Title_3,
+			"Card_Text_3": self._Card_Text_3,
+			"Card_Github_3": self._Card_Github_3,
+			"Card_Deploy_3": self._Card_Deploy_3,
+			"Card_Creator_Image_3": self._Card_Creator_Image_3,
+			"Card_Creator_Name_3": self._Card_Creator_Name_3,
+			"Card_Tag_3_c_Text": self._Card_Tag_3_c_Text,
+			"Card_Tag_3_b_Text": self._Card_Tag_3_b_Text,
+			"Card_Tag_3_a_Text": self._Card_Tag_3_a_Text,
+			"Card_Image_6": self._Card_Image_6,
+			"Card_Creator_Name_6": self._Card_Creator_Name_6,
+			"Card_Creator_Image_6": self._Card_Creator_Image_6,
+			"Card_Deploy_6": self._Card_Deploy_6,
+			"Card_Github_6": self._Card_Github_6,
+			"Card_Text_6": self._Card_Text_6,
+			"Card_Title_6": self._Card_Title_6,
+			"Card_Tag_6_c_Text": self._Card_Tag_6_c_Text,
+			"Card_Tag_6_b_Text": self._Card_Tag_6_b_Text,
+			"Card_Tag_6_a_Text": self._Card_Tag_6_a_Text,
+			"Card_Image_5": self._Card_Image_5,
+			"Card_Title_5": self._Card_Title_5,
+			"Card_Text_5": self._Card_Text_5,
+			"Card_Github_5": self._Card_Github_5,
+			"Card_Deploy_5": self._Card_Deploy_5,
+			"Card_Creator_Image_5": self._Card_Creator_Image_5,
+			"Card_Creator_Name_5": self._Card_Creator_Name_5,
+			"Card_Tag_5_c_Text": self._Card_Tag_5_c_Text,
+			"Card_Tag_5_b_Text": self._Card_Tag_5_b_Text,
+			"Card_Tag_5_a_Text": self._Card_Tag_5_a_Text,
+			"Card_Image_4": self._Card_Image_4,
+			"Card_Creator_Name_4": self._Card_Creator_Name_4,
+			"Card_Creator_Image_4": self._Card_Creator_Image_4,
+			"Card_Deploy_4": self._Card_Deploy_4,
+			"Card_Github_4": self._Card_Github_4,
+			"Card_Text_4": self._Card_Text_4,
+			"Card_Title_4": self._Card_Title_4,
+			"Card_Tag_4_c_Text": self._Card_Tag_4_c_Text,
+			"Card_Tag_4_b_Text": self._Card_Tag_4_b_Text,
+			"Card_Tag_4_a_Text": self._Card_Tag_4_a_Text,
+			"Image303": self._Image303,
+			"Image304": self._Image304,
+			"TextBox474": self._TextBox474,
+			"TextBox453": self._TextBox453,
+			"Image278": self._Image278,
+			"TextBox430": self._TextBox430,
+			"TextBox431": self._TextBox431,
+			"Button200": self._Button200,
+			"TextBox438": self._TextBox438,
+			"Image279": self._Image279,
+			"TextBox448": self._TextBox448,
+			"TextBox449": self._TextBox449,
+			"TextBox450": self._TextBox450,
+			"TextBox451": self._TextBox451,
+			"Image300": self._Image300,
+			"TextBox472": self._TextBox472,
+			"TextBox466": self._TextBox466,
+			"TextBox467": self._TextBox467,
+			"TextBox456": self._TextBox456,
+			"Image295": self._Image295,
+			"TextBox455": self._TextBox455,
+			"Image294": self._Image294,
+			"Image296": self._Image296,
+			"Image297": self._Image297,
+			"Image298": self._Image298,
+			"Image299": self._Image299,
+			"TextBox468": self._TextBox468,
+			"TextBox457": self._TextBox457,
+			"TextBox469": self._TextBox469,
+			"TextBox458": self._TextBox458,
+			"TextBox459": self._TextBox459,
+			"TextBox460": self._TextBox460,
+			"TextBox470": self._TextBox470,
+			"TextBox461": self._TextBox461,
+			"TextBox462": self._TextBox462,
+			"TextBox463": self._TextBox463,
+			"TextBox471": self._TextBox471,
+			"TextBox464": self._TextBox464,
+			"TextBox465": self._TextBox465,
+			}
+
+
+class FlexstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class Flex:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: FlexstylesClass = get_defined_value(state, def_state, "styles")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = FlexstylesClass(state, self._def_state["styles"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			}
+
+
+class OverlaystylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class OverlaycustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.closeModalAfter: int = get_defined_value(state, def_state, "closeModalAfter")
+		self.open: bool = get_defined_value(state, def_state, "open")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def closeModalAfter(self):
+		self._getter_access_tracker["closeModalAfter"] = {}
+		return self._closeModalAfter
+	@closeModalAfter.setter
+	def closeModalAfter(self, state):
+		self._setter_access_tracker["closeModalAfter"] = {}
+		self._closeModalAfter = state
+	@property
+	def open(self):
+		self._getter_access_tracker["open"] = {}
+		return self._open
+	@open.setter
+	def open(self, state):
+		self._setter_access_tracker["open"] = {}
+		self._open = state
+	def _to_json_fields(self):
+		return {
+			"closeModalAfter": self._closeModalAfter,
+			"open": self._open,
+			}
+
+
+class Overlay:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.styles: OverlaystylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: OverlaycustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = OverlaystylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = OverlaycustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class MenustylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class MenucustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.open: bool = get_defined_value(state, def_state, "open")
+		self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
+		self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
+		self.src: str = get_defined_value(state, def_state, "src")
+		self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
+		self.gap: int = get_defined_value(state, def_state, "gap")
+		self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def open(self):
+		self._getter_access_tracker["open"] = {}
+		return self._open
+	@open.setter
+	def open(self, state):
+		self._setter_access_tracker["open"] = {}
+		self._open = state
+	@property
+	def iconHeight(self):
+		self._getter_access_tracker["iconHeight"] = {}
+		return self._iconHeight
+	@iconHeight.setter
+	def iconHeight(self, state):
+		self._setter_access_tracker["iconHeight"] = {}
+		self._iconHeight = state
+	@property
+	def iconWidth(self):
+		self._getter_access_tracker["iconWidth"] = {}
+		return self._iconWidth
+	@iconWidth.setter
+	def iconWidth(self, state):
+		self._setter_access_tracker["iconWidth"] = {}
+		self._iconWidth = state
+	@property
+	def src(self):
+		self._getter_access_tracker["src"] = {}
+		return self._src
+	@src.setter
+	def src(self, state):
+		self._setter_access_tracker["src"] = {}
+		self._src = state
+	@property
+	def strokeColor(self):
+		self._getter_access_tracker["strokeColor"] = {}
+		return self._strokeColor
+	@strokeColor.setter
+	def strokeColor(self, state):
+		self._setter_access_tracker["strokeColor"] = {}
+		self._strokeColor = state
+	@property
+	def gap(self):
+		self._getter_access_tracker["gap"] = {}
+		return self._gap
+	@gap.setter
+	def gap(self, state):
+		self._setter_access_tracker["gap"] = {}
+		self._gap = state
+	@property
+	def alignRight(self):
+		self._getter_access_tracker["alignRight"] = {}
+		return self._alignRight
+	@alignRight.setter
+	def alignRight(self, state):
+		self._setter_access_tracker["alignRight"] = {}
+		self._alignRight = state
+	def _to_json_fields(self):
+		return {
+			"open": self._open,
+			"iconHeight": self._iconHeight,
+			"iconWidth": self._iconWidth,
+			"src": self._src,
+			"strokeColor": self._strokeColor,
+			"gap": self._gap,
+			"alignRight": self._alignRight,
+			}
+
+
+class Menu:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: MenustylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: MenucustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = MenustylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = MenucustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class TextBoxstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class TextBoxcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.text: str = get_defined_value(state, def_state, "text")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	def _to_json_fields(self):
+		return {
+			"text": self._text,
+			}
+
+
+class TextBox:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: TextBoxstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: TextBoxcustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = TextBoxstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = TextBoxcustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class ButtonstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class ButtoncustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.text: str = get_defined_value(state, def_state, "text")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	def _to_json_fields(self):
+		return {
+			"text": self._text,
+			}
+
+
+class Button:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: ButtonstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: ButtoncustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = ButtonstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = ButtoncustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class InputstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class InputcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.value: str = get_defined_value(state, def_state, "value")
+		self.placeholder: str = get_defined_value(state, def_state, "placeholder")
+		self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def value(self):
+		self._getter_access_tracker["value"] = {}
+		return self._value
+	@value.setter
+	def value(self, state):
+		self._setter_access_tracker["value"] = {}
+		self._value = state
+	@property
+	def placeholder(self):
+		self._getter_access_tracker["placeholder"] = {}
+		return self._placeholder
+	@placeholder.setter
+	def placeholder(self, state):
+		self._setter_access_tracker["placeholder"] = {}
+		self._placeholder = state
+	@property
+	def isPasswordField(self):
+		self._getter_access_tracker["isPasswordField"] = {}
+		return self._isPasswordField
+	@isPasswordField.setter
+	def isPasswordField(self, state):
+		self._setter_access_tracker["isPasswordField"] = {}
+		self._isPasswordField = state
+	def _to_json_fields(self):
+		return {
+			"value": self._value,
+			"placeholder": self._placeholder,
+			"isPasswordField": self._isPasswordField,
+			}
+
+
+class Input:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onChange = False
+		self.onPressEnter = False
+		self.styles: InputstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: InputcustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = InputstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = InputcustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class UploadstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class UploadcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.multiple: bool = get_defined_value(state, def_state, "multiple")
+		self.showFilename: bool = get_defined_value(state, def_state, "showFilename")
+		self.text: str = get_defined_value(state, def_state, "text")
+		self.disabled: bool = get_defined_value(state, def_state, "disabled")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def multiple(self):
+		self._getter_access_tracker["multiple"] = {}
+		return self._multiple
+	@multiple.setter
+	def multiple(self, state):
+		self._setter_access_tracker["multiple"] = {}
+		self._multiple = state
+	@property
+	def showFilename(self):
+		self._getter_access_tracker["showFilename"] = {}
+		return self._showFilename
+	@showFilename.setter
+	def showFilename(self, state):
+		self._setter_access_tracker["showFilename"] = {}
+		self._showFilename = state
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	@property
+	def disabled(self):
+		self._getter_access_tracker["disabled"] = {}
+		return self._disabled
+	@disabled.setter
+	def disabled(self, state):
+		self._setter_access_tracker["disabled"] = {}
+		self._disabled = state
+	def _to_json_fields(self):
+		return {
+			"multiple": self._multiple,
+			"showFilename": self._showFilename,
+			"text": self._text,
+			"disabled": self._disabled,
+			}
+
+
+class UploadioClass:
+	def __init__(self):
+
+		self.files: Optional[List[UploadFile]] = None
+
+
+
+
+class Upload:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onChange = False
+		self.onClick = False
+		self.styles: UploadstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: UploadcustomClass = get_defined_value(state, def_state, "custom")
+		self.io: UploadioClass = UploadioClass()
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = UploadstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = UploadcustomClass(state, self._def_state["custom"])
+
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+
+			}
+
+
+class ImagestylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class ImagecustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alt: str = get_defined_value(state, def_state, "alt")
+		self.src: str = get_defined_value(state, def_state, "src")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alt(self):
+		self._getter_access_tracker["alt"] = {}
+		return self._alt
+	@alt.setter
+	def alt(self, state):
+		self._setter_access_tracker["alt"] = {}
+		self._alt = state
+	@property
+	def src(self):
+		self._getter_access_tracker["src"] = {}
+		return self._src
+	@src.setter
+	def src(self, state):
+		self._setter_access_tracker["src"] = {}
+		self._src = state
+	def _to_json_fields(self):
+		return {
+			"alt": self._alt,
+			"src": self._src,
+			}
+
+
+class Image:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: ImagestylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: ImagecustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = ImagestylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = ImagecustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
diff --git a/controllers/routes/atri.py b/controllers/routes/atri.py
new file mode 100644
index 0000000..484f324
--- /dev/null
+++ b/controllers/routes/atri.py
@@ -0,0 +1,5217 @@
+import json
+from typing import List, Any, Optional
+from fastapi import UploadFile
+default_state = json.loads('{"Flex1":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex14":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex5":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex10":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex154":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex12":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex9":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Menu1":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Flex6":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex16":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex15":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex243":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex160":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex77":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex62":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex60":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex51":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex47":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex52":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex48":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex53":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex49":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex54":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex50":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex250":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex251":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex252":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex259":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex258":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex256":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex86":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex85":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex84":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex241":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex195":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex193":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex183":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex242":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex229":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex227":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex228":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex232":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex230":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex231":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex271":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex269":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex270":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex223":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex219":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex207":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex198":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex199":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex208":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex226":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex224":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex225":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Image2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox10":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox11":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox155":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox156":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image37":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Button2":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"TextBox5":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox6":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox7":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox8":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox14":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox160":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image66":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image38":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox63":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox54":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox55":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox64":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox56":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox57":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox58":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox65":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox59":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox60":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox61":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox66":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox62":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image76":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image77":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image78":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image79":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox230":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image85":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image84":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox229":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox95":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox93":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox94":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image63":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox185":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox186":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image60":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox213":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox214":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox215":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox216":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox217":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox218":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image59":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image96":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox237":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox238":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox239":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input4":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Button16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"TextBox192":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox201":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox202":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox209":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox210":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image56":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}}}')
+def get_defined_value(state, def_state, key):
+	return state[key] if key in state else def_state[key]
+class Atri:
+	def __init__(self, state: Any):
+		self.event_data = None
+		self.event_alias = None
+		global default_state
+		self._setter_access_tracker = {}
+		self.Flex1 = state["Flex1"]
+		self.Flex14 = state["Flex14"]
+		self.Flex5 = state["Flex5"]
+		self.Flex10 = state["Flex10"]
+		self.Flex154 = state["Flex154"]
+		self.Flex12 = state["Flex12"]
+		self.Flex9 = state["Flex9"]
+		self.Menu1 = state["Menu1"]
+		self.Flex6 = state["Flex6"]
+		self.Flex16 = state["Flex16"]
+		self.Flex15 = state["Flex15"]
+		self.Flex243 = state["Flex243"]
+		self.Flex160 = state["Flex160"]
+		self.Flex77 = state["Flex77"]
+		self.Flex62 = state["Flex62"]
+		self.Flex60 = state["Flex60"]
+		self.Flex51 = state["Flex51"]
+		self.Flex47 = state["Flex47"]
+		self.Flex52 = state["Flex52"]
+		self.Flex48 = state["Flex48"]
+		self.Flex53 = state["Flex53"]
+		self.Flex49 = state["Flex49"]
+		self.Flex54 = state["Flex54"]
+		self.Flex50 = state["Flex50"]
+		self.Flex250 = state["Flex250"]
+		self.Flex251 = state["Flex251"]
+		self.Flex252 = state["Flex252"]
+		self.Flex259 = state["Flex259"]
+		self.Flex258 = state["Flex258"]
+		self.Flex256 = state["Flex256"]
+		self.Flex86 = state["Flex86"]
+		self.Flex85 = state["Flex85"]
+		self.Flex84 = state["Flex84"]
+		self.Flex241 = state["Flex241"]
+		self.Flex195 = state["Flex195"]
+		self.Flex193 = state["Flex193"]
+		self.Flex183 = state["Flex183"]
+		self.Flex242 = state["Flex242"]
+		self.Flex229 = state["Flex229"]
+		self.Flex227 = state["Flex227"]
+		self.Flex228 = state["Flex228"]
+		self.Flex232 = state["Flex232"]
+		self.Flex230 = state["Flex230"]
+		self.Flex231 = state["Flex231"]
+		self.Flex271 = state["Flex271"]
+		self.Flex269 = state["Flex269"]
+		self.Flex270 = state["Flex270"]
+		self.Flex223 = state["Flex223"]
+		self.Flex219 = state["Flex219"]
+		self.Flex207 = state["Flex207"]
+		self.Flex198 = state["Flex198"]
+		self.Flex199 = state["Flex199"]
+		self.Flex208 = state["Flex208"]
+		self.Flex226 = state["Flex226"]
+		self.Flex224 = state["Flex224"]
+		self.Flex225 = state["Flex225"]
+		self.Image2 = state["Image2"]
+		self.TextBox2 = state["TextBox2"]
+		self.TextBox10 = state["TextBox10"]
+		self.TextBox11 = state["TextBox11"]
+		self.TextBox155 = state["TextBox155"]
+		self.TextBox156 = state["TextBox156"]
+		self.Image37 = state["Image37"]
+		self.Button2 = state["Button2"]
+		self.TextBox5 = state["TextBox5"]
+		self.TextBox6 = state["TextBox6"]
+		self.TextBox7 = state["TextBox7"]
+		self.TextBox8 = state["TextBox8"]
+		self.TextBox14 = state["TextBox14"]
+		self.TextBox16 = state["TextBox16"]
+		self.TextBox160 = state["TextBox160"]
+		self.Image66 = state["Image66"]
+		self.Image38 = state["Image38"]
+		self.TextBox63 = state["TextBox63"]
+		self.TextBox54 = state["TextBox54"]
+		self.TextBox55 = state["TextBox55"]
+		self.TextBox64 = state["TextBox64"]
+		self.TextBox56 = state["TextBox56"]
+		self.TextBox57 = state["TextBox57"]
+		self.TextBox58 = state["TextBox58"]
+		self.TextBox65 = state["TextBox65"]
+		self.TextBox59 = state["TextBox59"]
+		self.TextBox60 = state["TextBox60"]
+		self.TextBox61 = state["TextBox61"]
+		self.TextBox66 = state["TextBox66"]
+		self.TextBox62 = state["TextBox62"]
+		self.Image76 = state["Image76"]
+		self.Image77 = state["Image77"]
+		self.Image78 = state["Image78"]
+		self.Image79 = state["Image79"]
+		self.TextBox230 = state["TextBox230"]
+		self.Image85 = state["Image85"]
+		self.Image84 = state["Image84"]
+		self.TextBox229 = state["TextBox229"]
+		self.TextBox95 = state["TextBox95"]
+		self.TextBox93 = state["TextBox93"]
+		self.TextBox94 = state["TextBox94"]
+		self.Image63 = state["Image63"]
+		self.TextBox185 = state["TextBox185"]
+		self.TextBox186 = state["TextBox186"]
+		self.Image60 = state["Image60"]
+		self.TextBox213 = state["TextBox213"]
+		self.TextBox214 = state["TextBox214"]
+		self.TextBox215 = state["TextBox215"]
+		self.TextBox216 = state["TextBox216"]
+		self.TextBox217 = state["TextBox217"]
+		self.TextBox218 = state["TextBox218"]
+		self.Image59 = state["Image59"]
+		self.Image96 = state["Image96"]
+		self.TextBox237 = state["TextBox237"]
+		self.TextBox238 = state["TextBox238"]
+		self.TextBox239 = state["TextBox239"]
+		self.Input4 = state["Input4"]
+		self.Button16 = state["Button16"]
+		self.TextBox192 = state["TextBox192"]
+		self.TextBox201 = state["TextBox201"]
+		self.TextBox202 = state["TextBox202"]
+		self.TextBox209 = state["TextBox209"]
+		self.TextBox210 = state["TextBox210"]
+		self.Image56 = state["Image56"]
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	def set_event(self, event):
+		self.event_data = event["event_data"]
+		self.event_alias = event["alias"]
+		callback_name = event["callback_name"]
+		comp = getattr(self, self.event_alias)
+		setattr(comp, callback_name, True)
+	@property
+	def Flex1(self):
+		self._getter_access_tracker["Flex1"] = {}
+		return self._Flex1
+	@Flex1.setter
+	def Flex1(self, new_state):
+		self._setter_access_tracker["Flex1"] = {}
+		global default_state
+		self._Flex1 = Flex(new_state, default_state["Flex1"])
+
+	@property
+	def Flex14(self):
+		self._getter_access_tracker["Flex14"] = {}
+		return self._Flex14
+	@Flex14.setter
+	def Flex14(self, new_state):
+		self._setter_access_tracker["Flex14"] = {}
+		global default_state
+		self._Flex14 = Flex(new_state, default_state["Flex14"])
+
+	@property
+	def Flex5(self):
+		self._getter_access_tracker["Flex5"] = {}
+		return self._Flex5
+	@Flex5.setter
+	def Flex5(self, new_state):
+		self._setter_access_tracker["Flex5"] = {}
+		global default_state
+		self._Flex5 = Flex(new_state, default_state["Flex5"])
+
+	@property
+	def Flex10(self):
+		self._getter_access_tracker["Flex10"] = {}
+		return self._Flex10
+	@Flex10.setter
+	def Flex10(self, new_state):
+		self._setter_access_tracker["Flex10"] = {}
+		global default_state
+		self._Flex10 = Flex(new_state, default_state["Flex10"])
+
+	@property
+	def Flex154(self):
+		self._getter_access_tracker["Flex154"] = {}
+		return self._Flex154
+	@Flex154.setter
+	def Flex154(self, new_state):
+		self._setter_access_tracker["Flex154"] = {}
+		global default_state
+		self._Flex154 = Flex(new_state, default_state["Flex154"])
+
+	@property
+	def Flex12(self):
+		self._getter_access_tracker["Flex12"] = {}
+		return self._Flex12
+	@Flex12.setter
+	def Flex12(self, new_state):
+		self._setter_access_tracker["Flex12"] = {}
+		global default_state
+		self._Flex12 = Flex(new_state, default_state["Flex12"])
+
+	@property
+	def Flex9(self):
+		self._getter_access_tracker["Flex9"] = {}
+		return self._Flex9
+	@Flex9.setter
+	def Flex9(self, new_state):
+		self._setter_access_tracker["Flex9"] = {}
+		global default_state
+		self._Flex9 = Flex(new_state, default_state["Flex9"])
+
+	@property
+	def Menu1(self):
+		self._getter_access_tracker["Menu1"] = {}
+		return self._Menu1
+	@Menu1.setter
+	def Menu1(self, new_state):
+		self._setter_access_tracker["Menu1"] = {}
+		global default_state
+		self._Menu1 = Menu(new_state, default_state["Menu1"])
+
+	@property
+	def Flex6(self):
+		self._getter_access_tracker["Flex6"] = {}
+		return self._Flex6
+	@Flex6.setter
+	def Flex6(self, new_state):
+		self._setter_access_tracker["Flex6"] = {}
+		global default_state
+		self._Flex6 = Flex(new_state, default_state["Flex6"])
+
+	@property
+	def Flex16(self):
+		self._getter_access_tracker["Flex16"] = {}
+		return self._Flex16
+	@Flex16.setter
+	def Flex16(self, new_state):
+		self._setter_access_tracker["Flex16"] = {}
+		global default_state
+		self._Flex16 = Flex(new_state, default_state["Flex16"])
+
+	@property
+	def Flex15(self):
+		self._getter_access_tracker["Flex15"] = {}
+		return self._Flex15
+	@Flex15.setter
+	def Flex15(self, new_state):
+		self._setter_access_tracker["Flex15"] = {}
+		global default_state
+		self._Flex15 = Flex(new_state, default_state["Flex15"])
+
+	@property
+	def Flex243(self):
+		self._getter_access_tracker["Flex243"] = {}
+		return self._Flex243
+	@Flex243.setter
+	def Flex243(self, new_state):
+		self._setter_access_tracker["Flex243"] = {}
+		global default_state
+		self._Flex243 = Flex(new_state, default_state["Flex243"])
+
+	@property
+	def Flex160(self):
+		self._getter_access_tracker["Flex160"] = {}
+		return self._Flex160
+	@Flex160.setter
+	def Flex160(self, new_state):
+		self._setter_access_tracker["Flex160"] = {}
+		global default_state
+		self._Flex160 = Flex(new_state, default_state["Flex160"])
+
+	@property
+	def Flex77(self):
+		self._getter_access_tracker["Flex77"] = {}
+		return self._Flex77
+	@Flex77.setter
+	def Flex77(self, new_state):
+		self._setter_access_tracker["Flex77"] = {}
+		global default_state
+		self._Flex77 = Flex(new_state, default_state["Flex77"])
+
+	@property
+	def Flex62(self):
+		self._getter_access_tracker["Flex62"] = {}
+		return self._Flex62
+	@Flex62.setter
+	def Flex62(self, new_state):
+		self._setter_access_tracker["Flex62"] = {}
+		global default_state
+		self._Flex62 = Flex(new_state, default_state["Flex62"])
+
+	@property
+	def Flex60(self):
+		self._getter_access_tracker["Flex60"] = {}
+		return self._Flex60
+	@Flex60.setter
+	def Flex60(self, new_state):
+		self._setter_access_tracker["Flex60"] = {}
+		global default_state
+		self._Flex60 = Flex(new_state, default_state["Flex60"])
+
+	@property
+	def Flex51(self):
+		self._getter_access_tracker["Flex51"] = {}
+		return self._Flex51
+	@Flex51.setter
+	def Flex51(self, new_state):
+		self._setter_access_tracker["Flex51"] = {}
+		global default_state
+		self._Flex51 = Flex(new_state, default_state["Flex51"])
+
+	@property
+	def Flex47(self):
+		self._getter_access_tracker["Flex47"] = {}
+		return self._Flex47
+	@Flex47.setter
+	def Flex47(self, new_state):
+		self._setter_access_tracker["Flex47"] = {}
+		global default_state
+		self._Flex47 = Flex(new_state, default_state["Flex47"])
+
+	@property
+	def Flex52(self):
+		self._getter_access_tracker["Flex52"] = {}
+		return self._Flex52
+	@Flex52.setter
+	def Flex52(self, new_state):
+		self._setter_access_tracker["Flex52"] = {}
+		global default_state
+		self._Flex52 = Flex(new_state, default_state["Flex52"])
+
+	@property
+	def Flex48(self):
+		self._getter_access_tracker["Flex48"] = {}
+		return self._Flex48
+	@Flex48.setter
+	def Flex48(self, new_state):
+		self._setter_access_tracker["Flex48"] = {}
+		global default_state
+		self._Flex48 = Flex(new_state, default_state["Flex48"])
+
+	@property
+	def Flex53(self):
+		self._getter_access_tracker["Flex53"] = {}
+		return self._Flex53
+	@Flex53.setter
+	def Flex53(self, new_state):
+		self._setter_access_tracker["Flex53"] = {}
+		global default_state
+		self._Flex53 = Flex(new_state, default_state["Flex53"])
+
+	@property
+	def Flex49(self):
+		self._getter_access_tracker["Flex49"] = {}
+		return self._Flex49
+	@Flex49.setter
+	def Flex49(self, new_state):
+		self._setter_access_tracker["Flex49"] = {}
+		global default_state
+		self._Flex49 = Flex(new_state, default_state["Flex49"])
+
+	@property
+	def Flex54(self):
+		self._getter_access_tracker["Flex54"] = {}
+		return self._Flex54
+	@Flex54.setter
+	def Flex54(self, new_state):
+		self._setter_access_tracker["Flex54"] = {}
+		global default_state
+		self._Flex54 = Flex(new_state, default_state["Flex54"])
+
+	@property
+	def Flex50(self):
+		self._getter_access_tracker["Flex50"] = {}
+		return self._Flex50
+	@Flex50.setter
+	def Flex50(self, new_state):
+		self._setter_access_tracker["Flex50"] = {}
+		global default_state
+		self._Flex50 = Flex(new_state, default_state["Flex50"])
+
+	@property
+	def Flex250(self):
+		self._getter_access_tracker["Flex250"] = {}
+		return self._Flex250
+	@Flex250.setter
+	def Flex250(self, new_state):
+		self._setter_access_tracker["Flex250"] = {}
+		global default_state
+		self._Flex250 = Flex(new_state, default_state["Flex250"])
+
+	@property
+	def Flex251(self):
+		self._getter_access_tracker["Flex251"] = {}
+		return self._Flex251
+	@Flex251.setter
+	def Flex251(self, new_state):
+		self._setter_access_tracker["Flex251"] = {}
+		global default_state
+		self._Flex251 = Flex(new_state, default_state["Flex251"])
+
+	@property
+	def Flex252(self):
+		self._getter_access_tracker["Flex252"] = {}
+		return self._Flex252
+	@Flex252.setter
+	def Flex252(self, new_state):
+		self._setter_access_tracker["Flex252"] = {}
+		global default_state
+		self._Flex252 = Flex(new_state, default_state["Flex252"])
+
+	@property
+	def Flex259(self):
+		self._getter_access_tracker["Flex259"] = {}
+		return self._Flex259
+	@Flex259.setter
+	def Flex259(self, new_state):
+		self._setter_access_tracker["Flex259"] = {}
+		global default_state
+		self._Flex259 = Flex(new_state, default_state["Flex259"])
+
+	@property
+	def Flex258(self):
+		self._getter_access_tracker["Flex258"] = {}
+		return self._Flex258
+	@Flex258.setter
+	def Flex258(self, new_state):
+		self._setter_access_tracker["Flex258"] = {}
+		global default_state
+		self._Flex258 = Flex(new_state, default_state["Flex258"])
+
+	@property
+	def Flex256(self):
+		self._getter_access_tracker["Flex256"] = {}
+		return self._Flex256
+	@Flex256.setter
+	def Flex256(self, new_state):
+		self._setter_access_tracker["Flex256"] = {}
+		global default_state
+		self._Flex256 = Flex(new_state, default_state["Flex256"])
+
+	@property
+	def Flex86(self):
+		self._getter_access_tracker["Flex86"] = {}
+		return self._Flex86
+	@Flex86.setter
+	def Flex86(self, new_state):
+		self._setter_access_tracker["Flex86"] = {}
+		global default_state
+		self._Flex86 = Flex(new_state, default_state["Flex86"])
+
+	@property
+	def Flex85(self):
+		self._getter_access_tracker["Flex85"] = {}
+		return self._Flex85
+	@Flex85.setter
+	def Flex85(self, new_state):
+		self._setter_access_tracker["Flex85"] = {}
+		global default_state
+		self._Flex85 = Flex(new_state, default_state["Flex85"])
+
+	@property
+	def Flex84(self):
+		self._getter_access_tracker["Flex84"] = {}
+		return self._Flex84
+	@Flex84.setter
+	def Flex84(self, new_state):
+		self._setter_access_tracker["Flex84"] = {}
+		global default_state
+		self._Flex84 = Flex(new_state, default_state["Flex84"])
+
+	@property
+	def Flex241(self):
+		self._getter_access_tracker["Flex241"] = {}
+		return self._Flex241
+	@Flex241.setter
+	def Flex241(self, new_state):
+		self._setter_access_tracker["Flex241"] = {}
+		global default_state
+		self._Flex241 = Flex(new_state, default_state["Flex241"])
+
+	@property
+	def Flex195(self):
+		self._getter_access_tracker["Flex195"] = {}
+		return self._Flex195
+	@Flex195.setter
+	def Flex195(self, new_state):
+		self._setter_access_tracker["Flex195"] = {}
+		global default_state
+		self._Flex195 = Flex(new_state, default_state["Flex195"])
+
+	@property
+	def Flex193(self):
+		self._getter_access_tracker["Flex193"] = {}
+		return self._Flex193
+	@Flex193.setter
+	def Flex193(self, new_state):
+		self._setter_access_tracker["Flex193"] = {}
+		global default_state
+		self._Flex193 = Flex(new_state, default_state["Flex193"])
+
+	@property
+	def Flex183(self):
+		self._getter_access_tracker["Flex183"] = {}
+		return self._Flex183
+	@Flex183.setter
+	def Flex183(self, new_state):
+		self._setter_access_tracker["Flex183"] = {}
+		global default_state
+		self._Flex183 = Flex(new_state, default_state["Flex183"])
+
+	@property
+	def Flex242(self):
+		self._getter_access_tracker["Flex242"] = {}
+		return self._Flex242
+	@Flex242.setter
+	def Flex242(self, new_state):
+		self._setter_access_tracker["Flex242"] = {}
+		global default_state
+		self._Flex242 = Flex(new_state, default_state["Flex242"])
+
+	@property
+	def Flex229(self):
+		self._getter_access_tracker["Flex229"] = {}
+		return self._Flex229
+	@Flex229.setter
+	def Flex229(self, new_state):
+		self._setter_access_tracker["Flex229"] = {}
+		global default_state
+		self._Flex229 = Flex(new_state, default_state["Flex229"])
+
+	@property
+	def Flex227(self):
+		self._getter_access_tracker["Flex227"] = {}
+		return self._Flex227
+	@Flex227.setter
+	def Flex227(self, new_state):
+		self._setter_access_tracker["Flex227"] = {}
+		global default_state
+		self._Flex227 = Flex(new_state, default_state["Flex227"])
+
+	@property
+	def Flex228(self):
+		self._getter_access_tracker["Flex228"] = {}
+		return self._Flex228
+	@Flex228.setter
+	def Flex228(self, new_state):
+		self._setter_access_tracker["Flex228"] = {}
+		global default_state
+		self._Flex228 = Flex(new_state, default_state["Flex228"])
+
+	@property
+	def Flex232(self):
+		self._getter_access_tracker["Flex232"] = {}
+		return self._Flex232
+	@Flex232.setter
+	def Flex232(self, new_state):
+		self._setter_access_tracker["Flex232"] = {}
+		global default_state
+		self._Flex232 = Flex(new_state, default_state["Flex232"])
+
+	@property
+	def Flex230(self):
+		self._getter_access_tracker["Flex230"] = {}
+		return self._Flex230
+	@Flex230.setter
+	def Flex230(self, new_state):
+		self._setter_access_tracker["Flex230"] = {}
+		global default_state
+		self._Flex230 = Flex(new_state, default_state["Flex230"])
+
+	@property
+	def Flex231(self):
+		self._getter_access_tracker["Flex231"] = {}
+		return self._Flex231
+	@Flex231.setter
+	def Flex231(self, new_state):
+		self._setter_access_tracker["Flex231"] = {}
+		global default_state
+		self._Flex231 = Flex(new_state, default_state["Flex231"])
+
+	@property
+	def Flex271(self):
+		self._getter_access_tracker["Flex271"] = {}
+		return self._Flex271
+	@Flex271.setter
+	def Flex271(self, new_state):
+		self._setter_access_tracker["Flex271"] = {}
+		global default_state
+		self._Flex271 = Flex(new_state, default_state["Flex271"])
+
+	@property
+	def Flex269(self):
+		self._getter_access_tracker["Flex269"] = {}
+		return self._Flex269
+	@Flex269.setter
+	def Flex269(self, new_state):
+		self._setter_access_tracker["Flex269"] = {}
+		global default_state
+		self._Flex269 = Flex(new_state, default_state["Flex269"])
+
+	@property
+	def Flex270(self):
+		self._getter_access_tracker["Flex270"] = {}
+		return self._Flex270
+	@Flex270.setter
+	def Flex270(self, new_state):
+		self._setter_access_tracker["Flex270"] = {}
+		global default_state
+		self._Flex270 = Flex(new_state, default_state["Flex270"])
+
+	@property
+	def Flex223(self):
+		self._getter_access_tracker["Flex223"] = {}
+		return self._Flex223
+	@Flex223.setter
+	def Flex223(self, new_state):
+		self._setter_access_tracker["Flex223"] = {}
+		global default_state
+		self._Flex223 = Flex(new_state, default_state["Flex223"])
+
+	@property
+	def Flex219(self):
+		self._getter_access_tracker["Flex219"] = {}
+		return self._Flex219
+	@Flex219.setter
+	def Flex219(self, new_state):
+		self._setter_access_tracker["Flex219"] = {}
+		global default_state
+		self._Flex219 = Flex(new_state, default_state["Flex219"])
+
+	@property
+	def Flex207(self):
+		self._getter_access_tracker["Flex207"] = {}
+		return self._Flex207
+	@Flex207.setter
+	def Flex207(self, new_state):
+		self._setter_access_tracker["Flex207"] = {}
+		global default_state
+		self._Flex207 = Flex(new_state, default_state["Flex207"])
+
+	@property
+	def Flex198(self):
+		self._getter_access_tracker["Flex198"] = {}
+		return self._Flex198
+	@Flex198.setter
+	def Flex198(self, new_state):
+		self._setter_access_tracker["Flex198"] = {}
+		global default_state
+		self._Flex198 = Flex(new_state, default_state["Flex198"])
+
+	@property
+	def Flex199(self):
+		self._getter_access_tracker["Flex199"] = {}
+		return self._Flex199
+	@Flex199.setter
+	def Flex199(self, new_state):
+		self._setter_access_tracker["Flex199"] = {}
+		global default_state
+		self._Flex199 = Flex(new_state, default_state["Flex199"])
+
+	@property
+	def Flex208(self):
+		self._getter_access_tracker["Flex208"] = {}
+		return self._Flex208
+	@Flex208.setter
+	def Flex208(self, new_state):
+		self._setter_access_tracker["Flex208"] = {}
+		global default_state
+		self._Flex208 = Flex(new_state, default_state["Flex208"])
+
+	@property
+	def Flex226(self):
+		self._getter_access_tracker["Flex226"] = {}
+		return self._Flex226
+	@Flex226.setter
+	def Flex226(self, new_state):
+		self._setter_access_tracker["Flex226"] = {}
+		global default_state
+		self._Flex226 = Flex(new_state, default_state["Flex226"])
+
+	@property
+	def Flex224(self):
+		self._getter_access_tracker["Flex224"] = {}
+		return self._Flex224
+	@Flex224.setter
+	def Flex224(self, new_state):
+		self._setter_access_tracker["Flex224"] = {}
+		global default_state
+		self._Flex224 = Flex(new_state, default_state["Flex224"])
+
+	@property
+	def Flex225(self):
+		self._getter_access_tracker["Flex225"] = {}
+		return self._Flex225
+	@Flex225.setter
+	def Flex225(self, new_state):
+		self._setter_access_tracker["Flex225"] = {}
+		global default_state
+		self._Flex225 = Flex(new_state, default_state["Flex225"])
+
+	@property
+	def Image2(self):
+		self._getter_access_tracker["Image2"] = {}
+		return self._Image2
+	@Image2.setter
+	def Image2(self, new_state):
+		self._setter_access_tracker["Image2"] = {}
+		global default_state
+		self._Image2 = Image(new_state, default_state["Image2"])
+
+	@property
+	def TextBox2(self):
+		self._getter_access_tracker["TextBox2"] = {}
+		return self._TextBox2
+	@TextBox2.setter
+	def TextBox2(self, new_state):
+		self._setter_access_tracker["TextBox2"] = {}
+		global default_state
+		self._TextBox2 = TextBox(new_state, default_state["TextBox2"])
+
+	@property
+	def TextBox10(self):
+		self._getter_access_tracker["TextBox10"] = {}
+		return self._TextBox10
+	@TextBox10.setter
+	def TextBox10(self, new_state):
+		self._setter_access_tracker["TextBox10"] = {}
+		global default_state
+		self._TextBox10 = TextBox(new_state, default_state["TextBox10"])
+
+	@property
+	def TextBox11(self):
+		self._getter_access_tracker["TextBox11"] = {}
+		return self._TextBox11
+	@TextBox11.setter
+	def TextBox11(self, new_state):
+		self._setter_access_tracker["TextBox11"] = {}
+		global default_state
+		self._TextBox11 = TextBox(new_state, default_state["TextBox11"])
+
+	@property
+	def TextBox155(self):
+		self._getter_access_tracker["TextBox155"] = {}
+		return self._TextBox155
+	@TextBox155.setter
+	def TextBox155(self, new_state):
+		self._setter_access_tracker["TextBox155"] = {}
+		global default_state
+		self._TextBox155 = TextBox(new_state, default_state["TextBox155"])
+
+	@property
+	def TextBox156(self):
+		self._getter_access_tracker["TextBox156"] = {}
+		return self._TextBox156
+	@TextBox156.setter
+	def TextBox156(self, new_state):
+		self._setter_access_tracker["TextBox156"] = {}
+		global default_state
+		self._TextBox156 = TextBox(new_state, default_state["TextBox156"])
+
+	@property
+	def Image37(self):
+		self._getter_access_tracker["Image37"] = {}
+		return self._Image37
+	@Image37.setter
+	def Image37(self, new_state):
+		self._setter_access_tracker["Image37"] = {}
+		global default_state
+		self._Image37 = Image(new_state, default_state["Image37"])
+
+	@property
+	def Button2(self):
+		self._getter_access_tracker["Button2"] = {}
+		return self._Button2
+	@Button2.setter
+	def Button2(self, new_state):
+		self._setter_access_tracker["Button2"] = {}
+		global default_state
+		self._Button2 = Button(new_state, default_state["Button2"])
+
+	@property
+	def TextBox5(self):
+		self._getter_access_tracker["TextBox5"] = {}
+		return self._TextBox5
+	@TextBox5.setter
+	def TextBox5(self, new_state):
+		self._setter_access_tracker["TextBox5"] = {}
+		global default_state
+		self._TextBox5 = TextBox(new_state, default_state["TextBox5"])
+
+	@property
+	def TextBox6(self):
+		self._getter_access_tracker["TextBox6"] = {}
+		return self._TextBox6
+	@TextBox6.setter
+	def TextBox6(self, new_state):
+		self._setter_access_tracker["TextBox6"] = {}
+		global default_state
+		self._TextBox6 = TextBox(new_state, default_state["TextBox6"])
+
+	@property
+	def TextBox7(self):
+		self._getter_access_tracker["TextBox7"] = {}
+		return self._TextBox7
+	@TextBox7.setter
+	def TextBox7(self, new_state):
+		self._setter_access_tracker["TextBox7"] = {}
+		global default_state
+		self._TextBox7 = TextBox(new_state, default_state["TextBox7"])
+
+	@property
+	def TextBox8(self):
+		self._getter_access_tracker["TextBox8"] = {}
+		return self._TextBox8
+	@TextBox8.setter
+	def TextBox8(self, new_state):
+		self._setter_access_tracker["TextBox8"] = {}
+		global default_state
+		self._TextBox8 = TextBox(new_state, default_state["TextBox8"])
+
+	@property
+	def TextBox14(self):
+		self._getter_access_tracker["TextBox14"] = {}
+		return self._TextBox14
+	@TextBox14.setter
+	def TextBox14(self, new_state):
+		self._setter_access_tracker["TextBox14"] = {}
+		global default_state
+		self._TextBox14 = TextBox(new_state, default_state["TextBox14"])
+
+	@property
+	def TextBox16(self):
+		self._getter_access_tracker["TextBox16"] = {}
+		return self._TextBox16
+	@TextBox16.setter
+	def TextBox16(self, new_state):
+		self._setter_access_tracker["TextBox16"] = {}
+		global default_state
+		self._TextBox16 = TextBox(new_state, default_state["TextBox16"])
+
+	@property
+	def TextBox160(self):
+		self._getter_access_tracker["TextBox160"] = {}
+		return self._TextBox160
+	@TextBox160.setter
+	def TextBox160(self, new_state):
+		self._setter_access_tracker["TextBox160"] = {}
+		global default_state
+		self._TextBox160 = TextBox(new_state, default_state["TextBox160"])
+
+	@property
+	def Image66(self):
+		self._getter_access_tracker["Image66"] = {}
+		return self._Image66
+	@Image66.setter
+	def Image66(self, new_state):
+		self._setter_access_tracker["Image66"] = {}
+		global default_state
+		self._Image66 = Image(new_state, default_state["Image66"])
+
+	@property
+	def Image38(self):
+		self._getter_access_tracker["Image38"] = {}
+		return self._Image38
+	@Image38.setter
+	def Image38(self, new_state):
+		self._setter_access_tracker["Image38"] = {}
+		global default_state
+		self._Image38 = Image(new_state, default_state["Image38"])
+
+	@property
+	def TextBox63(self):
+		self._getter_access_tracker["TextBox63"] = {}
+		return self._TextBox63
+	@TextBox63.setter
+	def TextBox63(self, new_state):
+		self._setter_access_tracker["TextBox63"] = {}
+		global default_state
+		self._TextBox63 = TextBox(new_state, default_state["TextBox63"])
+
+	@property
+	def TextBox54(self):
+		self._getter_access_tracker["TextBox54"] = {}
+		return self._TextBox54
+	@TextBox54.setter
+	def TextBox54(self, new_state):
+		self._setter_access_tracker["TextBox54"] = {}
+		global default_state
+		self._TextBox54 = TextBox(new_state, default_state["TextBox54"])
+
+	@property
+	def TextBox55(self):
+		self._getter_access_tracker["TextBox55"] = {}
+		return self._TextBox55
+	@TextBox55.setter
+	def TextBox55(self, new_state):
+		self._setter_access_tracker["TextBox55"] = {}
+		global default_state
+		self._TextBox55 = TextBox(new_state, default_state["TextBox55"])
+
+	@property
+	def TextBox64(self):
+		self._getter_access_tracker["TextBox64"] = {}
+		return self._TextBox64
+	@TextBox64.setter
+	def TextBox64(self, new_state):
+		self._setter_access_tracker["TextBox64"] = {}
+		global default_state
+		self._TextBox64 = TextBox(new_state, default_state["TextBox64"])
+
+	@property
+	def TextBox56(self):
+		self._getter_access_tracker["TextBox56"] = {}
+		return self._TextBox56
+	@TextBox56.setter
+	def TextBox56(self, new_state):
+		self._setter_access_tracker["TextBox56"] = {}
+		global default_state
+		self._TextBox56 = TextBox(new_state, default_state["TextBox56"])
+
+	@property
+	def TextBox57(self):
+		self._getter_access_tracker["TextBox57"] = {}
+		return self._TextBox57
+	@TextBox57.setter
+	def TextBox57(self, new_state):
+		self._setter_access_tracker["TextBox57"] = {}
+		global default_state
+		self._TextBox57 = TextBox(new_state, default_state["TextBox57"])
+
+	@property
+	def TextBox58(self):
+		self._getter_access_tracker["TextBox58"] = {}
+		return self._TextBox58
+	@TextBox58.setter
+	def TextBox58(self, new_state):
+		self._setter_access_tracker["TextBox58"] = {}
+		global default_state
+		self._TextBox58 = TextBox(new_state, default_state["TextBox58"])
+
+	@property
+	def TextBox65(self):
+		self._getter_access_tracker["TextBox65"] = {}
+		return self._TextBox65
+	@TextBox65.setter
+	def TextBox65(self, new_state):
+		self._setter_access_tracker["TextBox65"] = {}
+		global default_state
+		self._TextBox65 = TextBox(new_state, default_state["TextBox65"])
+
+	@property
+	def TextBox59(self):
+		self._getter_access_tracker["TextBox59"] = {}
+		return self._TextBox59
+	@TextBox59.setter
+	def TextBox59(self, new_state):
+		self._setter_access_tracker["TextBox59"] = {}
+		global default_state
+		self._TextBox59 = TextBox(new_state, default_state["TextBox59"])
+
+	@property
+	def TextBox60(self):
+		self._getter_access_tracker["TextBox60"] = {}
+		return self._TextBox60
+	@TextBox60.setter
+	def TextBox60(self, new_state):
+		self._setter_access_tracker["TextBox60"] = {}
+		global default_state
+		self._TextBox60 = TextBox(new_state, default_state["TextBox60"])
+
+	@property
+	def TextBox61(self):
+		self._getter_access_tracker["TextBox61"] = {}
+		return self._TextBox61
+	@TextBox61.setter
+	def TextBox61(self, new_state):
+		self._setter_access_tracker["TextBox61"] = {}
+		global default_state
+		self._TextBox61 = TextBox(new_state, default_state["TextBox61"])
+
+	@property
+	def TextBox66(self):
+		self._getter_access_tracker["TextBox66"] = {}
+		return self._TextBox66
+	@TextBox66.setter
+	def TextBox66(self, new_state):
+		self._setter_access_tracker["TextBox66"] = {}
+		global default_state
+		self._TextBox66 = TextBox(new_state, default_state["TextBox66"])
+
+	@property
+	def TextBox62(self):
+		self._getter_access_tracker["TextBox62"] = {}
+		return self._TextBox62
+	@TextBox62.setter
+	def TextBox62(self, new_state):
+		self._setter_access_tracker["TextBox62"] = {}
+		global default_state
+		self._TextBox62 = TextBox(new_state, default_state["TextBox62"])
+
+	@property
+	def Image76(self):
+		self._getter_access_tracker["Image76"] = {}
+		return self._Image76
+	@Image76.setter
+	def Image76(self, new_state):
+		self._setter_access_tracker["Image76"] = {}
+		global default_state
+		self._Image76 = Image(new_state, default_state["Image76"])
+
+	@property
+	def Image77(self):
+		self._getter_access_tracker["Image77"] = {}
+		return self._Image77
+	@Image77.setter
+	def Image77(self, new_state):
+		self._setter_access_tracker["Image77"] = {}
+		global default_state
+		self._Image77 = Image(new_state, default_state["Image77"])
+
+	@property
+	def Image78(self):
+		self._getter_access_tracker["Image78"] = {}
+		return self._Image78
+	@Image78.setter
+	def Image78(self, new_state):
+		self._setter_access_tracker["Image78"] = {}
+		global default_state
+		self._Image78 = Image(new_state, default_state["Image78"])
+
+	@property
+	def Image79(self):
+		self._getter_access_tracker["Image79"] = {}
+		return self._Image79
+	@Image79.setter
+	def Image79(self, new_state):
+		self._setter_access_tracker["Image79"] = {}
+		global default_state
+		self._Image79 = Image(new_state, default_state["Image79"])
+
+	@property
+	def TextBox230(self):
+		self._getter_access_tracker["TextBox230"] = {}
+		return self._TextBox230
+	@TextBox230.setter
+	def TextBox230(self, new_state):
+		self._setter_access_tracker["TextBox230"] = {}
+		global default_state
+		self._TextBox230 = TextBox(new_state, default_state["TextBox230"])
+
+	@property
+	def Image85(self):
+		self._getter_access_tracker["Image85"] = {}
+		return self._Image85
+	@Image85.setter
+	def Image85(self, new_state):
+		self._setter_access_tracker["Image85"] = {}
+		global default_state
+		self._Image85 = Image(new_state, default_state["Image85"])
+
+	@property
+	def Image84(self):
+		self._getter_access_tracker["Image84"] = {}
+		return self._Image84
+	@Image84.setter
+	def Image84(self, new_state):
+		self._setter_access_tracker["Image84"] = {}
+		global default_state
+		self._Image84 = Image(new_state, default_state["Image84"])
+
+	@property
+	def TextBox229(self):
+		self._getter_access_tracker["TextBox229"] = {}
+		return self._TextBox229
+	@TextBox229.setter
+	def TextBox229(self, new_state):
+		self._setter_access_tracker["TextBox229"] = {}
+		global default_state
+		self._TextBox229 = TextBox(new_state, default_state["TextBox229"])
+
+	@property
+	def TextBox95(self):
+		self._getter_access_tracker["TextBox95"] = {}
+		return self._TextBox95
+	@TextBox95.setter
+	def TextBox95(self, new_state):
+		self._setter_access_tracker["TextBox95"] = {}
+		global default_state
+		self._TextBox95 = TextBox(new_state, default_state["TextBox95"])
+
+	@property
+	def TextBox93(self):
+		self._getter_access_tracker["TextBox93"] = {}
+		return self._TextBox93
+	@TextBox93.setter
+	def TextBox93(self, new_state):
+		self._setter_access_tracker["TextBox93"] = {}
+		global default_state
+		self._TextBox93 = TextBox(new_state, default_state["TextBox93"])
+
+	@property
+	def TextBox94(self):
+		self._getter_access_tracker["TextBox94"] = {}
+		return self._TextBox94
+	@TextBox94.setter
+	def TextBox94(self, new_state):
+		self._setter_access_tracker["TextBox94"] = {}
+		global default_state
+		self._TextBox94 = TextBox(new_state, default_state["TextBox94"])
+
+	@property
+	def Image63(self):
+		self._getter_access_tracker["Image63"] = {}
+		return self._Image63
+	@Image63.setter
+	def Image63(self, new_state):
+		self._setter_access_tracker["Image63"] = {}
+		global default_state
+		self._Image63 = Image(new_state, default_state["Image63"])
+
+	@property
+	def TextBox185(self):
+		self._getter_access_tracker["TextBox185"] = {}
+		return self._TextBox185
+	@TextBox185.setter
+	def TextBox185(self, new_state):
+		self._setter_access_tracker["TextBox185"] = {}
+		global default_state
+		self._TextBox185 = TextBox(new_state, default_state["TextBox185"])
+
+	@property
+	def TextBox186(self):
+		self._getter_access_tracker["TextBox186"] = {}
+		return self._TextBox186
+	@TextBox186.setter
+	def TextBox186(self, new_state):
+		self._setter_access_tracker["TextBox186"] = {}
+		global default_state
+		self._TextBox186 = TextBox(new_state, default_state["TextBox186"])
+
+	@property
+	def Image60(self):
+		self._getter_access_tracker["Image60"] = {}
+		return self._Image60
+	@Image60.setter
+	def Image60(self, new_state):
+		self._setter_access_tracker["Image60"] = {}
+		global default_state
+		self._Image60 = Image(new_state, default_state["Image60"])
+
+	@property
+	def TextBox213(self):
+		self._getter_access_tracker["TextBox213"] = {}
+		return self._TextBox213
+	@TextBox213.setter
+	def TextBox213(self, new_state):
+		self._setter_access_tracker["TextBox213"] = {}
+		global default_state
+		self._TextBox213 = TextBox(new_state, default_state["TextBox213"])
+
+	@property
+	def TextBox214(self):
+		self._getter_access_tracker["TextBox214"] = {}
+		return self._TextBox214
+	@TextBox214.setter
+	def TextBox214(self, new_state):
+		self._setter_access_tracker["TextBox214"] = {}
+		global default_state
+		self._TextBox214 = TextBox(new_state, default_state["TextBox214"])
+
+	@property
+	def TextBox215(self):
+		self._getter_access_tracker["TextBox215"] = {}
+		return self._TextBox215
+	@TextBox215.setter
+	def TextBox215(self, new_state):
+		self._setter_access_tracker["TextBox215"] = {}
+		global default_state
+		self._TextBox215 = TextBox(new_state, default_state["TextBox215"])
+
+	@property
+	def TextBox216(self):
+		self._getter_access_tracker["TextBox216"] = {}
+		return self._TextBox216
+	@TextBox216.setter
+	def TextBox216(self, new_state):
+		self._setter_access_tracker["TextBox216"] = {}
+		global default_state
+		self._TextBox216 = TextBox(new_state, default_state["TextBox216"])
+
+	@property
+	def TextBox217(self):
+		self._getter_access_tracker["TextBox217"] = {}
+		return self._TextBox217
+	@TextBox217.setter
+	def TextBox217(self, new_state):
+		self._setter_access_tracker["TextBox217"] = {}
+		global default_state
+		self._TextBox217 = TextBox(new_state, default_state["TextBox217"])
+
+	@property
+	def TextBox218(self):
+		self._getter_access_tracker["TextBox218"] = {}
+		return self._TextBox218
+	@TextBox218.setter
+	def TextBox218(self, new_state):
+		self._setter_access_tracker["TextBox218"] = {}
+		global default_state
+		self._TextBox218 = TextBox(new_state, default_state["TextBox218"])
+
+	@property
+	def Image59(self):
+		self._getter_access_tracker["Image59"] = {}
+		return self._Image59
+	@Image59.setter
+	def Image59(self, new_state):
+		self._setter_access_tracker["Image59"] = {}
+		global default_state
+		self._Image59 = Image(new_state, default_state["Image59"])
+
+	@property
+	def Image96(self):
+		self._getter_access_tracker["Image96"] = {}
+		return self._Image96
+	@Image96.setter
+	def Image96(self, new_state):
+		self._setter_access_tracker["Image96"] = {}
+		global default_state
+		self._Image96 = Image(new_state, default_state["Image96"])
+
+	@property
+	def TextBox237(self):
+		self._getter_access_tracker["TextBox237"] = {}
+		return self._TextBox237
+	@TextBox237.setter
+	def TextBox237(self, new_state):
+		self._setter_access_tracker["TextBox237"] = {}
+		global default_state
+		self._TextBox237 = TextBox(new_state, default_state["TextBox237"])
+
+	@property
+	def TextBox238(self):
+		self._getter_access_tracker["TextBox238"] = {}
+		return self._TextBox238
+	@TextBox238.setter
+	def TextBox238(self, new_state):
+		self._setter_access_tracker["TextBox238"] = {}
+		global default_state
+		self._TextBox238 = TextBox(new_state, default_state["TextBox238"])
+
+	@property
+	def TextBox239(self):
+		self._getter_access_tracker["TextBox239"] = {}
+		return self._TextBox239
+	@TextBox239.setter
+	def TextBox239(self, new_state):
+		self._setter_access_tracker["TextBox239"] = {}
+		global default_state
+		self._TextBox239 = TextBox(new_state, default_state["TextBox239"])
+
+	@property
+	def Input4(self):
+		self._getter_access_tracker["Input4"] = {}
+		return self._Input4
+	@Input4.setter
+	def Input4(self, new_state):
+		self._setter_access_tracker["Input4"] = {}
+		global default_state
+		self._Input4 = Input(new_state, default_state["Input4"])
+
+	@property
+	def Button16(self):
+		self._getter_access_tracker["Button16"] = {}
+		return self._Button16
+	@Button16.setter
+	def Button16(self, new_state):
+		self._setter_access_tracker["Button16"] = {}
+		global default_state
+		self._Button16 = Button(new_state, default_state["Button16"])
+
+	@property
+	def TextBox192(self):
+		self._getter_access_tracker["TextBox192"] = {}
+		return self._TextBox192
+	@TextBox192.setter
+	def TextBox192(self, new_state):
+		self._setter_access_tracker["TextBox192"] = {}
+		global default_state
+		self._TextBox192 = TextBox(new_state, default_state["TextBox192"])
+
+	@property
+	def TextBox201(self):
+		self._getter_access_tracker["TextBox201"] = {}
+		return self._TextBox201
+	@TextBox201.setter
+	def TextBox201(self, new_state):
+		self._setter_access_tracker["TextBox201"] = {}
+		global default_state
+		self._TextBox201 = TextBox(new_state, default_state["TextBox201"])
+
+	@property
+	def TextBox202(self):
+		self._getter_access_tracker["TextBox202"] = {}
+		return self._TextBox202
+	@TextBox202.setter
+	def TextBox202(self, new_state):
+		self._setter_access_tracker["TextBox202"] = {}
+		global default_state
+		self._TextBox202 = TextBox(new_state, default_state["TextBox202"])
+
+	@property
+	def TextBox209(self):
+		self._getter_access_tracker["TextBox209"] = {}
+		return self._TextBox209
+	@TextBox209.setter
+	def TextBox209(self, new_state):
+		self._setter_access_tracker["TextBox209"] = {}
+		global default_state
+		self._TextBox209 = TextBox(new_state, default_state["TextBox209"])
+
+	@property
+	def TextBox210(self):
+		self._getter_access_tracker["TextBox210"] = {}
+		return self._TextBox210
+	@TextBox210.setter
+	def TextBox210(self, new_state):
+		self._setter_access_tracker["TextBox210"] = {}
+		global default_state
+		self._TextBox210 = TextBox(new_state, default_state["TextBox210"])
+
+	@property
+	def Image56(self):
+		self._getter_access_tracker["Image56"] = {}
+		return self._Image56
+	@Image56.setter
+	def Image56(self, new_state):
+		self._setter_access_tracker["Image56"] = {}
+		global default_state
+		self._Image56 = Image(new_state, default_state["Image56"])
+
+	def _to_json_fields(self):
+		return {
+			"Flex1": self._Flex1,
+			"Flex14": self._Flex14,
+			"Flex5": self._Flex5,
+			"Flex10": self._Flex10,
+			"Flex154": self._Flex154,
+			"Flex12": self._Flex12,
+			"Flex9": self._Flex9,
+			"Menu1": self._Menu1,
+			"Flex6": self._Flex6,
+			"Flex16": self._Flex16,
+			"Flex15": self._Flex15,
+			"Flex243": self._Flex243,
+			"Flex160": self._Flex160,
+			"Flex77": self._Flex77,
+			"Flex62": self._Flex62,
+			"Flex60": self._Flex60,
+			"Flex51": self._Flex51,
+			"Flex47": self._Flex47,
+			"Flex52": self._Flex52,
+			"Flex48": self._Flex48,
+			"Flex53": self._Flex53,
+			"Flex49": self._Flex49,
+			"Flex54": self._Flex54,
+			"Flex50": self._Flex50,
+			"Flex250": self._Flex250,
+			"Flex251": self._Flex251,
+			"Flex252": self._Flex252,
+			"Flex259": self._Flex259,
+			"Flex258": self._Flex258,
+			"Flex256": self._Flex256,
+			"Flex86": self._Flex86,
+			"Flex85": self._Flex85,
+			"Flex84": self._Flex84,
+			"Flex241": self._Flex241,
+			"Flex195": self._Flex195,
+			"Flex193": self._Flex193,
+			"Flex183": self._Flex183,
+			"Flex242": self._Flex242,
+			"Flex229": self._Flex229,
+			"Flex227": self._Flex227,
+			"Flex228": self._Flex228,
+			"Flex232": self._Flex232,
+			"Flex230": self._Flex230,
+			"Flex231": self._Flex231,
+			"Flex271": self._Flex271,
+			"Flex269": self._Flex269,
+			"Flex270": self._Flex270,
+			"Flex223": self._Flex223,
+			"Flex219": self._Flex219,
+			"Flex207": self._Flex207,
+			"Flex198": self._Flex198,
+			"Flex199": self._Flex199,
+			"Flex208": self._Flex208,
+			"Flex226": self._Flex226,
+			"Flex224": self._Flex224,
+			"Flex225": self._Flex225,
+			"Image2": self._Image2,
+			"TextBox2": self._TextBox2,
+			"TextBox10": self._TextBox10,
+			"TextBox11": self._TextBox11,
+			"TextBox155": self._TextBox155,
+			"TextBox156": self._TextBox156,
+			"Image37": self._Image37,
+			"Button2": self._Button2,
+			"TextBox5": self._TextBox5,
+			"TextBox6": self._TextBox6,
+			"TextBox7": self._TextBox7,
+			"TextBox8": self._TextBox8,
+			"TextBox14": self._TextBox14,
+			"TextBox16": self._TextBox16,
+			"TextBox160": self._TextBox160,
+			"Image66": self._Image66,
+			"Image38": self._Image38,
+			"TextBox63": self._TextBox63,
+			"TextBox54": self._TextBox54,
+			"TextBox55": self._TextBox55,
+			"TextBox64": self._TextBox64,
+			"TextBox56": self._TextBox56,
+			"TextBox57": self._TextBox57,
+			"TextBox58": self._TextBox58,
+			"TextBox65": self._TextBox65,
+			"TextBox59": self._TextBox59,
+			"TextBox60": self._TextBox60,
+			"TextBox61": self._TextBox61,
+			"TextBox66": self._TextBox66,
+			"TextBox62": self._TextBox62,
+			"Image76": self._Image76,
+			"Image77": self._Image77,
+			"Image78": self._Image78,
+			"Image79": self._Image79,
+			"TextBox230": self._TextBox230,
+			"Image85": self._Image85,
+			"Image84": self._Image84,
+			"TextBox229": self._TextBox229,
+			"TextBox95": self._TextBox95,
+			"TextBox93": self._TextBox93,
+			"TextBox94": self._TextBox94,
+			"Image63": self._Image63,
+			"TextBox185": self._TextBox185,
+			"TextBox186": self._TextBox186,
+			"Image60": self._Image60,
+			"TextBox213": self._TextBox213,
+			"TextBox214": self._TextBox214,
+			"TextBox215": self._TextBox215,
+			"TextBox216": self._TextBox216,
+			"TextBox217": self._TextBox217,
+			"TextBox218": self._TextBox218,
+			"Image59": self._Image59,
+			"Image96": self._Image96,
+			"TextBox237": self._TextBox237,
+			"TextBox238": self._TextBox238,
+			"TextBox239": self._TextBox239,
+			"Input4": self._Input4,
+			"Button16": self._Button16,
+			"TextBox192": self._TextBox192,
+			"TextBox201": self._TextBox201,
+			"TextBox202": self._TextBox202,
+			"TextBox209": self._TextBox209,
+			"TextBox210": self._TextBox210,
+			"Image56": self._Image56,
+			}
+
+
+class FlexstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class Flex:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: FlexstylesClass = get_defined_value(state, def_state, "styles")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = FlexstylesClass(state, self._def_state["styles"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			}
+
+
+class MenustylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class MenucustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.open: bool = get_defined_value(state, def_state, "open")
+		self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
+		self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
+		self.src: str = get_defined_value(state, def_state, "src")
+		self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
+		self.gap: int = get_defined_value(state, def_state, "gap")
+		self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def open(self):
+		self._getter_access_tracker["open"] = {}
+		return self._open
+	@open.setter
+	def open(self, state):
+		self._setter_access_tracker["open"] = {}
+		self._open = state
+	@property
+	def iconHeight(self):
+		self._getter_access_tracker["iconHeight"] = {}
+		return self._iconHeight
+	@iconHeight.setter
+	def iconHeight(self, state):
+		self._setter_access_tracker["iconHeight"] = {}
+		self._iconHeight = state
+	@property
+	def iconWidth(self):
+		self._getter_access_tracker["iconWidth"] = {}
+		return self._iconWidth
+	@iconWidth.setter
+	def iconWidth(self, state):
+		self._setter_access_tracker["iconWidth"] = {}
+		self._iconWidth = state
+	@property
+	def src(self):
+		self._getter_access_tracker["src"] = {}
+		return self._src
+	@src.setter
+	def src(self, state):
+		self._setter_access_tracker["src"] = {}
+		self._src = state
+	@property
+	def strokeColor(self):
+		self._getter_access_tracker["strokeColor"] = {}
+		return self._strokeColor
+	@strokeColor.setter
+	def strokeColor(self, state):
+		self._setter_access_tracker["strokeColor"] = {}
+		self._strokeColor = state
+	@property
+	def gap(self):
+		self._getter_access_tracker["gap"] = {}
+		return self._gap
+	@gap.setter
+	def gap(self, state):
+		self._setter_access_tracker["gap"] = {}
+		self._gap = state
+	@property
+	def alignRight(self):
+		self._getter_access_tracker["alignRight"] = {}
+		return self._alignRight
+	@alignRight.setter
+	def alignRight(self, state):
+		self._setter_access_tracker["alignRight"] = {}
+		self._alignRight = state
+	def _to_json_fields(self):
+		return {
+			"open": self._open,
+			"iconHeight": self._iconHeight,
+			"iconWidth": self._iconWidth,
+			"src": self._src,
+			"strokeColor": self._strokeColor,
+			"gap": self._gap,
+			"alignRight": self._alignRight,
+			}
+
+
+class Menu:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: MenustylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: MenucustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = MenustylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = MenucustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class ImagestylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class ImagecustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alt: str = get_defined_value(state, def_state, "alt")
+		self.src: str = get_defined_value(state, def_state, "src")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alt(self):
+		self._getter_access_tracker["alt"] = {}
+		return self._alt
+	@alt.setter
+	def alt(self, state):
+		self._setter_access_tracker["alt"] = {}
+		self._alt = state
+	@property
+	def src(self):
+		self._getter_access_tracker["src"] = {}
+		return self._src
+	@src.setter
+	def src(self, state):
+		self._setter_access_tracker["src"] = {}
+		self._src = state
+	def _to_json_fields(self):
+		return {
+			"alt": self._alt,
+			"src": self._src,
+			}
+
+
+class Image:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: ImagestylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: ImagecustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = ImagestylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = ImagecustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class TextBoxstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class TextBoxcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.text: str = get_defined_value(state, def_state, "text")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	def _to_json_fields(self):
+		return {
+			"text": self._text,
+			}
+
+
+class TextBox:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: TextBoxstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: TextBoxcustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = TextBoxstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = TextBoxcustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class ButtonstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class ButtoncustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.text: str = get_defined_value(state, def_state, "text")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	def _to_json_fields(self):
+		return {
+			"text": self._text,
+			}
+
+
+class Button:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: ButtonstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: ButtoncustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = ButtonstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = ButtoncustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class InputstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class InputcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.value: str = get_defined_value(state, def_state, "value")
+		self.placeholder: str = get_defined_value(state, def_state, "placeholder")
+		self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def value(self):
+		self._getter_access_tracker["value"] = {}
+		return self._value
+	@value.setter
+	def value(self, state):
+		self._setter_access_tracker["value"] = {}
+		self._value = state
+	@property
+	def placeholder(self):
+		self._getter_access_tracker["placeholder"] = {}
+		return self._placeholder
+	@placeholder.setter
+	def placeholder(self, state):
+		self._setter_access_tracker["placeholder"] = {}
+		self._placeholder = state
+	@property
+	def isPasswordField(self):
+		self._getter_access_tracker["isPasswordField"] = {}
+		return self._isPasswordField
+	@isPasswordField.setter
+	def isPasswordField(self, state):
+		self._setter_access_tracker["isPasswordField"] = {}
+		self._isPasswordField = state
+	def _to_json_fields(self):
+		return {
+			"value": self._value,
+			"placeholder": self._placeholder,
+			"isPasswordField": self._isPasswordField,
+			}
+
+
+class Input:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onChange = False
+		self.onPressEnter = False
+		self.styles: InputstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: InputcustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = InputstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = InputcustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
diff --git a/controllers/routes/trial/atri.py b/controllers/routes/trial/atri.py
new file mode 100644
index 0000000..9338c3a
--- /dev/null
+++ b/controllers/routes/trial/atri.py
@@ -0,0 +1,7291 @@
+import json
+from typing import List, Any, Optional
+from fastapi import UploadFile
+default_state = json.loads('{"Flex115":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex113":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex106":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex99":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex100":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex107":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex101":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex102":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex108":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex114":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex109":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex103":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex110":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Menu2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"open":true,"iconHeight":24,"iconWidth":24,"src":"","strokeColor":"","gap":0,"alignRight":false}},"Flex98":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex104":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex111":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex105":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex112":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Overlay2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"closeModalAfter":0,"open":false}},"Flex712":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex710":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex722":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex760":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex759":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex756":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex751":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex752":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex757":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex753":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex754":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex755":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex758":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex711":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex738":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex736":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex737":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex741":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex739":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex740":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex744":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex742":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex743":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex747":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex745":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex746":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex136":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex133":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex129":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex121":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex134":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex130":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex122":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex135":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex131":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex123":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex124":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex116":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex132":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex125":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex117":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex126":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex118":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex127":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex119":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex128":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex120":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex152":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex150":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex147":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex143":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex139":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex144":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex140":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex148":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex145":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex141":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex137":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex146":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex142":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex138":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex151":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Flex149":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"}},"Image29":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image26":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox107":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox108":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox109":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox110":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox111":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox112":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox113":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox116":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox117":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox114":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox115":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox103":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox104":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox105":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox106":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Button7":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Image27":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox118":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image28":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image314":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image313":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox493":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image310":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image311":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image312":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Button229":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Button230":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"Button231":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"TextBox494":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox495":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Button228":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"TextBox482":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Upload2":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"TextBox483":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Upload1":{"styles":{"display":"","flexDirection":"row","alignItems":"stretch","justifyContent":"flex-start","flexWrap":"nowrap","alignContent":"stretch","rowGap":"","columnGap":"","alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"multiple":false,"showFilename":true,"text":"Upload","disabled":false}},"TextBox484":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input11":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox492":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input12":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox485":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox486":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input13":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Input14":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox487":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox488":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Input15":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"Input16":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"value":"","placeholder":"","isPasswordField":false}},"TextBox489":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Button8":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":""}},"TextBox138":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox129":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox130":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox139":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox131":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox132":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image31":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image32":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image33":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image34":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"Image35":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox133":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image30":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox119":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox134":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox120":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox135":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox121":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox122":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox123":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox136":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox124":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox125":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox126":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox137":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox127":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox128":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox151":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox145":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox146":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox147":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox152":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox148":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox149":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox140":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox141":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox150":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox142":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox143":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox144":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"TextBox154":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}},"Image36":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"alt":"No preview available","src":""}},"TextBox153":{"styles":{"alignSelf":"","flexGrow":"","flexShrink":"","order":"","marginTop":"","marginBottom":"","marginRight":"","marginLeft":"","paddingTop":"","paddingBottom":"","paddingRight":"","paddingLeft":"","width":"","height":"","minWidth":"","minHeight":"","maxWidth":"","maxHeight":"","overflow":"","fontFamily":"","fontWeight":400,"fontSize":"","textAlign":"left","color":"","opacity":"","fontStyle":"","borderRadius":"","borderWidth":"","borderStyle":"","borderColor":"","backgroundImage":"","backgroundColor":"","backgroundClip":"","backgroundOrigin":"","backgroundAttachment":"","backgroundPositionX":"","backgroundPositionY":"","backgroundRepeat":"","position":"static","float":"none","clear":"none","top":"","left":"","bottom":"","right":"","zIndex":"","outlineStyle":"","outlineColor":"","outlineOffset":"","outlineWidth":"","cursor":"","boxSizing":"content-box"},"custom":{"text":"Your text Here!"}}}')
+def get_defined_value(state, def_state, key):
+	return state[key] if key in state else def_state[key]
+class Atri:
+	def __init__(self, state: Any):
+		self.event_data = None
+		self.event_alias = None
+		global default_state
+		self._setter_access_tracker = {}
+		self.Flex115 = state["Flex115"]
+		self.Flex113 = state["Flex113"]
+		self.Flex106 = state["Flex106"]
+		self.Flex99 = state["Flex99"]
+		self.Flex100 = state["Flex100"]
+		self.Flex107 = state["Flex107"]
+		self.Flex101 = state["Flex101"]
+		self.Flex102 = state["Flex102"]
+		self.Flex108 = state["Flex108"]
+		self.Flex114 = state["Flex114"]
+		self.Flex109 = state["Flex109"]
+		self.Flex103 = state["Flex103"]
+		self.Flex110 = state["Flex110"]
+		self.Menu2 = state["Menu2"]
+		self.Flex98 = state["Flex98"]
+		self.Flex104 = state["Flex104"]
+		self.Flex111 = state["Flex111"]
+		self.Flex105 = state["Flex105"]
+		self.Flex112 = state["Flex112"]
+		self.Overlay2 = state["Overlay2"]
+		self.Flex712 = state["Flex712"]
+		self.Flex710 = state["Flex710"]
+		self.Flex722 = state["Flex722"]
+		self.Flex760 = state["Flex760"]
+		self.Flex759 = state["Flex759"]
+		self.Flex756 = state["Flex756"]
+		self.Flex751 = state["Flex751"]
+		self.Flex752 = state["Flex752"]
+		self.Flex757 = state["Flex757"]
+		self.Flex753 = state["Flex753"]
+		self.Flex754 = state["Flex754"]
+		self.Flex755 = state["Flex755"]
+		self.Flex758 = state["Flex758"]
+		self.Flex711 = state["Flex711"]
+		self.Flex738 = state["Flex738"]
+		self.Flex736 = state["Flex736"]
+		self.Flex737 = state["Flex737"]
+		self.Flex741 = state["Flex741"]
+		self.Flex739 = state["Flex739"]
+		self.Flex740 = state["Flex740"]
+		self.Flex744 = state["Flex744"]
+		self.Flex742 = state["Flex742"]
+		self.Flex743 = state["Flex743"]
+		self.Flex747 = state["Flex747"]
+		self.Flex745 = state["Flex745"]
+		self.Flex746 = state["Flex746"]
+		self.Flex136 = state["Flex136"]
+		self.Flex133 = state["Flex133"]
+		self.Flex129 = state["Flex129"]
+		self.Flex121 = state["Flex121"]
+		self.Flex134 = state["Flex134"]
+		self.Flex130 = state["Flex130"]
+		self.Flex122 = state["Flex122"]
+		self.Flex135 = state["Flex135"]
+		self.Flex131 = state["Flex131"]
+		self.Flex123 = state["Flex123"]
+		self.Flex124 = state["Flex124"]
+		self.Flex116 = state["Flex116"]
+		self.Flex132 = state["Flex132"]
+		self.Flex125 = state["Flex125"]
+		self.Flex117 = state["Flex117"]
+		self.Flex126 = state["Flex126"]
+		self.Flex118 = state["Flex118"]
+		self.Flex127 = state["Flex127"]
+		self.Flex119 = state["Flex119"]
+		self.Flex128 = state["Flex128"]
+		self.Flex120 = state["Flex120"]
+		self.Flex152 = state["Flex152"]
+		self.Flex150 = state["Flex150"]
+		self.Flex147 = state["Flex147"]
+		self.Flex143 = state["Flex143"]
+		self.Flex139 = state["Flex139"]
+		self.Flex144 = state["Flex144"]
+		self.Flex140 = state["Flex140"]
+		self.Flex148 = state["Flex148"]
+		self.Flex145 = state["Flex145"]
+		self.Flex141 = state["Flex141"]
+		self.Flex137 = state["Flex137"]
+		self.Flex146 = state["Flex146"]
+		self.Flex142 = state["Flex142"]
+		self.Flex138 = state["Flex138"]
+		self.Flex151 = state["Flex151"]
+		self.Flex149 = state["Flex149"]
+		self.Image29 = state["Image29"]
+		self.Image26 = state["Image26"]
+		self.TextBox107 = state["TextBox107"]
+		self.TextBox108 = state["TextBox108"]
+		self.TextBox109 = state["TextBox109"]
+		self.TextBox110 = state["TextBox110"]
+		self.TextBox111 = state["TextBox111"]
+		self.TextBox112 = state["TextBox112"]
+		self.TextBox113 = state["TextBox113"]
+		self.TextBox116 = state["TextBox116"]
+		self.TextBox117 = state["TextBox117"]
+		self.TextBox114 = state["TextBox114"]
+		self.TextBox115 = state["TextBox115"]
+		self.TextBox103 = state["TextBox103"]
+		self.TextBox104 = state["TextBox104"]
+		self.TextBox105 = state["TextBox105"]
+		self.TextBox106 = state["TextBox106"]
+		self.Button7 = state["Button7"]
+		self.Image27 = state["Image27"]
+		self.TextBox118 = state["TextBox118"]
+		self.Image28 = state["Image28"]
+		self.Image314 = state["Image314"]
+		self.Image313 = state["Image313"]
+		self.TextBox493 = state["TextBox493"]
+		self.Image310 = state["Image310"]
+		self.Image311 = state["Image311"]
+		self.Image312 = state["Image312"]
+		self.Button229 = state["Button229"]
+		self.Button230 = state["Button230"]
+		self.Button231 = state["Button231"]
+		self.TextBox494 = state["TextBox494"]
+		self.TextBox495 = state["TextBox495"]
+		self.Button228 = state["Button228"]
+		self.TextBox482 = state["TextBox482"]
+		self.Upload2 = state["Upload2"]
+		self.TextBox483 = state["TextBox483"]
+		self.Upload1 = state["Upload1"]
+		self.TextBox484 = state["TextBox484"]
+		self.Input11 = state["Input11"]
+		self.TextBox492 = state["TextBox492"]
+		self.Input12 = state["Input12"]
+		self.TextBox485 = state["TextBox485"]
+		self.TextBox486 = state["TextBox486"]
+		self.Input13 = state["Input13"]
+		self.Input14 = state["Input14"]
+		self.TextBox487 = state["TextBox487"]
+		self.TextBox488 = state["TextBox488"]
+		self.Input15 = state["Input15"]
+		self.Input16 = state["Input16"]
+		self.TextBox489 = state["TextBox489"]
+		self.Button8 = state["Button8"]
+		self.TextBox138 = state["TextBox138"]
+		self.TextBox129 = state["TextBox129"]
+		self.TextBox130 = state["TextBox130"]
+		self.TextBox139 = state["TextBox139"]
+		self.TextBox131 = state["TextBox131"]
+		self.TextBox132 = state["TextBox132"]
+		self.Image31 = state["Image31"]
+		self.Image32 = state["Image32"]
+		self.Image33 = state["Image33"]
+		self.Image34 = state["Image34"]
+		self.Image35 = state["Image35"]
+		self.TextBox133 = state["TextBox133"]
+		self.Image30 = state["Image30"]
+		self.TextBox119 = state["TextBox119"]
+		self.TextBox134 = state["TextBox134"]
+		self.TextBox120 = state["TextBox120"]
+		self.TextBox135 = state["TextBox135"]
+		self.TextBox121 = state["TextBox121"]
+		self.TextBox122 = state["TextBox122"]
+		self.TextBox123 = state["TextBox123"]
+		self.TextBox136 = state["TextBox136"]
+		self.TextBox124 = state["TextBox124"]
+		self.TextBox125 = state["TextBox125"]
+		self.TextBox126 = state["TextBox126"]
+		self.TextBox137 = state["TextBox137"]
+		self.TextBox127 = state["TextBox127"]
+		self.TextBox128 = state["TextBox128"]
+		self.TextBox151 = state["TextBox151"]
+		self.TextBox145 = state["TextBox145"]
+		self.TextBox146 = state["TextBox146"]
+		self.TextBox147 = state["TextBox147"]
+		self.TextBox152 = state["TextBox152"]
+		self.TextBox148 = state["TextBox148"]
+		self.TextBox149 = state["TextBox149"]
+		self.TextBox140 = state["TextBox140"]
+		self.TextBox141 = state["TextBox141"]
+		self.TextBox150 = state["TextBox150"]
+		self.TextBox142 = state["TextBox142"]
+		self.TextBox143 = state["TextBox143"]
+		self.TextBox144 = state["TextBox144"]
+		self.TextBox154 = state["TextBox154"]
+		self.Image36 = state["Image36"]
+		self.TextBox153 = state["TextBox153"]
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	def set_event(self, event):
+		self.event_data = event["event_data"]
+		self.event_alias = event["alias"]
+		callback_name = event["callback_name"]
+		comp = getattr(self, self.event_alias)
+		setattr(comp, callback_name, True)
+	@property
+	def Flex115(self):
+		self._getter_access_tracker["Flex115"] = {}
+		return self._Flex115
+	@Flex115.setter
+	def Flex115(self, new_state):
+		self._setter_access_tracker["Flex115"] = {}
+		global default_state
+		self._Flex115 = Flex(new_state, default_state["Flex115"])
+
+	@property
+	def Flex113(self):
+		self._getter_access_tracker["Flex113"] = {}
+		return self._Flex113
+	@Flex113.setter
+	def Flex113(self, new_state):
+		self._setter_access_tracker["Flex113"] = {}
+		global default_state
+		self._Flex113 = Flex(new_state, default_state["Flex113"])
+
+	@property
+	def Flex106(self):
+		self._getter_access_tracker["Flex106"] = {}
+		return self._Flex106
+	@Flex106.setter
+	def Flex106(self, new_state):
+		self._setter_access_tracker["Flex106"] = {}
+		global default_state
+		self._Flex106 = Flex(new_state, default_state["Flex106"])
+
+	@property
+	def Flex99(self):
+		self._getter_access_tracker["Flex99"] = {}
+		return self._Flex99
+	@Flex99.setter
+	def Flex99(self, new_state):
+		self._setter_access_tracker["Flex99"] = {}
+		global default_state
+		self._Flex99 = Flex(new_state, default_state["Flex99"])
+
+	@property
+	def Flex100(self):
+		self._getter_access_tracker["Flex100"] = {}
+		return self._Flex100
+	@Flex100.setter
+	def Flex100(self, new_state):
+		self._setter_access_tracker["Flex100"] = {}
+		global default_state
+		self._Flex100 = Flex(new_state, default_state["Flex100"])
+
+	@property
+	def Flex107(self):
+		self._getter_access_tracker["Flex107"] = {}
+		return self._Flex107
+	@Flex107.setter
+	def Flex107(self, new_state):
+		self._setter_access_tracker["Flex107"] = {}
+		global default_state
+		self._Flex107 = Flex(new_state, default_state["Flex107"])
+
+	@property
+	def Flex101(self):
+		self._getter_access_tracker["Flex101"] = {}
+		return self._Flex101
+	@Flex101.setter
+	def Flex101(self, new_state):
+		self._setter_access_tracker["Flex101"] = {}
+		global default_state
+		self._Flex101 = Flex(new_state, default_state["Flex101"])
+
+	@property
+	def Flex102(self):
+		self._getter_access_tracker["Flex102"] = {}
+		return self._Flex102
+	@Flex102.setter
+	def Flex102(self, new_state):
+		self._setter_access_tracker["Flex102"] = {}
+		global default_state
+		self._Flex102 = Flex(new_state, default_state["Flex102"])
+
+	@property
+	def Flex108(self):
+		self._getter_access_tracker["Flex108"] = {}
+		return self._Flex108
+	@Flex108.setter
+	def Flex108(self, new_state):
+		self._setter_access_tracker["Flex108"] = {}
+		global default_state
+		self._Flex108 = Flex(new_state, default_state["Flex108"])
+
+	@property
+	def Flex114(self):
+		self._getter_access_tracker["Flex114"] = {}
+		return self._Flex114
+	@Flex114.setter
+	def Flex114(self, new_state):
+		self._setter_access_tracker["Flex114"] = {}
+		global default_state
+		self._Flex114 = Flex(new_state, default_state["Flex114"])
+
+	@property
+	def Flex109(self):
+		self._getter_access_tracker["Flex109"] = {}
+		return self._Flex109
+	@Flex109.setter
+	def Flex109(self, new_state):
+		self._setter_access_tracker["Flex109"] = {}
+		global default_state
+		self._Flex109 = Flex(new_state, default_state["Flex109"])
+
+	@property
+	def Flex103(self):
+		self._getter_access_tracker["Flex103"] = {}
+		return self._Flex103
+	@Flex103.setter
+	def Flex103(self, new_state):
+		self._setter_access_tracker["Flex103"] = {}
+		global default_state
+		self._Flex103 = Flex(new_state, default_state["Flex103"])
+
+	@property
+	def Flex110(self):
+		self._getter_access_tracker["Flex110"] = {}
+		return self._Flex110
+	@Flex110.setter
+	def Flex110(self, new_state):
+		self._setter_access_tracker["Flex110"] = {}
+		global default_state
+		self._Flex110 = Flex(new_state, default_state["Flex110"])
+
+	@property
+	def Menu2(self):
+		self._getter_access_tracker["Menu2"] = {}
+		return self._Menu2
+	@Menu2.setter
+	def Menu2(self, new_state):
+		self._setter_access_tracker["Menu2"] = {}
+		global default_state
+		self._Menu2 = Menu(new_state, default_state["Menu2"])
+
+	@property
+	def Flex98(self):
+		self._getter_access_tracker["Flex98"] = {}
+		return self._Flex98
+	@Flex98.setter
+	def Flex98(self, new_state):
+		self._setter_access_tracker["Flex98"] = {}
+		global default_state
+		self._Flex98 = Flex(new_state, default_state["Flex98"])
+
+	@property
+	def Flex104(self):
+		self._getter_access_tracker["Flex104"] = {}
+		return self._Flex104
+	@Flex104.setter
+	def Flex104(self, new_state):
+		self._setter_access_tracker["Flex104"] = {}
+		global default_state
+		self._Flex104 = Flex(new_state, default_state["Flex104"])
+
+	@property
+	def Flex111(self):
+		self._getter_access_tracker["Flex111"] = {}
+		return self._Flex111
+	@Flex111.setter
+	def Flex111(self, new_state):
+		self._setter_access_tracker["Flex111"] = {}
+		global default_state
+		self._Flex111 = Flex(new_state, default_state["Flex111"])
+
+	@property
+	def Flex105(self):
+		self._getter_access_tracker["Flex105"] = {}
+		return self._Flex105
+	@Flex105.setter
+	def Flex105(self, new_state):
+		self._setter_access_tracker["Flex105"] = {}
+		global default_state
+		self._Flex105 = Flex(new_state, default_state["Flex105"])
+
+	@property
+	def Flex112(self):
+		self._getter_access_tracker["Flex112"] = {}
+		return self._Flex112
+	@Flex112.setter
+	def Flex112(self, new_state):
+		self._setter_access_tracker["Flex112"] = {}
+		global default_state
+		self._Flex112 = Flex(new_state, default_state["Flex112"])
+
+	@property
+	def Overlay2(self):
+		self._getter_access_tracker["Overlay2"] = {}
+		return self._Overlay2
+	@Overlay2.setter
+	def Overlay2(self, new_state):
+		self._setter_access_tracker["Overlay2"] = {}
+		global default_state
+		self._Overlay2 = Overlay(new_state, default_state["Overlay2"])
+
+	@property
+	def Flex712(self):
+		self._getter_access_tracker["Flex712"] = {}
+		return self._Flex712
+	@Flex712.setter
+	def Flex712(self, new_state):
+		self._setter_access_tracker["Flex712"] = {}
+		global default_state
+		self._Flex712 = Flex(new_state, default_state["Flex712"])
+
+	@property
+	def Flex710(self):
+		self._getter_access_tracker["Flex710"] = {}
+		return self._Flex710
+	@Flex710.setter
+	def Flex710(self, new_state):
+		self._setter_access_tracker["Flex710"] = {}
+		global default_state
+		self._Flex710 = Flex(new_state, default_state["Flex710"])
+
+	@property
+	def Flex722(self):
+		self._getter_access_tracker["Flex722"] = {}
+		return self._Flex722
+	@Flex722.setter
+	def Flex722(self, new_state):
+		self._setter_access_tracker["Flex722"] = {}
+		global default_state
+		self._Flex722 = Flex(new_state, default_state["Flex722"])
+
+	@property
+	def Flex760(self):
+		self._getter_access_tracker["Flex760"] = {}
+		return self._Flex760
+	@Flex760.setter
+	def Flex760(self, new_state):
+		self._setter_access_tracker["Flex760"] = {}
+		global default_state
+		self._Flex760 = Flex(new_state, default_state["Flex760"])
+
+	@property
+	def Flex759(self):
+		self._getter_access_tracker["Flex759"] = {}
+		return self._Flex759
+	@Flex759.setter
+	def Flex759(self, new_state):
+		self._setter_access_tracker["Flex759"] = {}
+		global default_state
+		self._Flex759 = Flex(new_state, default_state["Flex759"])
+
+	@property
+	def Flex756(self):
+		self._getter_access_tracker["Flex756"] = {}
+		return self._Flex756
+	@Flex756.setter
+	def Flex756(self, new_state):
+		self._setter_access_tracker["Flex756"] = {}
+		global default_state
+		self._Flex756 = Flex(new_state, default_state["Flex756"])
+
+	@property
+	def Flex751(self):
+		self._getter_access_tracker["Flex751"] = {}
+		return self._Flex751
+	@Flex751.setter
+	def Flex751(self, new_state):
+		self._setter_access_tracker["Flex751"] = {}
+		global default_state
+		self._Flex751 = Flex(new_state, default_state["Flex751"])
+
+	@property
+	def Flex752(self):
+		self._getter_access_tracker["Flex752"] = {}
+		return self._Flex752
+	@Flex752.setter
+	def Flex752(self, new_state):
+		self._setter_access_tracker["Flex752"] = {}
+		global default_state
+		self._Flex752 = Flex(new_state, default_state["Flex752"])
+
+	@property
+	def Flex757(self):
+		self._getter_access_tracker["Flex757"] = {}
+		return self._Flex757
+	@Flex757.setter
+	def Flex757(self, new_state):
+		self._setter_access_tracker["Flex757"] = {}
+		global default_state
+		self._Flex757 = Flex(new_state, default_state["Flex757"])
+
+	@property
+	def Flex753(self):
+		self._getter_access_tracker["Flex753"] = {}
+		return self._Flex753
+	@Flex753.setter
+	def Flex753(self, new_state):
+		self._setter_access_tracker["Flex753"] = {}
+		global default_state
+		self._Flex753 = Flex(new_state, default_state["Flex753"])
+
+	@property
+	def Flex754(self):
+		self._getter_access_tracker["Flex754"] = {}
+		return self._Flex754
+	@Flex754.setter
+	def Flex754(self, new_state):
+		self._setter_access_tracker["Flex754"] = {}
+		global default_state
+		self._Flex754 = Flex(new_state, default_state["Flex754"])
+
+	@property
+	def Flex755(self):
+		self._getter_access_tracker["Flex755"] = {}
+		return self._Flex755
+	@Flex755.setter
+	def Flex755(self, new_state):
+		self._setter_access_tracker["Flex755"] = {}
+		global default_state
+		self._Flex755 = Flex(new_state, default_state["Flex755"])
+
+	@property
+	def Flex758(self):
+		self._getter_access_tracker["Flex758"] = {}
+		return self._Flex758
+	@Flex758.setter
+	def Flex758(self, new_state):
+		self._setter_access_tracker["Flex758"] = {}
+		global default_state
+		self._Flex758 = Flex(new_state, default_state["Flex758"])
+
+	@property
+	def Flex711(self):
+		self._getter_access_tracker["Flex711"] = {}
+		return self._Flex711
+	@Flex711.setter
+	def Flex711(self, new_state):
+		self._setter_access_tracker["Flex711"] = {}
+		global default_state
+		self._Flex711 = Flex(new_state, default_state["Flex711"])
+
+	@property
+	def Flex738(self):
+		self._getter_access_tracker["Flex738"] = {}
+		return self._Flex738
+	@Flex738.setter
+	def Flex738(self, new_state):
+		self._setter_access_tracker["Flex738"] = {}
+		global default_state
+		self._Flex738 = Flex(new_state, default_state["Flex738"])
+
+	@property
+	def Flex736(self):
+		self._getter_access_tracker["Flex736"] = {}
+		return self._Flex736
+	@Flex736.setter
+	def Flex736(self, new_state):
+		self._setter_access_tracker["Flex736"] = {}
+		global default_state
+		self._Flex736 = Flex(new_state, default_state["Flex736"])
+
+	@property
+	def Flex737(self):
+		self._getter_access_tracker["Flex737"] = {}
+		return self._Flex737
+	@Flex737.setter
+	def Flex737(self, new_state):
+		self._setter_access_tracker["Flex737"] = {}
+		global default_state
+		self._Flex737 = Flex(new_state, default_state["Flex737"])
+
+	@property
+	def Flex741(self):
+		self._getter_access_tracker["Flex741"] = {}
+		return self._Flex741
+	@Flex741.setter
+	def Flex741(self, new_state):
+		self._setter_access_tracker["Flex741"] = {}
+		global default_state
+		self._Flex741 = Flex(new_state, default_state["Flex741"])
+
+	@property
+	def Flex739(self):
+		self._getter_access_tracker["Flex739"] = {}
+		return self._Flex739
+	@Flex739.setter
+	def Flex739(self, new_state):
+		self._setter_access_tracker["Flex739"] = {}
+		global default_state
+		self._Flex739 = Flex(new_state, default_state["Flex739"])
+
+	@property
+	def Flex740(self):
+		self._getter_access_tracker["Flex740"] = {}
+		return self._Flex740
+	@Flex740.setter
+	def Flex740(self, new_state):
+		self._setter_access_tracker["Flex740"] = {}
+		global default_state
+		self._Flex740 = Flex(new_state, default_state["Flex740"])
+
+	@property
+	def Flex744(self):
+		self._getter_access_tracker["Flex744"] = {}
+		return self._Flex744
+	@Flex744.setter
+	def Flex744(self, new_state):
+		self._setter_access_tracker["Flex744"] = {}
+		global default_state
+		self._Flex744 = Flex(new_state, default_state["Flex744"])
+
+	@property
+	def Flex742(self):
+		self._getter_access_tracker["Flex742"] = {}
+		return self._Flex742
+	@Flex742.setter
+	def Flex742(self, new_state):
+		self._setter_access_tracker["Flex742"] = {}
+		global default_state
+		self._Flex742 = Flex(new_state, default_state["Flex742"])
+
+	@property
+	def Flex743(self):
+		self._getter_access_tracker["Flex743"] = {}
+		return self._Flex743
+	@Flex743.setter
+	def Flex743(self, new_state):
+		self._setter_access_tracker["Flex743"] = {}
+		global default_state
+		self._Flex743 = Flex(new_state, default_state["Flex743"])
+
+	@property
+	def Flex747(self):
+		self._getter_access_tracker["Flex747"] = {}
+		return self._Flex747
+	@Flex747.setter
+	def Flex747(self, new_state):
+		self._setter_access_tracker["Flex747"] = {}
+		global default_state
+		self._Flex747 = Flex(new_state, default_state["Flex747"])
+
+	@property
+	def Flex745(self):
+		self._getter_access_tracker["Flex745"] = {}
+		return self._Flex745
+	@Flex745.setter
+	def Flex745(self, new_state):
+		self._setter_access_tracker["Flex745"] = {}
+		global default_state
+		self._Flex745 = Flex(new_state, default_state["Flex745"])
+
+	@property
+	def Flex746(self):
+		self._getter_access_tracker["Flex746"] = {}
+		return self._Flex746
+	@Flex746.setter
+	def Flex746(self, new_state):
+		self._setter_access_tracker["Flex746"] = {}
+		global default_state
+		self._Flex746 = Flex(new_state, default_state["Flex746"])
+
+	@property
+	def Flex136(self):
+		self._getter_access_tracker["Flex136"] = {}
+		return self._Flex136
+	@Flex136.setter
+	def Flex136(self, new_state):
+		self._setter_access_tracker["Flex136"] = {}
+		global default_state
+		self._Flex136 = Flex(new_state, default_state["Flex136"])
+
+	@property
+	def Flex133(self):
+		self._getter_access_tracker["Flex133"] = {}
+		return self._Flex133
+	@Flex133.setter
+	def Flex133(self, new_state):
+		self._setter_access_tracker["Flex133"] = {}
+		global default_state
+		self._Flex133 = Flex(new_state, default_state["Flex133"])
+
+	@property
+	def Flex129(self):
+		self._getter_access_tracker["Flex129"] = {}
+		return self._Flex129
+	@Flex129.setter
+	def Flex129(self, new_state):
+		self._setter_access_tracker["Flex129"] = {}
+		global default_state
+		self._Flex129 = Flex(new_state, default_state["Flex129"])
+
+	@property
+	def Flex121(self):
+		self._getter_access_tracker["Flex121"] = {}
+		return self._Flex121
+	@Flex121.setter
+	def Flex121(self, new_state):
+		self._setter_access_tracker["Flex121"] = {}
+		global default_state
+		self._Flex121 = Flex(new_state, default_state["Flex121"])
+
+	@property
+	def Flex134(self):
+		self._getter_access_tracker["Flex134"] = {}
+		return self._Flex134
+	@Flex134.setter
+	def Flex134(self, new_state):
+		self._setter_access_tracker["Flex134"] = {}
+		global default_state
+		self._Flex134 = Flex(new_state, default_state["Flex134"])
+
+	@property
+	def Flex130(self):
+		self._getter_access_tracker["Flex130"] = {}
+		return self._Flex130
+	@Flex130.setter
+	def Flex130(self, new_state):
+		self._setter_access_tracker["Flex130"] = {}
+		global default_state
+		self._Flex130 = Flex(new_state, default_state["Flex130"])
+
+	@property
+	def Flex122(self):
+		self._getter_access_tracker["Flex122"] = {}
+		return self._Flex122
+	@Flex122.setter
+	def Flex122(self, new_state):
+		self._setter_access_tracker["Flex122"] = {}
+		global default_state
+		self._Flex122 = Flex(new_state, default_state["Flex122"])
+
+	@property
+	def Flex135(self):
+		self._getter_access_tracker["Flex135"] = {}
+		return self._Flex135
+	@Flex135.setter
+	def Flex135(self, new_state):
+		self._setter_access_tracker["Flex135"] = {}
+		global default_state
+		self._Flex135 = Flex(new_state, default_state["Flex135"])
+
+	@property
+	def Flex131(self):
+		self._getter_access_tracker["Flex131"] = {}
+		return self._Flex131
+	@Flex131.setter
+	def Flex131(self, new_state):
+		self._setter_access_tracker["Flex131"] = {}
+		global default_state
+		self._Flex131 = Flex(new_state, default_state["Flex131"])
+
+	@property
+	def Flex123(self):
+		self._getter_access_tracker["Flex123"] = {}
+		return self._Flex123
+	@Flex123.setter
+	def Flex123(self, new_state):
+		self._setter_access_tracker["Flex123"] = {}
+		global default_state
+		self._Flex123 = Flex(new_state, default_state["Flex123"])
+
+	@property
+	def Flex124(self):
+		self._getter_access_tracker["Flex124"] = {}
+		return self._Flex124
+	@Flex124.setter
+	def Flex124(self, new_state):
+		self._setter_access_tracker["Flex124"] = {}
+		global default_state
+		self._Flex124 = Flex(new_state, default_state["Flex124"])
+
+	@property
+	def Flex116(self):
+		self._getter_access_tracker["Flex116"] = {}
+		return self._Flex116
+	@Flex116.setter
+	def Flex116(self, new_state):
+		self._setter_access_tracker["Flex116"] = {}
+		global default_state
+		self._Flex116 = Flex(new_state, default_state["Flex116"])
+
+	@property
+	def Flex132(self):
+		self._getter_access_tracker["Flex132"] = {}
+		return self._Flex132
+	@Flex132.setter
+	def Flex132(self, new_state):
+		self._setter_access_tracker["Flex132"] = {}
+		global default_state
+		self._Flex132 = Flex(new_state, default_state["Flex132"])
+
+	@property
+	def Flex125(self):
+		self._getter_access_tracker["Flex125"] = {}
+		return self._Flex125
+	@Flex125.setter
+	def Flex125(self, new_state):
+		self._setter_access_tracker["Flex125"] = {}
+		global default_state
+		self._Flex125 = Flex(new_state, default_state["Flex125"])
+
+	@property
+	def Flex117(self):
+		self._getter_access_tracker["Flex117"] = {}
+		return self._Flex117
+	@Flex117.setter
+	def Flex117(self, new_state):
+		self._setter_access_tracker["Flex117"] = {}
+		global default_state
+		self._Flex117 = Flex(new_state, default_state["Flex117"])
+
+	@property
+	def Flex126(self):
+		self._getter_access_tracker["Flex126"] = {}
+		return self._Flex126
+	@Flex126.setter
+	def Flex126(self, new_state):
+		self._setter_access_tracker["Flex126"] = {}
+		global default_state
+		self._Flex126 = Flex(new_state, default_state["Flex126"])
+
+	@property
+	def Flex118(self):
+		self._getter_access_tracker["Flex118"] = {}
+		return self._Flex118
+	@Flex118.setter
+	def Flex118(self, new_state):
+		self._setter_access_tracker["Flex118"] = {}
+		global default_state
+		self._Flex118 = Flex(new_state, default_state["Flex118"])
+
+	@property
+	def Flex127(self):
+		self._getter_access_tracker["Flex127"] = {}
+		return self._Flex127
+	@Flex127.setter
+	def Flex127(self, new_state):
+		self._setter_access_tracker["Flex127"] = {}
+		global default_state
+		self._Flex127 = Flex(new_state, default_state["Flex127"])
+
+	@property
+	def Flex119(self):
+		self._getter_access_tracker["Flex119"] = {}
+		return self._Flex119
+	@Flex119.setter
+	def Flex119(self, new_state):
+		self._setter_access_tracker["Flex119"] = {}
+		global default_state
+		self._Flex119 = Flex(new_state, default_state["Flex119"])
+
+	@property
+	def Flex128(self):
+		self._getter_access_tracker["Flex128"] = {}
+		return self._Flex128
+	@Flex128.setter
+	def Flex128(self, new_state):
+		self._setter_access_tracker["Flex128"] = {}
+		global default_state
+		self._Flex128 = Flex(new_state, default_state["Flex128"])
+
+	@property
+	def Flex120(self):
+		self._getter_access_tracker["Flex120"] = {}
+		return self._Flex120
+	@Flex120.setter
+	def Flex120(self, new_state):
+		self._setter_access_tracker["Flex120"] = {}
+		global default_state
+		self._Flex120 = Flex(new_state, default_state["Flex120"])
+
+	@property
+	def Flex152(self):
+		self._getter_access_tracker["Flex152"] = {}
+		return self._Flex152
+	@Flex152.setter
+	def Flex152(self, new_state):
+		self._setter_access_tracker["Flex152"] = {}
+		global default_state
+		self._Flex152 = Flex(new_state, default_state["Flex152"])
+
+	@property
+	def Flex150(self):
+		self._getter_access_tracker["Flex150"] = {}
+		return self._Flex150
+	@Flex150.setter
+	def Flex150(self, new_state):
+		self._setter_access_tracker["Flex150"] = {}
+		global default_state
+		self._Flex150 = Flex(new_state, default_state["Flex150"])
+
+	@property
+	def Flex147(self):
+		self._getter_access_tracker["Flex147"] = {}
+		return self._Flex147
+	@Flex147.setter
+	def Flex147(self, new_state):
+		self._setter_access_tracker["Flex147"] = {}
+		global default_state
+		self._Flex147 = Flex(new_state, default_state["Flex147"])
+
+	@property
+	def Flex143(self):
+		self._getter_access_tracker["Flex143"] = {}
+		return self._Flex143
+	@Flex143.setter
+	def Flex143(self, new_state):
+		self._setter_access_tracker["Flex143"] = {}
+		global default_state
+		self._Flex143 = Flex(new_state, default_state["Flex143"])
+
+	@property
+	def Flex139(self):
+		self._getter_access_tracker["Flex139"] = {}
+		return self._Flex139
+	@Flex139.setter
+	def Flex139(self, new_state):
+		self._setter_access_tracker["Flex139"] = {}
+		global default_state
+		self._Flex139 = Flex(new_state, default_state["Flex139"])
+
+	@property
+	def Flex144(self):
+		self._getter_access_tracker["Flex144"] = {}
+		return self._Flex144
+	@Flex144.setter
+	def Flex144(self, new_state):
+		self._setter_access_tracker["Flex144"] = {}
+		global default_state
+		self._Flex144 = Flex(new_state, default_state["Flex144"])
+
+	@property
+	def Flex140(self):
+		self._getter_access_tracker["Flex140"] = {}
+		return self._Flex140
+	@Flex140.setter
+	def Flex140(self, new_state):
+		self._setter_access_tracker["Flex140"] = {}
+		global default_state
+		self._Flex140 = Flex(new_state, default_state["Flex140"])
+
+	@property
+	def Flex148(self):
+		self._getter_access_tracker["Flex148"] = {}
+		return self._Flex148
+	@Flex148.setter
+	def Flex148(self, new_state):
+		self._setter_access_tracker["Flex148"] = {}
+		global default_state
+		self._Flex148 = Flex(new_state, default_state["Flex148"])
+
+	@property
+	def Flex145(self):
+		self._getter_access_tracker["Flex145"] = {}
+		return self._Flex145
+	@Flex145.setter
+	def Flex145(self, new_state):
+		self._setter_access_tracker["Flex145"] = {}
+		global default_state
+		self._Flex145 = Flex(new_state, default_state["Flex145"])
+
+	@property
+	def Flex141(self):
+		self._getter_access_tracker["Flex141"] = {}
+		return self._Flex141
+	@Flex141.setter
+	def Flex141(self, new_state):
+		self._setter_access_tracker["Flex141"] = {}
+		global default_state
+		self._Flex141 = Flex(new_state, default_state["Flex141"])
+
+	@property
+	def Flex137(self):
+		self._getter_access_tracker["Flex137"] = {}
+		return self._Flex137
+	@Flex137.setter
+	def Flex137(self, new_state):
+		self._setter_access_tracker["Flex137"] = {}
+		global default_state
+		self._Flex137 = Flex(new_state, default_state["Flex137"])
+
+	@property
+	def Flex146(self):
+		self._getter_access_tracker["Flex146"] = {}
+		return self._Flex146
+	@Flex146.setter
+	def Flex146(self, new_state):
+		self._setter_access_tracker["Flex146"] = {}
+		global default_state
+		self._Flex146 = Flex(new_state, default_state["Flex146"])
+
+	@property
+	def Flex142(self):
+		self._getter_access_tracker["Flex142"] = {}
+		return self._Flex142
+	@Flex142.setter
+	def Flex142(self, new_state):
+		self._setter_access_tracker["Flex142"] = {}
+		global default_state
+		self._Flex142 = Flex(new_state, default_state["Flex142"])
+
+	@property
+	def Flex138(self):
+		self._getter_access_tracker["Flex138"] = {}
+		return self._Flex138
+	@Flex138.setter
+	def Flex138(self, new_state):
+		self._setter_access_tracker["Flex138"] = {}
+		global default_state
+		self._Flex138 = Flex(new_state, default_state["Flex138"])
+
+	@property
+	def Flex151(self):
+		self._getter_access_tracker["Flex151"] = {}
+		return self._Flex151
+	@Flex151.setter
+	def Flex151(self, new_state):
+		self._setter_access_tracker["Flex151"] = {}
+		global default_state
+		self._Flex151 = Flex(new_state, default_state["Flex151"])
+
+	@property
+	def Flex149(self):
+		self._getter_access_tracker["Flex149"] = {}
+		return self._Flex149
+	@Flex149.setter
+	def Flex149(self, new_state):
+		self._setter_access_tracker["Flex149"] = {}
+		global default_state
+		self._Flex149 = Flex(new_state, default_state["Flex149"])
+
+	@property
+	def Image29(self):
+		self._getter_access_tracker["Image29"] = {}
+		return self._Image29
+	@Image29.setter
+	def Image29(self, new_state):
+		self._setter_access_tracker["Image29"] = {}
+		global default_state
+		self._Image29 = Image(new_state, default_state["Image29"])
+
+	@property
+	def Image26(self):
+		self._getter_access_tracker["Image26"] = {}
+		return self._Image26
+	@Image26.setter
+	def Image26(self, new_state):
+		self._setter_access_tracker["Image26"] = {}
+		global default_state
+		self._Image26 = Image(new_state, default_state["Image26"])
+
+	@property
+	def TextBox107(self):
+		self._getter_access_tracker["TextBox107"] = {}
+		return self._TextBox107
+	@TextBox107.setter
+	def TextBox107(self, new_state):
+		self._setter_access_tracker["TextBox107"] = {}
+		global default_state
+		self._TextBox107 = TextBox(new_state, default_state["TextBox107"])
+
+	@property
+	def TextBox108(self):
+		self._getter_access_tracker["TextBox108"] = {}
+		return self._TextBox108
+	@TextBox108.setter
+	def TextBox108(self, new_state):
+		self._setter_access_tracker["TextBox108"] = {}
+		global default_state
+		self._TextBox108 = TextBox(new_state, default_state["TextBox108"])
+
+	@property
+	def TextBox109(self):
+		self._getter_access_tracker["TextBox109"] = {}
+		return self._TextBox109
+	@TextBox109.setter
+	def TextBox109(self, new_state):
+		self._setter_access_tracker["TextBox109"] = {}
+		global default_state
+		self._TextBox109 = TextBox(new_state, default_state["TextBox109"])
+
+	@property
+	def TextBox110(self):
+		self._getter_access_tracker["TextBox110"] = {}
+		return self._TextBox110
+	@TextBox110.setter
+	def TextBox110(self, new_state):
+		self._setter_access_tracker["TextBox110"] = {}
+		global default_state
+		self._TextBox110 = TextBox(new_state, default_state["TextBox110"])
+
+	@property
+	def TextBox111(self):
+		self._getter_access_tracker["TextBox111"] = {}
+		return self._TextBox111
+	@TextBox111.setter
+	def TextBox111(self, new_state):
+		self._setter_access_tracker["TextBox111"] = {}
+		global default_state
+		self._TextBox111 = TextBox(new_state, default_state["TextBox111"])
+
+	@property
+	def TextBox112(self):
+		self._getter_access_tracker["TextBox112"] = {}
+		return self._TextBox112
+	@TextBox112.setter
+	def TextBox112(self, new_state):
+		self._setter_access_tracker["TextBox112"] = {}
+		global default_state
+		self._TextBox112 = TextBox(new_state, default_state["TextBox112"])
+
+	@property
+	def TextBox113(self):
+		self._getter_access_tracker["TextBox113"] = {}
+		return self._TextBox113
+	@TextBox113.setter
+	def TextBox113(self, new_state):
+		self._setter_access_tracker["TextBox113"] = {}
+		global default_state
+		self._TextBox113 = TextBox(new_state, default_state["TextBox113"])
+
+	@property
+	def TextBox116(self):
+		self._getter_access_tracker["TextBox116"] = {}
+		return self._TextBox116
+	@TextBox116.setter
+	def TextBox116(self, new_state):
+		self._setter_access_tracker["TextBox116"] = {}
+		global default_state
+		self._TextBox116 = TextBox(new_state, default_state["TextBox116"])
+
+	@property
+	def TextBox117(self):
+		self._getter_access_tracker["TextBox117"] = {}
+		return self._TextBox117
+	@TextBox117.setter
+	def TextBox117(self, new_state):
+		self._setter_access_tracker["TextBox117"] = {}
+		global default_state
+		self._TextBox117 = TextBox(new_state, default_state["TextBox117"])
+
+	@property
+	def TextBox114(self):
+		self._getter_access_tracker["TextBox114"] = {}
+		return self._TextBox114
+	@TextBox114.setter
+	def TextBox114(self, new_state):
+		self._setter_access_tracker["TextBox114"] = {}
+		global default_state
+		self._TextBox114 = TextBox(new_state, default_state["TextBox114"])
+
+	@property
+	def TextBox115(self):
+		self._getter_access_tracker["TextBox115"] = {}
+		return self._TextBox115
+	@TextBox115.setter
+	def TextBox115(self, new_state):
+		self._setter_access_tracker["TextBox115"] = {}
+		global default_state
+		self._TextBox115 = TextBox(new_state, default_state["TextBox115"])
+
+	@property
+	def TextBox103(self):
+		self._getter_access_tracker["TextBox103"] = {}
+		return self._TextBox103
+	@TextBox103.setter
+	def TextBox103(self, new_state):
+		self._setter_access_tracker["TextBox103"] = {}
+		global default_state
+		self._TextBox103 = TextBox(new_state, default_state["TextBox103"])
+
+	@property
+	def TextBox104(self):
+		self._getter_access_tracker["TextBox104"] = {}
+		return self._TextBox104
+	@TextBox104.setter
+	def TextBox104(self, new_state):
+		self._setter_access_tracker["TextBox104"] = {}
+		global default_state
+		self._TextBox104 = TextBox(new_state, default_state["TextBox104"])
+
+	@property
+	def TextBox105(self):
+		self._getter_access_tracker["TextBox105"] = {}
+		return self._TextBox105
+	@TextBox105.setter
+	def TextBox105(self, new_state):
+		self._setter_access_tracker["TextBox105"] = {}
+		global default_state
+		self._TextBox105 = TextBox(new_state, default_state["TextBox105"])
+
+	@property
+	def TextBox106(self):
+		self._getter_access_tracker["TextBox106"] = {}
+		return self._TextBox106
+	@TextBox106.setter
+	def TextBox106(self, new_state):
+		self._setter_access_tracker["TextBox106"] = {}
+		global default_state
+		self._TextBox106 = TextBox(new_state, default_state["TextBox106"])
+
+	@property
+	def Button7(self):
+		self._getter_access_tracker["Button7"] = {}
+		return self._Button7
+	@Button7.setter
+	def Button7(self, new_state):
+		self._setter_access_tracker["Button7"] = {}
+		global default_state
+		self._Button7 = Button(new_state, default_state["Button7"])
+
+	@property
+	def Image27(self):
+		self._getter_access_tracker["Image27"] = {}
+		return self._Image27
+	@Image27.setter
+	def Image27(self, new_state):
+		self._setter_access_tracker["Image27"] = {}
+		global default_state
+		self._Image27 = Image(new_state, default_state["Image27"])
+
+	@property
+	def TextBox118(self):
+		self._getter_access_tracker["TextBox118"] = {}
+		return self._TextBox118
+	@TextBox118.setter
+	def TextBox118(self, new_state):
+		self._setter_access_tracker["TextBox118"] = {}
+		global default_state
+		self._TextBox118 = TextBox(new_state, default_state["TextBox118"])
+
+	@property
+	def Image28(self):
+		self._getter_access_tracker["Image28"] = {}
+		return self._Image28
+	@Image28.setter
+	def Image28(self, new_state):
+		self._setter_access_tracker["Image28"] = {}
+		global default_state
+		self._Image28 = Image(new_state, default_state["Image28"])
+
+	@property
+	def Image314(self):
+		self._getter_access_tracker["Image314"] = {}
+		return self._Image314
+	@Image314.setter
+	def Image314(self, new_state):
+		self._setter_access_tracker["Image314"] = {}
+		global default_state
+		self._Image314 = Image(new_state, default_state["Image314"])
+
+	@property
+	def Image313(self):
+		self._getter_access_tracker["Image313"] = {}
+		return self._Image313
+	@Image313.setter
+	def Image313(self, new_state):
+		self._setter_access_tracker["Image313"] = {}
+		global default_state
+		self._Image313 = Image(new_state, default_state["Image313"])
+
+	@property
+	def TextBox493(self):
+		self._getter_access_tracker["TextBox493"] = {}
+		return self._TextBox493
+	@TextBox493.setter
+	def TextBox493(self, new_state):
+		self._setter_access_tracker["TextBox493"] = {}
+		global default_state
+		self._TextBox493 = TextBox(new_state, default_state["TextBox493"])
+
+	@property
+	def Image310(self):
+		self._getter_access_tracker["Image310"] = {}
+		return self._Image310
+	@Image310.setter
+	def Image310(self, new_state):
+		self._setter_access_tracker["Image310"] = {}
+		global default_state
+		self._Image310 = Image(new_state, default_state["Image310"])
+
+	@property
+	def Image311(self):
+		self._getter_access_tracker["Image311"] = {}
+		return self._Image311
+	@Image311.setter
+	def Image311(self, new_state):
+		self._setter_access_tracker["Image311"] = {}
+		global default_state
+		self._Image311 = Image(new_state, default_state["Image311"])
+
+	@property
+	def Image312(self):
+		self._getter_access_tracker["Image312"] = {}
+		return self._Image312
+	@Image312.setter
+	def Image312(self, new_state):
+		self._setter_access_tracker["Image312"] = {}
+		global default_state
+		self._Image312 = Image(new_state, default_state["Image312"])
+
+	@property
+	def Button229(self):
+		self._getter_access_tracker["Button229"] = {}
+		return self._Button229
+	@Button229.setter
+	def Button229(self, new_state):
+		self._setter_access_tracker["Button229"] = {}
+		global default_state
+		self._Button229 = Button(new_state, default_state["Button229"])
+
+	@property
+	def Button230(self):
+		self._getter_access_tracker["Button230"] = {}
+		return self._Button230
+	@Button230.setter
+	def Button230(self, new_state):
+		self._setter_access_tracker["Button230"] = {}
+		global default_state
+		self._Button230 = Button(new_state, default_state["Button230"])
+
+	@property
+	def Button231(self):
+		self._getter_access_tracker["Button231"] = {}
+		return self._Button231
+	@Button231.setter
+	def Button231(self, new_state):
+		self._setter_access_tracker["Button231"] = {}
+		global default_state
+		self._Button231 = Button(new_state, default_state["Button231"])
+
+	@property
+	def TextBox494(self):
+		self._getter_access_tracker["TextBox494"] = {}
+		return self._TextBox494
+	@TextBox494.setter
+	def TextBox494(self, new_state):
+		self._setter_access_tracker["TextBox494"] = {}
+		global default_state
+		self._TextBox494 = TextBox(new_state, default_state["TextBox494"])
+
+	@property
+	def TextBox495(self):
+		self._getter_access_tracker["TextBox495"] = {}
+		return self._TextBox495
+	@TextBox495.setter
+	def TextBox495(self, new_state):
+		self._setter_access_tracker["TextBox495"] = {}
+		global default_state
+		self._TextBox495 = TextBox(new_state, default_state["TextBox495"])
+
+	@property
+	def Button228(self):
+		self._getter_access_tracker["Button228"] = {}
+		return self._Button228
+	@Button228.setter
+	def Button228(self, new_state):
+		self._setter_access_tracker["Button228"] = {}
+		global default_state
+		self._Button228 = Button(new_state, default_state["Button228"])
+
+	@property
+	def TextBox482(self):
+		self._getter_access_tracker["TextBox482"] = {}
+		return self._TextBox482
+	@TextBox482.setter
+	def TextBox482(self, new_state):
+		self._setter_access_tracker["TextBox482"] = {}
+		global default_state
+		self._TextBox482 = TextBox(new_state, default_state["TextBox482"])
+
+	@property
+	def Upload2(self):
+		self._getter_access_tracker["Upload2"] = {}
+		return self._Upload2
+	@Upload2.setter
+	def Upload2(self, new_state):
+		self._setter_access_tracker["Upload2"] = {}
+		global default_state
+		self._Upload2 = Upload(new_state, default_state["Upload2"])
+
+	@property
+	def TextBox483(self):
+		self._getter_access_tracker["TextBox483"] = {}
+		return self._TextBox483
+	@TextBox483.setter
+	def TextBox483(self, new_state):
+		self._setter_access_tracker["TextBox483"] = {}
+		global default_state
+		self._TextBox483 = TextBox(new_state, default_state["TextBox483"])
+
+	@property
+	def Upload1(self):
+		self._getter_access_tracker["Upload1"] = {}
+		return self._Upload1
+	@Upload1.setter
+	def Upload1(self, new_state):
+		self._setter_access_tracker["Upload1"] = {}
+		global default_state
+		self._Upload1 = Upload(new_state, default_state["Upload1"])
+
+	@property
+	def TextBox484(self):
+		self._getter_access_tracker["TextBox484"] = {}
+		return self._TextBox484
+	@TextBox484.setter
+	def TextBox484(self, new_state):
+		self._setter_access_tracker["TextBox484"] = {}
+		global default_state
+		self._TextBox484 = TextBox(new_state, default_state["TextBox484"])
+
+	@property
+	def Input11(self):
+		self._getter_access_tracker["Input11"] = {}
+		return self._Input11
+	@Input11.setter
+	def Input11(self, new_state):
+		self._setter_access_tracker["Input11"] = {}
+		global default_state
+		self._Input11 = Input(new_state, default_state["Input11"])
+
+	@property
+	def TextBox492(self):
+		self._getter_access_tracker["TextBox492"] = {}
+		return self._TextBox492
+	@TextBox492.setter
+	def TextBox492(self, new_state):
+		self._setter_access_tracker["TextBox492"] = {}
+		global default_state
+		self._TextBox492 = TextBox(new_state, default_state["TextBox492"])
+
+	@property
+	def Input12(self):
+		self._getter_access_tracker["Input12"] = {}
+		return self._Input12
+	@Input12.setter
+	def Input12(self, new_state):
+		self._setter_access_tracker["Input12"] = {}
+		global default_state
+		self._Input12 = Input(new_state, default_state["Input12"])
+
+	@property
+	def TextBox485(self):
+		self._getter_access_tracker["TextBox485"] = {}
+		return self._TextBox485
+	@TextBox485.setter
+	def TextBox485(self, new_state):
+		self._setter_access_tracker["TextBox485"] = {}
+		global default_state
+		self._TextBox485 = TextBox(new_state, default_state["TextBox485"])
+
+	@property
+	def TextBox486(self):
+		self._getter_access_tracker["TextBox486"] = {}
+		return self._TextBox486
+	@TextBox486.setter
+	def TextBox486(self, new_state):
+		self._setter_access_tracker["TextBox486"] = {}
+		global default_state
+		self._TextBox486 = TextBox(new_state, default_state["TextBox486"])
+
+	@property
+	def Input13(self):
+		self._getter_access_tracker["Input13"] = {}
+		return self._Input13
+	@Input13.setter
+	def Input13(self, new_state):
+		self._setter_access_tracker["Input13"] = {}
+		global default_state
+		self._Input13 = Input(new_state, default_state["Input13"])
+
+	@property
+	def Input14(self):
+		self._getter_access_tracker["Input14"] = {}
+		return self._Input14
+	@Input14.setter
+	def Input14(self, new_state):
+		self._setter_access_tracker["Input14"] = {}
+		global default_state
+		self._Input14 = Input(new_state, default_state["Input14"])
+
+	@property
+	def TextBox487(self):
+		self._getter_access_tracker["TextBox487"] = {}
+		return self._TextBox487
+	@TextBox487.setter
+	def TextBox487(self, new_state):
+		self._setter_access_tracker["TextBox487"] = {}
+		global default_state
+		self._TextBox487 = TextBox(new_state, default_state["TextBox487"])
+
+	@property
+	def TextBox488(self):
+		self._getter_access_tracker["TextBox488"] = {}
+		return self._TextBox488
+	@TextBox488.setter
+	def TextBox488(self, new_state):
+		self._setter_access_tracker["TextBox488"] = {}
+		global default_state
+		self._TextBox488 = TextBox(new_state, default_state["TextBox488"])
+
+	@property
+	def Input15(self):
+		self._getter_access_tracker["Input15"] = {}
+		return self._Input15
+	@Input15.setter
+	def Input15(self, new_state):
+		self._setter_access_tracker["Input15"] = {}
+		global default_state
+		self._Input15 = Input(new_state, default_state["Input15"])
+
+	@property
+	def Input16(self):
+		self._getter_access_tracker["Input16"] = {}
+		return self._Input16
+	@Input16.setter
+	def Input16(self, new_state):
+		self._setter_access_tracker["Input16"] = {}
+		global default_state
+		self._Input16 = Input(new_state, default_state["Input16"])
+
+	@property
+	def TextBox489(self):
+		self._getter_access_tracker["TextBox489"] = {}
+		return self._TextBox489
+	@TextBox489.setter
+	def TextBox489(self, new_state):
+		self._setter_access_tracker["TextBox489"] = {}
+		global default_state
+		self._TextBox489 = TextBox(new_state, default_state["TextBox489"])
+
+	@property
+	def Button8(self):
+		self._getter_access_tracker["Button8"] = {}
+		return self._Button8
+	@Button8.setter
+	def Button8(self, new_state):
+		self._setter_access_tracker["Button8"] = {}
+		global default_state
+		self._Button8 = Button(new_state, default_state["Button8"])
+
+	@property
+	def TextBox138(self):
+		self._getter_access_tracker["TextBox138"] = {}
+		return self._TextBox138
+	@TextBox138.setter
+	def TextBox138(self, new_state):
+		self._setter_access_tracker["TextBox138"] = {}
+		global default_state
+		self._TextBox138 = TextBox(new_state, default_state["TextBox138"])
+
+	@property
+	def TextBox129(self):
+		self._getter_access_tracker["TextBox129"] = {}
+		return self._TextBox129
+	@TextBox129.setter
+	def TextBox129(self, new_state):
+		self._setter_access_tracker["TextBox129"] = {}
+		global default_state
+		self._TextBox129 = TextBox(new_state, default_state["TextBox129"])
+
+	@property
+	def TextBox130(self):
+		self._getter_access_tracker["TextBox130"] = {}
+		return self._TextBox130
+	@TextBox130.setter
+	def TextBox130(self, new_state):
+		self._setter_access_tracker["TextBox130"] = {}
+		global default_state
+		self._TextBox130 = TextBox(new_state, default_state["TextBox130"])
+
+	@property
+	def TextBox139(self):
+		self._getter_access_tracker["TextBox139"] = {}
+		return self._TextBox139
+	@TextBox139.setter
+	def TextBox139(self, new_state):
+		self._setter_access_tracker["TextBox139"] = {}
+		global default_state
+		self._TextBox139 = TextBox(new_state, default_state["TextBox139"])
+
+	@property
+	def TextBox131(self):
+		self._getter_access_tracker["TextBox131"] = {}
+		return self._TextBox131
+	@TextBox131.setter
+	def TextBox131(self, new_state):
+		self._setter_access_tracker["TextBox131"] = {}
+		global default_state
+		self._TextBox131 = TextBox(new_state, default_state["TextBox131"])
+
+	@property
+	def TextBox132(self):
+		self._getter_access_tracker["TextBox132"] = {}
+		return self._TextBox132
+	@TextBox132.setter
+	def TextBox132(self, new_state):
+		self._setter_access_tracker["TextBox132"] = {}
+		global default_state
+		self._TextBox132 = TextBox(new_state, default_state["TextBox132"])
+
+	@property
+	def Image31(self):
+		self._getter_access_tracker["Image31"] = {}
+		return self._Image31
+	@Image31.setter
+	def Image31(self, new_state):
+		self._setter_access_tracker["Image31"] = {}
+		global default_state
+		self._Image31 = Image(new_state, default_state["Image31"])
+
+	@property
+	def Image32(self):
+		self._getter_access_tracker["Image32"] = {}
+		return self._Image32
+	@Image32.setter
+	def Image32(self, new_state):
+		self._setter_access_tracker["Image32"] = {}
+		global default_state
+		self._Image32 = Image(new_state, default_state["Image32"])
+
+	@property
+	def Image33(self):
+		self._getter_access_tracker["Image33"] = {}
+		return self._Image33
+	@Image33.setter
+	def Image33(self, new_state):
+		self._setter_access_tracker["Image33"] = {}
+		global default_state
+		self._Image33 = Image(new_state, default_state["Image33"])
+
+	@property
+	def Image34(self):
+		self._getter_access_tracker["Image34"] = {}
+		return self._Image34
+	@Image34.setter
+	def Image34(self, new_state):
+		self._setter_access_tracker["Image34"] = {}
+		global default_state
+		self._Image34 = Image(new_state, default_state["Image34"])
+
+	@property
+	def Image35(self):
+		self._getter_access_tracker["Image35"] = {}
+		return self._Image35
+	@Image35.setter
+	def Image35(self, new_state):
+		self._setter_access_tracker["Image35"] = {}
+		global default_state
+		self._Image35 = Image(new_state, default_state["Image35"])
+
+	@property
+	def TextBox133(self):
+		self._getter_access_tracker["TextBox133"] = {}
+		return self._TextBox133
+	@TextBox133.setter
+	def TextBox133(self, new_state):
+		self._setter_access_tracker["TextBox133"] = {}
+		global default_state
+		self._TextBox133 = TextBox(new_state, default_state["TextBox133"])
+
+	@property
+	def Image30(self):
+		self._getter_access_tracker["Image30"] = {}
+		return self._Image30
+	@Image30.setter
+	def Image30(self, new_state):
+		self._setter_access_tracker["Image30"] = {}
+		global default_state
+		self._Image30 = Image(new_state, default_state["Image30"])
+
+	@property
+	def TextBox119(self):
+		self._getter_access_tracker["TextBox119"] = {}
+		return self._TextBox119
+	@TextBox119.setter
+	def TextBox119(self, new_state):
+		self._setter_access_tracker["TextBox119"] = {}
+		global default_state
+		self._TextBox119 = TextBox(new_state, default_state["TextBox119"])
+
+	@property
+	def TextBox134(self):
+		self._getter_access_tracker["TextBox134"] = {}
+		return self._TextBox134
+	@TextBox134.setter
+	def TextBox134(self, new_state):
+		self._setter_access_tracker["TextBox134"] = {}
+		global default_state
+		self._TextBox134 = TextBox(new_state, default_state["TextBox134"])
+
+	@property
+	def TextBox120(self):
+		self._getter_access_tracker["TextBox120"] = {}
+		return self._TextBox120
+	@TextBox120.setter
+	def TextBox120(self, new_state):
+		self._setter_access_tracker["TextBox120"] = {}
+		global default_state
+		self._TextBox120 = TextBox(new_state, default_state["TextBox120"])
+
+	@property
+	def TextBox135(self):
+		self._getter_access_tracker["TextBox135"] = {}
+		return self._TextBox135
+	@TextBox135.setter
+	def TextBox135(self, new_state):
+		self._setter_access_tracker["TextBox135"] = {}
+		global default_state
+		self._TextBox135 = TextBox(new_state, default_state["TextBox135"])
+
+	@property
+	def TextBox121(self):
+		self._getter_access_tracker["TextBox121"] = {}
+		return self._TextBox121
+	@TextBox121.setter
+	def TextBox121(self, new_state):
+		self._setter_access_tracker["TextBox121"] = {}
+		global default_state
+		self._TextBox121 = TextBox(new_state, default_state["TextBox121"])
+
+	@property
+	def TextBox122(self):
+		self._getter_access_tracker["TextBox122"] = {}
+		return self._TextBox122
+	@TextBox122.setter
+	def TextBox122(self, new_state):
+		self._setter_access_tracker["TextBox122"] = {}
+		global default_state
+		self._TextBox122 = TextBox(new_state, default_state["TextBox122"])
+
+	@property
+	def TextBox123(self):
+		self._getter_access_tracker["TextBox123"] = {}
+		return self._TextBox123
+	@TextBox123.setter
+	def TextBox123(self, new_state):
+		self._setter_access_tracker["TextBox123"] = {}
+		global default_state
+		self._TextBox123 = TextBox(new_state, default_state["TextBox123"])
+
+	@property
+	def TextBox136(self):
+		self._getter_access_tracker["TextBox136"] = {}
+		return self._TextBox136
+	@TextBox136.setter
+	def TextBox136(self, new_state):
+		self._setter_access_tracker["TextBox136"] = {}
+		global default_state
+		self._TextBox136 = TextBox(new_state, default_state["TextBox136"])
+
+	@property
+	def TextBox124(self):
+		self._getter_access_tracker["TextBox124"] = {}
+		return self._TextBox124
+	@TextBox124.setter
+	def TextBox124(self, new_state):
+		self._setter_access_tracker["TextBox124"] = {}
+		global default_state
+		self._TextBox124 = TextBox(new_state, default_state["TextBox124"])
+
+	@property
+	def TextBox125(self):
+		self._getter_access_tracker["TextBox125"] = {}
+		return self._TextBox125
+	@TextBox125.setter
+	def TextBox125(self, new_state):
+		self._setter_access_tracker["TextBox125"] = {}
+		global default_state
+		self._TextBox125 = TextBox(new_state, default_state["TextBox125"])
+
+	@property
+	def TextBox126(self):
+		self._getter_access_tracker["TextBox126"] = {}
+		return self._TextBox126
+	@TextBox126.setter
+	def TextBox126(self, new_state):
+		self._setter_access_tracker["TextBox126"] = {}
+		global default_state
+		self._TextBox126 = TextBox(new_state, default_state["TextBox126"])
+
+	@property
+	def TextBox137(self):
+		self._getter_access_tracker["TextBox137"] = {}
+		return self._TextBox137
+	@TextBox137.setter
+	def TextBox137(self, new_state):
+		self._setter_access_tracker["TextBox137"] = {}
+		global default_state
+		self._TextBox137 = TextBox(new_state, default_state["TextBox137"])
+
+	@property
+	def TextBox127(self):
+		self._getter_access_tracker["TextBox127"] = {}
+		return self._TextBox127
+	@TextBox127.setter
+	def TextBox127(self, new_state):
+		self._setter_access_tracker["TextBox127"] = {}
+		global default_state
+		self._TextBox127 = TextBox(new_state, default_state["TextBox127"])
+
+	@property
+	def TextBox128(self):
+		self._getter_access_tracker["TextBox128"] = {}
+		return self._TextBox128
+	@TextBox128.setter
+	def TextBox128(self, new_state):
+		self._setter_access_tracker["TextBox128"] = {}
+		global default_state
+		self._TextBox128 = TextBox(new_state, default_state["TextBox128"])
+
+	@property
+	def TextBox151(self):
+		self._getter_access_tracker["TextBox151"] = {}
+		return self._TextBox151
+	@TextBox151.setter
+	def TextBox151(self, new_state):
+		self._setter_access_tracker["TextBox151"] = {}
+		global default_state
+		self._TextBox151 = TextBox(new_state, default_state["TextBox151"])
+
+	@property
+	def TextBox145(self):
+		self._getter_access_tracker["TextBox145"] = {}
+		return self._TextBox145
+	@TextBox145.setter
+	def TextBox145(self, new_state):
+		self._setter_access_tracker["TextBox145"] = {}
+		global default_state
+		self._TextBox145 = TextBox(new_state, default_state["TextBox145"])
+
+	@property
+	def TextBox146(self):
+		self._getter_access_tracker["TextBox146"] = {}
+		return self._TextBox146
+	@TextBox146.setter
+	def TextBox146(self, new_state):
+		self._setter_access_tracker["TextBox146"] = {}
+		global default_state
+		self._TextBox146 = TextBox(new_state, default_state["TextBox146"])
+
+	@property
+	def TextBox147(self):
+		self._getter_access_tracker["TextBox147"] = {}
+		return self._TextBox147
+	@TextBox147.setter
+	def TextBox147(self, new_state):
+		self._setter_access_tracker["TextBox147"] = {}
+		global default_state
+		self._TextBox147 = TextBox(new_state, default_state["TextBox147"])
+
+	@property
+	def TextBox152(self):
+		self._getter_access_tracker["TextBox152"] = {}
+		return self._TextBox152
+	@TextBox152.setter
+	def TextBox152(self, new_state):
+		self._setter_access_tracker["TextBox152"] = {}
+		global default_state
+		self._TextBox152 = TextBox(new_state, default_state["TextBox152"])
+
+	@property
+	def TextBox148(self):
+		self._getter_access_tracker["TextBox148"] = {}
+		return self._TextBox148
+	@TextBox148.setter
+	def TextBox148(self, new_state):
+		self._setter_access_tracker["TextBox148"] = {}
+		global default_state
+		self._TextBox148 = TextBox(new_state, default_state["TextBox148"])
+
+	@property
+	def TextBox149(self):
+		self._getter_access_tracker["TextBox149"] = {}
+		return self._TextBox149
+	@TextBox149.setter
+	def TextBox149(self, new_state):
+		self._setter_access_tracker["TextBox149"] = {}
+		global default_state
+		self._TextBox149 = TextBox(new_state, default_state["TextBox149"])
+
+	@property
+	def TextBox140(self):
+		self._getter_access_tracker["TextBox140"] = {}
+		return self._TextBox140
+	@TextBox140.setter
+	def TextBox140(self, new_state):
+		self._setter_access_tracker["TextBox140"] = {}
+		global default_state
+		self._TextBox140 = TextBox(new_state, default_state["TextBox140"])
+
+	@property
+	def TextBox141(self):
+		self._getter_access_tracker["TextBox141"] = {}
+		return self._TextBox141
+	@TextBox141.setter
+	def TextBox141(self, new_state):
+		self._setter_access_tracker["TextBox141"] = {}
+		global default_state
+		self._TextBox141 = TextBox(new_state, default_state["TextBox141"])
+
+	@property
+	def TextBox150(self):
+		self._getter_access_tracker["TextBox150"] = {}
+		return self._TextBox150
+	@TextBox150.setter
+	def TextBox150(self, new_state):
+		self._setter_access_tracker["TextBox150"] = {}
+		global default_state
+		self._TextBox150 = TextBox(new_state, default_state["TextBox150"])
+
+	@property
+	def TextBox142(self):
+		self._getter_access_tracker["TextBox142"] = {}
+		return self._TextBox142
+	@TextBox142.setter
+	def TextBox142(self, new_state):
+		self._setter_access_tracker["TextBox142"] = {}
+		global default_state
+		self._TextBox142 = TextBox(new_state, default_state["TextBox142"])
+
+	@property
+	def TextBox143(self):
+		self._getter_access_tracker["TextBox143"] = {}
+		return self._TextBox143
+	@TextBox143.setter
+	def TextBox143(self, new_state):
+		self._setter_access_tracker["TextBox143"] = {}
+		global default_state
+		self._TextBox143 = TextBox(new_state, default_state["TextBox143"])
+
+	@property
+	def TextBox144(self):
+		self._getter_access_tracker["TextBox144"] = {}
+		return self._TextBox144
+	@TextBox144.setter
+	def TextBox144(self, new_state):
+		self._setter_access_tracker["TextBox144"] = {}
+		global default_state
+		self._TextBox144 = TextBox(new_state, default_state["TextBox144"])
+
+	@property
+	def TextBox154(self):
+		self._getter_access_tracker["TextBox154"] = {}
+		return self._TextBox154
+	@TextBox154.setter
+	def TextBox154(self, new_state):
+		self._setter_access_tracker["TextBox154"] = {}
+		global default_state
+		self._TextBox154 = TextBox(new_state, default_state["TextBox154"])
+
+	@property
+	def Image36(self):
+		self._getter_access_tracker["Image36"] = {}
+		return self._Image36
+	@Image36.setter
+	def Image36(self, new_state):
+		self._setter_access_tracker["Image36"] = {}
+		global default_state
+		self._Image36 = Image(new_state, default_state["Image36"])
+
+	@property
+	def TextBox153(self):
+		self._getter_access_tracker["TextBox153"] = {}
+		return self._TextBox153
+	@TextBox153.setter
+	def TextBox153(self, new_state):
+		self._setter_access_tracker["TextBox153"] = {}
+		global default_state
+		self._TextBox153 = TextBox(new_state, default_state["TextBox153"])
+
+	def _to_json_fields(self):
+		return {
+			"Flex115": self._Flex115,
+			"Flex113": self._Flex113,
+			"Flex106": self._Flex106,
+			"Flex99": self._Flex99,
+			"Flex100": self._Flex100,
+			"Flex107": self._Flex107,
+			"Flex101": self._Flex101,
+			"Flex102": self._Flex102,
+			"Flex108": self._Flex108,
+			"Flex114": self._Flex114,
+			"Flex109": self._Flex109,
+			"Flex103": self._Flex103,
+			"Flex110": self._Flex110,
+			"Menu2": self._Menu2,
+			"Flex98": self._Flex98,
+			"Flex104": self._Flex104,
+			"Flex111": self._Flex111,
+			"Flex105": self._Flex105,
+			"Flex112": self._Flex112,
+			"Overlay2": self._Overlay2,
+			"Flex712": self._Flex712,
+			"Flex710": self._Flex710,
+			"Flex722": self._Flex722,
+			"Flex760": self._Flex760,
+			"Flex759": self._Flex759,
+			"Flex756": self._Flex756,
+			"Flex751": self._Flex751,
+			"Flex752": self._Flex752,
+			"Flex757": self._Flex757,
+			"Flex753": self._Flex753,
+			"Flex754": self._Flex754,
+			"Flex755": self._Flex755,
+			"Flex758": self._Flex758,
+			"Flex711": self._Flex711,
+			"Flex738": self._Flex738,
+			"Flex736": self._Flex736,
+			"Flex737": self._Flex737,
+			"Flex741": self._Flex741,
+			"Flex739": self._Flex739,
+			"Flex740": self._Flex740,
+			"Flex744": self._Flex744,
+			"Flex742": self._Flex742,
+			"Flex743": self._Flex743,
+			"Flex747": self._Flex747,
+			"Flex745": self._Flex745,
+			"Flex746": self._Flex746,
+			"Flex136": self._Flex136,
+			"Flex133": self._Flex133,
+			"Flex129": self._Flex129,
+			"Flex121": self._Flex121,
+			"Flex134": self._Flex134,
+			"Flex130": self._Flex130,
+			"Flex122": self._Flex122,
+			"Flex135": self._Flex135,
+			"Flex131": self._Flex131,
+			"Flex123": self._Flex123,
+			"Flex124": self._Flex124,
+			"Flex116": self._Flex116,
+			"Flex132": self._Flex132,
+			"Flex125": self._Flex125,
+			"Flex117": self._Flex117,
+			"Flex126": self._Flex126,
+			"Flex118": self._Flex118,
+			"Flex127": self._Flex127,
+			"Flex119": self._Flex119,
+			"Flex128": self._Flex128,
+			"Flex120": self._Flex120,
+			"Flex152": self._Flex152,
+			"Flex150": self._Flex150,
+			"Flex147": self._Flex147,
+			"Flex143": self._Flex143,
+			"Flex139": self._Flex139,
+			"Flex144": self._Flex144,
+			"Flex140": self._Flex140,
+			"Flex148": self._Flex148,
+			"Flex145": self._Flex145,
+			"Flex141": self._Flex141,
+			"Flex137": self._Flex137,
+			"Flex146": self._Flex146,
+			"Flex142": self._Flex142,
+			"Flex138": self._Flex138,
+			"Flex151": self._Flex151,
+			"Flex149": self._Flex149,
+			"Image29": self._Image29,
+			"Image26": self._Image26,
+			"TextBox107": self._TextBox107,
+			"TextBox108": self._TextBox108,
+			"TextBox109": self._TextBox109,
+			"TextBox110": self._TextBox110,
+			"TextBox111": self._TextBox111,
+			"TextBox112": self._TextBox112,
+			"TextBox113": self._TextBox113,
+			"TextBox116": self._TextBox116,
+			"TextBox117": self._TextBox117,
+			"TextBox114": self._TextBox114,
+			"TextBox115": self._TextBox115,
+			"TextBox103": self._TextBox103,
+			"TextBox104": self._TextBox104,
+			"TextBox105": self._TextBox105,
+			"TextBox106": self._TextBox106,
+			"Button7": self._Button7,
+			"Image27": self._Image27,
+			"TextBox118": self._TextBox118,
+			"Image28": self._Image28,
+			"Image314": self._Image314,
+			"Image313": self._Image313,
+			"TextBox493": self._TextBox493,
+			"Image310": self._Image310,
+			"Image311": self._Image311,
+			"Image312": self._Image312,
+			"Button229": self._Button229,
+			"Button230": self._Button230,
+			"Button231": self._Button231,
+			"TextBox494": self._TextBox494,
+			"TextBox495": self._TextBox495,
+			"Button228": self._Button228,
+			"TextBox482": self._TextBox482,
+			"Upload2": self._Upload2,
+			"TextBox483": self._TextBox483,
+			"Upload1": self._Upload1,
+			"TextBox484": self._TextBox484,
+			"Input11": self._Input11,
+			"TextBox492": self._TextBox492,
+			"Input12": self._Input12,
+			"TextBox485": self._TextBox485,
+			"TextBox486": self._TextBox486,
+			"Input13": self._Input13,
+			"Input14": self._Input14,
+			"TextBox487": self._TextBox487,
+			"TextBox488": self._TextBox488,
+			"Input15": self._Input15,
+			"Input16": self._Input16,
+			"TextBox489": self._TextBox489,
+			"Button8": self._Button8,
+			"TextBox138": self._TextBox138,
+			"TextBox129": self._TextBox129,
+			"TextBox130": self._TextBox130,
+			"TextBox139": self._TextBox139,
+			"TextBox131": self._TextBox131,
+			"TextBox132": self._TextBox132,
+			"Image31": self._Image31,
+			"Image32": self._Image32,
+			"Image33": self._Image33,
+			"Image34": self._Image34,
+			"Image35": self._Image35,
+			"TextBox133": self._TextBox133,
+			"Image30": self._Image30,
+			"TextBox119": self._TextBox119,
+			"TextBox134": self._TextBox134,
+			"TextBox120": self._TextBox120,
+			"TextBox135": self._TextBox135,
+			"TextBox121": self._TextBox121,
+			"TextBox122": self._TextBox122,
+			"TextBox123": self._TextBox123,
+			"TextBox136": self._TextBox136,
+			"TextBox124": self._TextBox124,
+			"TextBox125": self._TextBox125,
+			"TextBox126": self._TextBox126,
+			"TextBox137": self._TextBox137,
+			"TextBox127": self._TextBox127,
+			"TextBox128": self._TextBox128,
+			"TextBox151": self._TextBox151,
+			"TextBox145": self._TextBox145,
+			"TextBox146": self._TextBox146,
+			"TextBox147": self._TextBox147,
+			"TextBox152": self._TextBox152,
+			"TextBox148": self._TextBox148,
+			"TextBox149": self._TextBox149,
+			"TextBox140": self._TextBox140,
+			"TextBox141": self._TextBox141,
+			"TextBox150": self._TextBox150,
+			"TextBox142": self._TextBox142,
+			"TextBox143": self._TextBox143,
+			"TextBox144": self._TextBox144,
+			"TextBox154": self._TextBox154,
+			"Image36": self._Image36,
+			"TextBox153": self._TextBox153,
+			}
+
+
+class FlexstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class Flex:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: FlexstylesClass = get_defined_value(state, def_state, "styles")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = FlexstylesClass(state, self._def_state["styles"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			}
+
+
+class MenustylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class MenucustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.open: bool = get_defined_value(state, def_state, "open")
+		self.iconHeight: int = get_defined_value(state, def_state, "iconHeight")
+		self.iconWidth: int = get_defined_value(state, def_state, "iconWidth")
+		self.src: str = get_defined_value(state, def_state, "src")
+		self.strokeColor: str = get_defined_value(state, def_state, "strokeColor")
+		self.gap: int = get_defined_value(state, def_state, "gap")
+		self.alignRight: bool = get_defined_value(state, def_state, "alignRight")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def open(self):
+		self._getter_access_tracker["open"] = {}
+		return self._open
+	@open.setter
+	def open(self, state):
+		self._setter_access_tracker["open"] = {}
+		self._open = state
+	@property
+	def iconHeight(self):
+		self._getter_access_tracker["iconHeight"] = {}
+		return self._iconHeight
+	@iconHeight.setter
+	def iconHeight(self, state):
+		self._setter_access_tracker["iconHeight"] = {}
+		self._iconHeight = state
+	@property
+	def iconWidth(self):
+		self._getter_access_tracker["iconWidth"] = {}
+		return self._iconWidth
+	@iconWidth.setter
+	def iconWidth(self, state):
+		self._setter_access_tracker["iconWidth"] = {}
+		self._iconWidth = state
+	@property
+	def src(self):
+		self._getter_access_tracker["src"] = {}
+		return self._src
+	@src.setter
+	def src(self, state):
+		self._setter_access_tracker["src"] = {}
+		self._src = state
+	@property
+	def strokeColor(self):
+		self._getter_access_tracker["strokeColor"] = {}
+		return self._strokeColor
+	@strokeColor.setter
+	def strokeColor(self, state):
+		self._setter_access_tracker["strokeColor"] = {}
+		self._strokeColor = state
+	@property
+	def gap(self):
+		self._getter_access_tracker["gap"] = {}
+		return self._gap
+	@gap.setter
+	def gap(self, state):
+		self._setter_access_tracker["gap"] = {}
+		self._gap = state
+	@property
+	def alignRight(self):
+		self._getter_access_tracker["alignRight"] = {}
+		return self._alignRight
+	@alignRight.setter
+	def alignRight(self, state):
+		self._setter_access_tracker["alignRight"] = {}
+		self._alignRight = state
+	def _to_json_fields(self):
+		return {
+			"open": self._open,
+			"iconHeight": self._iconHeight,
+			"iconWidth": self._iconWidth,
+			"src": self._src,
+			"strokeColor": self._strokeColor,
+			"gap": self._gap,
+			"alignRight": self._alignRight,
+			}
+
+
+class Menu:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: MenustylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: MenucustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = MenustylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = MenucustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class OverlaystylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class OverlaycustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.closeModalAfter: int = get_defined_value(state, def_state, "closeModalAfter")
+		self.open: bool = get_defined_value(state, def_state, "open")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def closeModalAfter(self):
+		self._getter_access_tracker["closeModalAfter"] = {}
+		return self._closeModalAfter
+	@closeModalAfter.setter
+	def closeModalAfter(self, state):
+		self._setter_access_tracker["closeModalAfter"] = {}
+		self._closeModalAfter = state
+	@property
+	def open(self):
+		self._getter_access_tracker["open"] = {}
+		return self._open
+	@open.setter
+	def open(self, state):
+		self._setter_access_tracker["open"] = {}
+		self._open = state
+	def _to_json_fields(self):
+		return {
+			"closeModalAfter": self._closeModalAfter,
+			"open": self._open,
+			}
+
+
+class Overlay:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.styles: OverlaystylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: OverlaycustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = OverlaystylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = OverlaycustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class ImagestylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class ImagecustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alt: str = get_defined_value(state, def_state, "alt")
+		self.src: str = get_defined_value(state, def_state, "src")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alt(self):
+		self._getter_access_tracker["alt"] = {}
+		return self._alt
+	@alt.setter
+	def alt(self, state):
+		self._setter_access_tracker["alt"] = {}
+		self._alt = state
+	@property
+	def src(self):
+		self._getter_access_tracker["src"] = {}
+		return self._src
+	@src.setter
+	def src(self, state):
+		self._setter_access_tracker["src"] = {}
+		self._src = state
+	def _to_json_fields(self):
+		return {
+			"alt": self._alt,
+			"src": self._src,
+			}
+
+
+class Image:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: ImagestylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: ImagecustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = ImagestylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = ImagecustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class TextBoxstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class TextBoxcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.text: str = get_defined_value(state, def_state, "text")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	def _to_json_fields(self):
+		return {
+			"text": self._text,
+			}
+
+
+class TextBox:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: TextBoxstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: TextBoxcustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = TextBoxstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = TextBoxcustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class ButtonstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class ButtoncustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.text: str = get_defined_value(state, def_state, "text")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	def _to_json_fields(self):
+		return {
+			"text": self._text,
+			}
+
+
+class Button:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onClick = False
+		self.styles: ButtonstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: ButtoncustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = ButtonstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = ButtoncustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
+
+class UploadstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.display: str = get_defined_value(state, def_state, "display")
+		self.flexDirection: str = get_defined_value(state, def_state, "flexDirection")
+		self.alignItems: str = get_defined_value(state, def_state, "alignItems")
+		self.justifyContent: str = get_defined_value(state, def_state, "justifyContent")
+		self.flexWrap: str = get_defined_value(state, def_state, "flexWrap")
+		self.alignContent: str = get_defined_value(state, def_state, "alignContent")
+		self.rowGap: str = get_defined_value(state, def_state, "rowGap")
+		self.columnGap: str = get_defined_value(state, def_state, "columnGap")
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def display(self):
+		self._getter_access_tracker["display"] = {}
+		return self._display
+	@display.setter
+	def display(self, state):
+		self._setter_access_tracker["display"] = {}
+		self._display = state
+	@property
+	def flexDirection(self):
+		self._getter_access_tracker["flexDirection"] = {}
+		return self._flexDirection
+	@flexDirection.setter
+	def flexDirection(self, state):
+		self._setter_access_tracker["flexDirection"] = {}
+		self._flexDirection = state
+	@property
+	def alignItems(self):
+		self._getter_access_tracker["alignItems"] = {}
+		return self._alignItems
+	@alignItems.setter
+	def alignItems(self, state):
+		self._setter_access_tracker["alignItems"] = {}
+		self._alignItems = state
+	@property
+	def justifyContent(self):
+		self._getter_access_tracker["justifyContent"] = {}
+		return self._justifyContent
+	@justifyContent.setter
+	def justifyContent(self, state):
+		self._setter_access_tracker["justifyContent"] = {}
+		self._justifyContent = state
+	@property
+	def flexWrap(self):
+		self._getter_access_tracker["flexWrap"] = {}
+		return self._flexWrap
+	@flexWrap.setter
+	def flexWrap(self, state):
+		self._setter_access_tracker["flexWrap"] = {}
+		self._flexWrap = state
+	@property
+	def alignContent(self):
+		self._getter_access_tracker["alignContent"] = {}
+		return self._alignContent
+	@alignContent.setter
+	def alignContent(self, state):
+		self._setter_access_tracker["alignContent"] = {}
+		self._alignContent = state
+	@property
+	def rowGap(self):
+		self._getter_access_tracker["rowGap"] = {}
+		return self._rowGap
+	@rowGap.setter
+	def rowGap(self, state):
+		self._setter_access_tracker["rowGap"] = {}
+		self._rowGap = state
+	@property
+	def columnGap(self):
+		self._getter_access_tracker["columnGap"] = {}
+		return self._columnGap
+	@columnGap.setter
+	def columnGap(self, state):
+		self._setter_access_tracker["columnGap"] = {}
+		self._columnGap = state
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"display": self._display,
+			"flexDirection": self._flexDirection,
+			"alignItems": self._alignItems,
+			"justifyContent": self._justifyContent,
+			"flexWrap": self._flexWrap,
+			"alignContent": self._alignContent,
+			"rowGap": self._rowGap,
+			"columnGap": self._columnGap,
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class UploadcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.multiple: bool = get_defined_value(state, def_state, "multiple")
+		self.showFilename: bool = get_defined_value(state, def_state, "showFilename")
+		self.text: str = get_defined_value(state, def_state, "text")
+		self.disabled: bool = get_defined_value(state, def_state, "disabled")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def multiple(self):
+		self._getter_access_tracker["multiple"] = {}
+		return self._multiple
+	@multiple.setter
+	def multiple(self, state):
+		self._setter_access_tracker["multiple"] = {}
+		self._multiple = state
+	@property
+	def showFilename(self):
+		self._getter_access_tracker["showFilename"] = {}
+		return self._showFilename
+	@showFilename.setter
+	def showFilename(self, state):
+		self._setter_access_tracker["showFilename"] = {}
+		self._showFilename = state
+	@property
+	def text(self):
+		self._getter_access_tracker["text"] = {}
+		return self._text
+	@text.setter
+	def text(self, state):
+		self._setter_access_tracker["text"] = {}
+		self._text = state
+	@property
+	def disabled(self):
+		self._getter_access_tracker["disabled"] = {}
+		return self._disabled
+	@disabled.setter
+	def disabled(self, state):
+		self._setter_access_tracker["disabled"] = {}
+		self._disabled = state
+	def _to_json_fields(self):
+		return {
+			"multiple": self._multiple,
+			"showFilename": self._showFilename,
+			"text": self._text,
+			"disabled": self._disabled,
+			}
+
+
+class UploadioClass:
+	def __init__(self):
+
+		self.files: Optional[List[UploadFile]] = None
+
+
+
+
+class Upload:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onChange = False
+		self.onClick = False
+		self.styles: UploadstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: UploadcustomClass = get_defined_value(state, def_state, "custom")
+		self.io: UploadioClass = UploadioClass()
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = UploadstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = UploadcustomClass(state, self._def_state["custom"])
+
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+
+			}
+
+
+class InputstylesClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.alignSelf: str = get_defined_value(state, def_state, "alignSelf")
+		self.flexGrow: str = get_defined_value(state, def_state, "flexGrow")
+		self.flexShrink: str = get_defined_value(state, def_state, "flexShrink")
+		self.order: str = get_defined_value(state, def_state, "order")
+		self.marginTop: str = get_defined_value(state, def_state, "marginTop")
+		self.marginBottom: str = get_defined_value(state, def_state, "marginBottom")
+		self.marginRight: str = get_defined_value(state, def_state, "marginRight")
+		self.marginLeft: str = get_defined_value(state, def_state, "marginLeft")
+		self.paddingTop: str = get_defined_value(state, def_state, "paddingTop")
+		self.paddingBottom: str = get_defined_value(state, def_state, "paddingBottom")
+		self.paddingRight: str = get_defined_value(state, def_state, "paddingRight")
+		self.paddingLeft: str = get_defined_value(state, def_state, "paddingLeft")
+		self.width: str = get_defined_value(state, def_state, "width")
+		self.height: str = get_defined_value(state, def_state, "height")
+		self.minWidth: str = get_defined_value(state, def_state, "minWidth")
+		self.minHeight: str = get_defined_value(state, def_state, "minHeight")
+		self.maxWidth: str = get_defined_value(state, def_state, "maxWidth")
+		self.maxHeight: str = get_defined_value(state, def_state, "maxHeight")
+		self.overflow: str = get_defined_value(state, def_state, "overflow")
+		self.fontFamily: str = get_defined_value(state, def_state, "fontFamily")
+		self.fontWeight: int = get_defined_value(state, def_state, "fontWeight")
+		self.fontSize: str = get_defined_value(state, def_state, "fontSize")
+		self.textAlign: str = get_defined_value(state, def_state, "textAlign")
+		self.color: str = get_defined_value(state, def_state, "color")
+		self.opacity: str = get_defined_value(state, def_state, "opacity")
+		self.fontStyle: str = get_defined_value(state, def_state, "fontStyle")
+		self.borderRadius: str = get_defined_value(state, def_state, "borderRadius")
+		self.borderWidth: str = get_defined_value(state, def_state, "borderWidth")
+		self.borderStyle: str = get_defined_value(state, def_state, "borderStyle")
+		self.borderColor: str = get_defined_value(state, def_state, "borderColor")
+		self.backgroundImage: str = get_defined_value(state, def_state, "backgroundImage")
+		self.backgroundColor: str = get_defined_value(state, def_state, "backgroundColor")
+		self.backgroundClip: str = get_defined_value(state, def_state, "backgroundClip")
+		self.backgroundOrigin: str = get_defined_value(state, def_state, "backgroundOrigin")
+		self.backgroundAttachment: str = get_defined_value(state, def_state, "backgroundAttachment")
+		self.backgroundPositionX: str = get_defined_value(state, def_state, "backgroundPositionX")
+		self.backgroundPositionY: str = get_defined_value(state, def_state, "backgroundPositionY")
+		self.backgroundRepeat: str = get_defined_value(state, def_state, "backgroundRepeat")
+		self.position: str = get_defined_value(state, def_state, "position")
+		self.float: str = get_defined_value(state, def_state, "float")
+		self.clear: str = get_defined_value(state, def_state, "clear")
+		self.top: str = get_defined_value(state, def_state, "top")
+		self.left: str = get_defined_value(state, def_state, "left")
+		self.bottom: str = get_defined_value(state, def_state, "bottom")
+		self.right: str = get_defined_value(state, def_state, "right")
+		self.zIndex: str = get_defined_value(state, def_state, "zIndex")
+		self.outlineStyle: str = get_defined_value(state, def_state, "outlineStyle")
+		self.outlineColor: str = get_defined_value(state, def_state, "outlineColor")
+		self.outlineOffset: str = get_defined_value(state, def_state, "outlineOffset")
+		self.outlineWidth: str = get_defined_value(state, def_state, "outlineWidth")
+		self.cursor: str = get_defined_value(state, def_state, "cursor")
+		self.boxSizing: str = get_defined_value(state, def_state, "boxSizing")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def alignSelf(self):
+		self._getter_access_tracker["alignSelf"] = {}
+		return self._alignSelf
+	@alignSelf.setter
+	def alignSelf(self, state):
+		self._setter_access_tracker["alignSelf"] = {}
+		self._alignSelf = state
+	@property
+	def flexGrow(self):
+		self._getter_access_tracker["flexGrow"] = {}
+		return self._flexGrow
+	@flexGrow.setter
+	def flexGrow(self, state):
+		self._setter_access_tracker["flexGrow"] = {}
+		self._flexGrow = state
+	@property
+	def flexShrink(self):
+		self._getter_access_tracker["flexShrink"] = {}
+		return self._flexShrink
+	@flexShrink.setter
+	def flexShrink(self, state):
+		self._setter_access_tracker["flexShrink"] = {}
+		self._flexShrink = state
+	@property
+	def order(self):
+		self._getter_access_tracker["order"] = {}
+		return self._order
+	@order.setter
+	def order(self, state):
+		self._setter_access_tracker["order"] = {}
+		self._order = state
+	@property
+	def marginTop(self):
+		self._getter_access_tracker["marginTop"] = {}
+		return self._marginTop
+	@marginTop.setter
+	def marginTop(self, state):
+		self._setter_access_tracker["marginTop"] = {}
+		self._marginTop = state
+	@property
+	def marginBottom(self):
+		self._getter_access_tracker["marginBottom"] = {}
+		return self._marginBottom
+	@marginBottom.setter
+	def marginBottom(self, state):
+		self._setter_access_tracker["marginBottom"] = {}
+		self._marginBottom = state
+	@property
+	def marginRight(self):
+		self._getter_access_tracker["marginRight"] = {}
+		return self._marginRight
+	@marginRight.setter
+	def marginRight(self, state):
+		self._setter_access_tracker["marginRight"] = {}
+		self._marginRight = state
+	@property
+	def marginLeft(self):
+		self._getter_access_tracker["marginLeft"] = {}
+		return self._marginLeft
+	@marginLeft.setter
+	def marginLeft(self, state):
+		self._setter_access_tracker["marginLeft"] = {}
+		self._marginLeft = state
+	@property
+	def paddingTop(self):
+		self._getter_access_tracker["paddingTop"] = {}
+		return self._paddingTop
+	@paddingTop.setter
+	def paddingTop(self, state):
+		self._setter_access_tracker["paddingTop"] = {}
+		self._paddingTop = state
+	@property
+	def paddingBottom(self):
+		self._getter_access_tracker["paddingBottom"] = {}
+		return self._paddingBottom
+	@paddingBottom.setter
+	def paddingBottom(self, state):
+		self._setter_access_tracker["paddingBottom"] = {}
+		self._paddingBottom = state
+	@property
+	def paddingRight(self):
+		self._getter_access_tracker["paddingRight"] = {}
+		return self._paddingRight
+	@paddingRight.setter
+	def paddingRight(self, state):
+		self._setter_access_tracker["paddingRight"] = {}
+		self._paddingRight = state
+	@property
+	def paddingLeft(self):
+		self._getter_access_tracker["paddingLeft"] = {}
+		return self._paddingLeft
+	@paddingLeft.setter
+	def paddingLeft(self, state):
+		self._setter_access_tracker["paddingLeft"] = {}
+		self._paddingLeft = state
+	@property
+	def width(self):
+		self._getter_access_tracker["width"] = {}
+		return self._width
+	@width.setter
+	def width(self, state):
+		self._setter_access_tracker["width"] = {}
+		self._width = state
+	@property
+	def height(self):
+		self._getter_access_tracker["height"] = {}
+		return self._height
+	@height.setter
+	def height(self, state):
+		self._setter_access_tracker["height"] = {}
+		self._height = state
+	@property
+	def minWidth(self):
+		self._getter_access_tracker["minWidth"] = {}
+		return self._minWidth
+	@minWidth.setter
+	def minWidth(self, state):
+		self._setter_access_tracker["minWidth"] = {}
+		self._minWidth = state
+	@property
+	def minHeight(self):
+		self._getter_access_tracker["minHeight"] = {}
+		return self._minHeight
+	@minHeight.setter
+	def minHeight(self, state):
+		self._setter_access_tracker["minHeight"] = {}
+		self._minHeight = state
+	@property
+	def maxWidth(self):
+		self._getter_access_tracker["maxWidth"] = {}
+		return self._maxWidth
+	@maxWidth.setter
+	def maxWidth(self, state):
+		self._setter_access_tracker["maxWidth"] = {}
+		self._maxWidth = state
+	@property
+	def maxHeight(self):
+		self._getter_access_tracker["maxHeight"] = {}
+		return self._maxHeight
+	@maxHeight.setter
+	def maxHeight(self, state):
+		self._setter_access_tracker["maxHeight"] = {}
+		self._maxHeight = state
+	@property
+	def overflow(self):
+		self._getter_access_tracker["overflow"] = {}
+		return self._overflow
+	@overflow.setter
+	def overflow(self, state):
+		self._setter_access_tracker["overflow"] = {}
+		self._overflow = state
+	@property
+	def fontFamily(self):
+		self._getter_access_tracker["fontFamily"] = {}
+		return self._fontFamily
+	@fontFamily.setter
+	def fontFamily(self, state):
+		self._setter_access_tracker["fontFamily"] = {}
+		self._fontFamily = state
+	@property
+	def fontWeight(self):
+		self._getter_access_tracker["fontWeight"] = {}
+		return self._fontWeight
+	@fontWeight.setter
+	def fontWeight(self, state):
+		self._setter_access_tracker["fontWeight"] = {}
+		self._fontWeight = state
+	@property
+	def fontSize(self):
+		self._getter_access_tracker["fontSize"] = {}
+		return self._fontSize
+	@fontSize.setter
+	def fontSize(self, state):
+		self._setter_access_tracker["fontSize"] = {}
+		self._fontSize = state
+	@property
+	def textAlign(self):
+		self._getter_access_tracker["textAlign"] = {}
+		return self._textAlign
+	@textAlign.setter
+	def textAlign(self, state):
+		self._setter_access_tracker["textAlign"] = {}
+		self._textAlign = state
+	@property
+	def color(self):
+		self._getter_access_tracker["color"] = {}
+		return self._color
+	@color.setter
+	def color(self, state):
+		self._setter_access_tracker["color"] = {}
+		self._color = state
+	@property
+	def opacity(self):
+		self._getter_access_tracker["opacity"] = {}
+		return self._opacity
+	@opacity.setter
+	def opacity(self, state):
+		self._setter_access_tracker["opacity"] = {}
+		self._opacity = state
+	@property
+	def fontStyle(self):
+		self._getter_access_tracker["fontStyle"] = {}
+		return self._fontStyle
+	@fontStyle.setter
+	def fontStyle(self, state):
+		self._setter_access_tracker["fontStyle"] = {}
+		self._fontStyle = state
+	@property
+	def borderRadius(self):
+		self._getter_access_tracker["borderRadius"] = {}
+		return self._borderRadius
+	@borderRadius.setter
+	def borderRadius(self, state):
+		self._setter_access_tracker["borderRadius"] = {}
+		self._borderRadius = state
+	@property
+	def borderWidth(self):
+		self._getter_access_tracker["borderWidth"] = {}
+		return self._borderWidth
+	@borderWidth.setter
+	def borderWidth(self, state):
+		self._setter_access_tracker["borderWidth"] = {}
+		self._borderWidth = state
+	@property
+	def borderStyle(self):
+		self._getter_access_tracker["borderStyle"] = {}
+		return self._borderStyle
+	@borderStyle.setter
+	def borderStyle(self, state):
+		self._setter_access_tracker["borderStyle"] = {}
+		self._borderStyle = state
+	@property
+	def borderColor(self):
+		self._getter_access_tracker["borderColor"] = {}
+		return self._borderColor
+	@borderColor.setter
+	def borderColor(self, state):
+		self._setter_access_tracker["borderColor"] = {}
+		self._borderColor = state
+	@property
+	def backgroundImage(self):
+		self._getter_access_tracker["backgroundImage"] = {}
+		return self._backgroundImage
+	@backgroundImage.setter
+	def backgroundImage(self, state):
+		self._setter_access_tracker["backgroundImage"] = {}
+		self._backgroundImage = state
+	@property
+	def backgroundColor(self):
+		self._getter_access_tracker["backgroundColor"] = {}
+		return self._backgroundColor
+	@backgroundColor.setter
+	def backgroundColor(self, state):
+		self._setter_access_tracker["backgroundColor"] = {}
+		self._backgroundColor = state
+	@property
+	def backgroundClip(self):
+		self._getter_access_tracker["backgroundClip"] = {}
+		return self._backgroundClip
+	@backgroundClip.setter
+	def backgroundClip(self, state):
+		self._setter_access_tracker["backgroundClip"] = {}
+		self._backgroundClip = state
+	@property
+	def backgroundOrigin(self):
+		self._getter_access_tracker["backgroundOrigin"] = {}
+		return self._backgroundOrigin
+	@backgroundOrigin.setter
+	def backgroundOrigin(self, state):
+		self._setter_access_tracker["backgroundOrigin"] = {}
+		self._backgroundOrigin = state
+	@property
+	def backgroundAttachment(self):
+		self._getter_access_tracker["backgroundAttachment"] = {}
+		return self._backgroundAttachment
+	@backgroundAttachment.setter
+	def backgroundAttachment(self, state):
+		self._setter_access_tracker["backgroundAttachment"] = {}
+		self._backgroundAttachment = state
+	@property
+	def backgroundPositionX(self):
+		self._getter_access_tracker["backgroundPositionX"] = {}
+		return self._backgroundPositionX
+	@backgroundPositionX.setter
+	def backgroundPositionX(self, state):
+		self._setter_access_tracker["backgroundPositionX"] = {}
+		self._backgroundPositionX = state
+	@property
+	def backgroundPositionY(self):
+		self._getter_access_tracker["backgroundPositionY"] = {}
+		return self._backgroundPositionY
+	@backgroundPositionY.setter
+	def backgroundPositionY(self, state):
+		self._setter_access_tracker["backgroundPositionY"] = {}
+		self._backgroundPositionY = state
+	@property
+	def backgroundRepeat(self):
+		self._getter_access_tracker["backgroundRepeat"] = {}
+		return self._backgroundRepeat
+	@backgroundRepeat.setter
+	def backgroundRepeat(self, state):
+		self._setter_access_tracker["backgroundRepeat"] = {}
+		self._backgroundRepeat = state
+	@property
+	def position(self):
+		self._getter_access_tracker["position"] = {}
+		return self._position
+	@position.setter
+	def position(self, state):
+		self._setter_access_tracker["position"] = {}
+		self._position = state
+	@property
+	def float(self):
+		self._getter_access_tracker["float"] = {}
+		return self._float
+	@float.setter
+	def float(self, state):
+		self._setter_access_tracker["float"] = {}
+		self._float = state
+	@property
+	def clear(self):
+		self._getter_access_tracker["clear"] = {}
+		return self._clear
+	@clear.setter
+	def clear(self, state):
+		self._setter_access_tracker["clear"] = {}
+		self._clear = state
+	@property
+	def top(self):
+		self._getter_access_tracker["top"] = {}
+		return self._top
+	@top.setter
+	def top(self, state):
+		self._setter_access_tracker["top"] = {}
+		self._top = state
+	@property
+	def left(self):
+		self._getter_access_tracker["left"] = {}
+		return self._left
+	@left.setter
+	def left(self, state):
+		self._setter_access_tracker["left"] = {}
+		self._left = state
+	@property
+	def bottom(self):
+		self._getter_access_tracker["bottom"] = {}
+		return self._bottom
+	@bottom.setter
+	def bottom(self, state):
+		self._setter_access_tracker["bottom"] = {}
+		self._bottom = state
+	@property
+	def right(self):
+		self._getter_access_tracker["right"] = {}
+		return self._right
+	@right.setter
+	def right(self, state):
+		self._setter_access_tracker["right"] = {}
+		self._right = state
+	@property
+	def zIndex(self):
+		self._getter_access_tracker["zIndex"] = {}
+		return self._zIndex
+	@zIndex.setter
+	def zIndex(self, state):
+		self._setter_access_tracker["zIndex"] = {}
+		self._zIndex = state
+	@property
+	def outlineStyle(self):
+		self._getter_access_tracker["outlineStyle"] = {}
+		return self._outlineStyle
+	@outlineStyle.setter
+	def outlineStyle(self, state):
+		self._setter_access_tracker["outlineStyle"] = {}
+		self._outlineStyle = state
+	@property
+	def outlineColor(self):
+		self._getter_access_tracker["outlineColor"] = {}
+		return self._outlineColor
+	@outlineColor.setter
+	def outlineColor(self, state):
+		self._setter_access_tracker["outlineColor"] = {}
+		self._outlineColor = state
+	@property
+	def outlineOffset(self):
+		self._getter_access_tracker["outlineOffset"] = {}
+		return self._outlineOffset
+	@outlineOffset.setter
+	def outlineOffset(self, state):
+		self._setter_access_tracker["outlineOffset"] = {}
+		self._outlineOffset = state
+	@property
+	def outlineWidth(self):
+		self._getter_access_tracker["outlineWidth"] = {}
+		return self._outlineWidth
+	@outlineWidth.setter
+	def outlineWidth(self, state):
+		self._setter_access_tracker["outlineWidth"] = {}
+		self._outlineWidth = state
+	@property
+	def cursor(self):
+		self._getter_access_tracker["cursor"] = {}
+		return self._cursor
+	@cursor.setter
+	def cursor(self, state):
+		self._setter_access_tracker["cursor"] = {}
+		self._cursor = state
+	@property
+	def boxSizing(self):
+		self._getter_access_tracker["boxSizing"] = {}
+		return self._boxSizing
+	@boxSizing.setter
+	def boxSizing(self, state):
+		self._setter_access_tracker["boxSizing"] = {}
+		self._boxSizing = state
+	def _to_json_fields(self):
+		return {
+			"alignSelf": self._alignSelf,
+			"flexGrow": self._flexGrow,
+			"flexShrink": self._flexShrink,
+			"order": self._order,
+			"marginTop": self._marginTop,
+			"marginBottom": self._marginBottom,
+			"marginRight": self._marginRight,
+			"marginLeft": self._marginLeft,
+			"paddingTop": self._paddingTop,
+			"paddingBottom": self._paddingBottom,
+			"paddingRight": self._paddingRight,
+			"paddingLeft": self._paddingLeft,
+			"width": self._width,
+			"height": self._height,
+			"minWidth": self._minWidth,
+			"minHeight": self._minHeight,
+			"maxWidth": self._maxWidth,
+			"maxHeight": self._maxHeight,
+			"overflow": self._overflow,
+			"fontFamily": self._fontFamily,
+			"fontWeight": self._fontWeight,
+			"fontSize": self._fontSize,
+			"textAlign": self._textAlign,
+			"color": self._color,
+			"opacity": self._opacity,
+			"fontStyle": self._fontStyle,
+			"borderRadius": self._borderRadius,
+			"borderWidth": self._borderWidth,
+			"borderStyle": self._borderStyle,
+			"borderColor": self._borderColor,
+			"backgroundImage": self._backgroundImage,
+			"backgroundColor": self._backgroundColor,
+			"backgroundClip": self._backgroundClip,
+			"backgroundOrigin": self._backgroundOrigin,
+			"backgroundAttachment": self._backgroundAttachment,
+			"backgroundPositionX": self._backgroundPositionX,
+			"backgroundPositionY": self._backgroundPositionY,
+			"backgroundRepeat": self._backgroundRepeat,
+			"position": self._position,
+			"float": self._float,
+			"clear": self._clear,
+			"top": self._top,
+			"left": self._left,
+			"bottom": self._bottom,
+			"right": self._right,
+			"zIndex": self._zIndex,
+			"outlineStyle": self._outlineStyle,
+			"outlineColor": self._outlineColor,
+			"outlineOffset": self._outlineOffset,
+			"outlineWidth": self._outlineWidth,
+			"cursor": self._cursor,
+			"boxSizing": self._boxSizing,
+			}
+
+
+class InputcustomClass:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+
+		self.value: str = get_defined_value(state, def_state, "value")
+		self.placeholder: str = get_defined_value(state, def_state, "placeholder")
+		self.isPasswordField: bool = get_defined_value(state, def_state, "isPasswordField")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def value(self):
+		self._getter_access_tracker["value"] = {}
+		return self._value
+	@value.setter
+	def value(self, state):
+		self._setter_access_tracker["value"] = {}
+		self._value = state
+	@property
+	def placeholder(self):
+		self._getter_access_tracker["placeholder"] = {}
+		return self._placeholder
+	@placeholder.setter
+	def placeholder(self, state):
+		self._setter_access_tracker["placeholder"] = {}
+		self._placeholder = state
+	@property
+	def isPasswordField(self):
+		self._getter_access_tracker["isPasswordField"] = {}
+		return self._isPasswordField
+	@isPasswordField.setter
+	def isPasswordField(self, state):
+		self._setter_access_tracker["isPasswordField"] = {}
+		self._isPasswordField = state
+	def _to_json_fields(self):
+		return {
+			"value": self._value,
+			"placeholder": self._placeholder,
+			"isPasswordField": self._isPasswordField,
+			}
+
+
+class Input:
+	def __init__(self, state, def_state):
+		self._setter_access_tracker = {}
+		self._def_state = def_state
+		self.onChange = False
+		self.onPressEnter = False
+		self.styles: InputstylesClass = get_defined_value(state, def_state, "styles")
+		self.custom: InputcustomClass = get_defined_value(state, def_state, "custom")
+		self._setter_access_tracker = {}
+		self._getter_access_tracker = {}
+
+	@property
+	def styles(self):
+		self._getter_access_tracker["styles"] = {}
+		return self._styles
+	@styles.setter
+	def styles(self, state):
+		self._setter_access_tracker["styles"] = {}
+		self._styles = InputstylesClass(state, self._def_state["styles"])
+	@property
+	def custom(self):
+		self._getter_access_tracker["custom"] = {}
+		return self._custom
+	@custom.setter
+	def custom(self, state):
+		self._setter_access_tracker["custom"] = {}
+		self._custom = InputcustomClass(state, self._def_state["custom"])
+	def _to_json_fields(self):
+		return {
+			"styles": self._styles,
+			"custom": self._custom,
+			}
+
